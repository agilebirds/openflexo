{
    attributes = (
        {columnName = categoryID; name = categoryID; prototypeName = id; }, 
        {columnName = videoID; name = videoID; prototypeName = id; }
    ); 
    className = MNVideoCat; 
    classProperties = (catCategory); 
    externalName = NNVideoCat; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {"_clientClassPropertyNames" = (Attribute); }; 
    name = MNVideoCat; 
    primaryKeyAttributes = (categoryID, videoID); 
    relationships = (
        {
            destination = DLRCategory; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = categoryID; sourceAttribute = categoryID; }); 
            name = catCategory; 
        }
    ); 
}
