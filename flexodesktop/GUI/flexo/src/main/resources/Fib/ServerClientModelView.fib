<?xml version="1.0" encoding="UTF-8"?>
<Panel layout="border" darkLevel="0" dataClassName="org.openflexo.rest.client.ServerRestClientModel" controllerClassName="org.openflexo.view.controller.FlexoFIBController">
  <Panel layout="border" darkLevel="0" constraints="border(location=center)">
    <Panel layout="gridbag" darkLevel="0" constraints="border(location=center)">
      <Table iteratorClassName="org.openflexo.rest.client.model.ProjectVersion" autoSelectFirstRow="false" createNewRowOnClick="false" boundToSelectionManager="false" showFooter="false" selectionMode="SingleSelection" localize="true" manageDynamicModel="true" name="versionTable" data="data.versions" constraints="gridbag(anchor=center;fill=both;gridHeight=1;gridWidth=1;gridX=-1;gridY=-1;insetsBottom=0;insetsLeft=0;insetsRight=0;insetsTop=0;padX=0;padY=0;weightX=1.0;weightY=1.0)">
        <LabelColumn data="iterator.versionNumber" title="Version" columnWidth="100" resizable="true" displayTitle="true" name="label" />
        <LabelColumn data="iterator.comment" title="comment" columnWidth="100" resizable="true" displayTitle="true" name="label" />
        <LabelColumn data="iterator.creationDate" format="data.formatDate(object)" title="creation_date" columnWidth="100" resizable="true" displayTitle="true" name="label" />
        <LabelColumn data="iterator.creator" title="creator" columnWidth="100" resizable="true" displayTitle="true" name="label" />
        <IconColumn data="data.getConsistencyIcon(iterator)" title="Consistency" columnWidth="70" resizable="false" displayTitle="true" name="icon" />
        <ButtonColumn action="data.showDocuments(iterator,controller.getWindow())" data="controller.getLocalizedForKey(&quot;show_generated_documents&quot;)" title="documents" columnWidth="100" resizable="true" displayTitle="true" name="button" />
        <ButtonColumn action="data.generateDocumentation(iterator)" enabled="((iterator.tocEntries.size &gt; 0) &amp; (data.serverProject.availableDocToken &gt; 0))" data="(((controller.getLocalizedForKey(&quot;generate_doc&quot;) + &quot; (&quot;) + data.serverProject.availableDocToken) + &quot;)&quot;)" title="generate_doc" columnWidth="100" resizable="true" displayTitle="false" name="button" />
        <IconColumn data="data.getDocumentationJobInProgress(iterator)" title="doc_in_progress" columnWidth="70" resizable="false" displayTitle="false" name="icon" />
        <ButtonColumn action="data.showPrototypes(iterator)" enabled="(iterator.protoUrl != null)" data="controller.getLocalizedForKey(&quot;show_prototypes&quot;)" title="prototypes" columnWidth="100" resizable="true" displayTitle="true" name="button" />
        <ButtonColumn action="data.generatePrototype(iterator)" enabled="(iterator.isIsProtoValidationSuccessful &amp; (data.serverProject.availableProtoToken &gt; 0))" data="(((controller.getLocalizedForKey(&quot;generate_proto&quot;) + &quot; (&quot;) + data.serverProject.availableProtoToken) + &quot;)&quot;)" title="generate_proto" columnWidth="100" resizable="true" displayTitle="false" name="button" />
        <IconColumn data="data.getPrototypeJobInProgress(iterator)" title="proto_in_progress" columnWidth="70" resizable="false" displayTitle="false" name="icon" />
      </Table>
    </Panel>
    <Panel layout="border" borderTitle="Panel" darkLevel="0" constraints="border(location=south)">
      <Panel layout="flow" hGap="5" vGap="5" flowAlignment="LEFT" darkLevel="0" constraints="border(location=center)">
        <Panel layout="buttons" hGap="5" vGap="5" cols="8" rows="1" darkLevel="0" constraints="flow()">
          <Button action="data.refresh()" buttonType="Trigger" label="refresh" localize="true" constraints="grid(x=0;y=0)" />
          <Button action="data.createProject()" buttonType="Trigger" label="send_to_server" localize="true" enable="(data.serverProject = null)" constraints="buttons()" visible="(data.serverProject = null)" />
          <Button action="data.sendProjectToServer()" buttonType="Trigger" label="send_to_server" tooltip="data.cantSendToServerReason" tooltipText="" localize="true" enable="((data.serverProject != null) &amp; ((data.session = null) | data.session.user.login.equals(data.user.login)))" constraints="grid(x=1;y=0)" visible="(data.serverProject != null)">
            <description />
          </Button>
          <Button action="data.generateDocumentation(versionTable.selected)" buttonType="Trigger" label="generate_doc" localize="true" enable="(((versionTable.selected != null) &amp; (versionTable.selected.tocEntries.size &gt; 0)) &amp; (data.serverProject.availableDocToken &gt; 0))" constraints="grid(x=2;y=0)" />
          <Button action="data.generatePrototype(versionTable.selected)" buttonType="Trigger" label="generate_proto" localize="true" enable="(((versionTable.selected != null) &amp; versionTable.selected.isIsProtoValidationSuccessful) &amp; (data.serverProject.availableProtoToken &gt; 0))" constraints="grid(x=3;y=0)" />
          <Button buttonType="Trigger" label="send_and_close_session" localize="true" constraints="buttons()" />
        </Panel>
      </Panel>
      <Panel layout="border" darkLevel="0" constraints="border(location=east)" width="35" height="30">
        <Label label="label" data="data.status" constraints="border(location=center)" name="Status" localize="true" />
      </Panel>
    </Panel>
  </Panel>
  <LocalizedDictionary>
    <Localized key="refresh" lang="English">Refresh</Localized>
    <Localized key="refresh" lang="French">Rafraichir</Localized>
    <Localized key="refresh" lang="Dutch">Refresh</Localized>
    <Localized key="Button" lang="English">Button</Localized>
    <Localized key="Button" lang="French">Bouton</Localized>
    <Localized key="Button" lang="Dutch">Knop</Localized>
    <Localized key="Version" lang="English">Version</Localized>
    <Localized key="Version" lang="French">Version</Localized>
    <Localized key="Version" lang="Dutch">Version</Localized>
    <Localized key="comment" lang="English">Comment</Localized>
    <Localized key="comment" lang="French">Commentaire</Localized>
    <Localized key="comment" lang="Dutch">Comment</Localized>
    <Localized key="creation_date" lang="English">Creation date</Localized>
    <Localized key="creation_date" lang="French">Date de création</Localized>
    <Localized key="creation_date" lang="Dutch">Aanmaak datum</Localized>
    <Localized key="creator" lang="English">Creator</Localized>
    <Localized key="creator" lang="French">Créateur</Localized>
    <Localized key="creator" lang="Dutch">Schepper</Localized>
    <Localized key="Consistency" lang="English">Consistency</Localized>
    <Localized key="Consistency" lang="French">Consistency</Localized>
    <Localized key="Consistency" lang="Dutch">Consistency</Localized>
    <Localized key="generate_doc" lang="English">Generate documentation</Localized>
    <Localized key="generate_doc" lang="French">Générer la documentation</Localized>
    <Localized key="generate_doc" lang="Dutch">Genereren documentatie</Localized>
    <Localized key="generate_proto" lang="English">Generate prototype</Localized>
    <Localized key="generate_proto" lang="French">Générer le prototype</Localized>
    <Localized key="generate_proto" lang="Dutch">Genereren prototype</Localized>
    <Localized key="send_to_server" lang="English">Send to server</Localized>
    <Localized key="send_to_server" lang="French">Envoyer vers le serveur</Localized>
    <Localized key="send_to_server" lang="Dutch">Verszenden naar server</Localized>
    <Localized key="create_project" lang="English">Create project</Localized>
    <Localized key="create_project" lang="French">Créer un project</Localized>
    <Localized key="create_project" lang="Dutch">Creëren een project</Localized>
    <Localized key="documents" lang="English">Documents</Localized>
    <Localized key="documents" lang="French">Documents</Localized>
    <Localized key="documents" lang="Dutch">Documenten</Localized>
    <Localized key="prototypes" lang="English">Prototypes</Localized>
    <Localized key="prototypes" lang="French">Prototypes</Localized>
    <Localized key="prototypes" lang="Dutch">Prototypes</Localized>
  </LocalizedDictionary>
</Panel>
