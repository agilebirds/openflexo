/*
 * (c) Copyright 2010-2011 AgileBirds
 *
 * This file is part of OpenFlexo.
 *
 * OpenFlexo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * OpenFlexo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OpenFlexo. If not, see <http://www.gnu.org/licenses/>.
 *
 */
package org.openflexo.components.browser;

import java.util.logging.Logger;

import javax.swing.Icon;

/**
 * Allows to filter some elements in a browser
 * This filter filters on type of elements and is automatically generated by the browser
 *
 * @author sguerin
 *
 */
public class ElementTypeBrowserFilter extends BrowserFilter
{

    private static final Logger logger = Logger.getLogger(ElementTypeBrowserFilter.class.getPackage().getName());

    private boolean isDeepBrowsing = false;
    private BrowserFilterStatus initialFilterStatus;

	protected ElementTypeBrowserFilter(String name, Icon icon, BrowserFilterStatus initialFilterStatus)
    {
    	super(name,icon);
    	setInitialFilterStatus(initialFilterStatus);
    }

    public boolean isDeepBrowsing()
    {
    	return isDeepBrowsing;
    }

    public void setDeepBrowsing(boolean b)
    {
    	isDeepBrowsing = b;
    }

	public BrowserFilterStatus getInitialFilterStatus() {
		return initialFilterStatus;
	}

    public void setInitialFilterStatus(BrowserFilterStatus initialFilterStatus)
    {
       	this.initialFilterStatus = initialFilterStatus;
        setStatus(initialFilterStatus);

        if (initialFilterStatus == BrowserFilterStatus.OPTIONAL_INITIALLY_HIDDEN) {
        	setStatus(BrowserFilterStatus.HIDE);
        }
        if (initialFilterStatus == BrowserFilterStatus.OPTIONAL_INITIALLY_SHOWN) {
        	setStatus(BrowserFilterStatus.SHOW);
        }
	}


}
