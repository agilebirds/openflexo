<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.0.xsd  
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd" 
	default-autowire="byName">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"><value>${driverDefinitionProvider.getDriverClassname()}</value></property>
        <property name="url" value="#{propertyController.getProperty(T(${javaImplementation.getRootPackage()}.model.enums.PropertyEnum).DB_URL)}"/>
        <property name="username" value="#{propertyController.getProperty(T(${javaImplementation.getRootPackage()}.model.enums.PropertyEnum).DB_USERNAME)}"/>
        <property name="password" value="#{propertyController.getProperty(T(${javaImplementation.getRootPackage()}.model.enums.PropertyEnum).DB_PASSWORD)}"/>
	</bean>
	
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource" ref="dataSource" />
		<property name="changeLog" value="classpath:dbchangelogs/db.changelog-master.xml" />
	</bean>
	<bean id="sessionFactory" class="${sessionFactoryProvider.getSessionFactoryClassname()}" depends-on="liquibase" >
		<property name="dataSource"><ref bean="dataSource"/></property>
		<property name="hibernateProperties">
			<props>
				<!-- hibernate properties -->
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="${javaUtils.getPackageName("${javaImplementation.getRootPackage()}")}.model.${persistenceImplementation.getModels().get(0).getName()}"/>
		<property name="entityInterceptor" ref="databaseCacheInvalidator" />
#if(${driverDefinitionProvider.getLobHandlerClassname()})
		<property name="lobHandler">
			<ref local="defaultLobHandler"/>
		</property>
#end
	</bean>
#if(${driverDefinitionProvider.getLobHandlerClassname()})
	<bean id="defaultLobHandler" class="${driverDefinitionProvider.getLobHandlerClassname()}" autowire="byName">
		<property name="wrapAsLob" value="true" />
	</bean>
#end
</beans>