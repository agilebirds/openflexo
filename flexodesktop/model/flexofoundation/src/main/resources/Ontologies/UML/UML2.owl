<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY owl2xml "http://www.w3.org/2006/12/owl2-xml#" >
    <!ENTITY ecore "http://deductions.sf.net/owl/ecore#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY UML2_model "http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#" >
]>


<rdf:RDF xmlns="http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#"
     xml:base="http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:owl2xml="http://www.w3.org/2006/12/owl2-xml#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:UML2_model="http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#"
     xmlns:ecore="http://deductions.sf.net/owl/ecore#">
    <owl:Ontology rdf:about=""/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://deductions.sf.net/owl/ecore#translatedFromECORE -->

    <owl:ObjectProperty rdf:about="&ecore;translatedFromECORE"/>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#abstraction -->

    <owl:ObjectProperty rdf:about="#abstraction">
        <rdfs:label>abstraction</rdfs:label>
        <rdfs:comment
            >The Component that owns this ComponentRealization and which is implemented by its realizing classifiers.</rdfs:comment>
        <rdfs:range rdf:resource="#Component"/>
        <rdfs:domain rdf:resource="#ComponentRealization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#action -->

    <owl:ObjectProperty rdf:about="#action">
        <rdfs:label>action</rdfs:label>
        <rdfs:comment
            >Actions owned by the Interaction.</rdfs:comment>
        <rdfs:range rdf:resource="#Action"/>
        <rdfs:domain rdf:resource="#Interaction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#action2 -->

    <owl:ObjectProperty rdf:about="#action2">
        <rdfs:label>action</rdfs:label>
        <rdfs:comment
            >Action whose execution is occurring.</rdfs:comment>
        <rdfs:range rdf:resource="#Action"/>
        <rdfs:domain rdf:resource="#ActionExecutionSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#activity -->

    <owl:ObjectProperty rdf:about="#activity">
        <rdfs:label>activity</rdfs:label>
        <rdfs:comment
            >Activity containing the node.</rdfs:comment>
        <rdfs:range rdf:resource="#Activity"/>
        <rdfs:domain rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#activity2 -->

    <owl:ObjectProperty rdf:about="#activity2">
        <rdfs:label>activity</rdfs:label>
        <rdfs:comment
            >Activity containing the edge.</rdfs:comment>
        <rdfs:range rdf:resource="#Activity"/>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#activityScope -->

    <owl:ObjectProperty rdf:about="#activityScope">
        <rdfs:label>activityScope</rdfs:label>
        <rdfs:comment
            >An activity that owns the variable.</rdfs:comment>
        <rdfs:range rdf:resource="#Activity"/>
        <rdfs:domain rdf:resource="#Variable"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#actual -->

    <owl:ObjectProperty rdf:about="#actual">
        <rdfs:label>actual</rdfs:label>
        <rdfs:comment
            >The element that is the actual parameter for this substitution.</rdfs:comment>
        <rdfs:range rdf:resource="#ParameterableElement"/>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#actualGate -->

    <owl:ObjectProperty rdf:about="#actualGate">
        <rdfs:label>actualGate</rdfs:label>
        <rdfs:comment
            >The actual gates of the InteractionUse</rdfs:comment>
        <rdfs:range rdf:resource="#Gate"/>
        <rdfs:domain rdf:resource="#InteractionUse"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#addition -->

    <owl:ObjectProperty rdf:about="#addition">
        <rdfs:label>addition</rdfs:label>
        <rdfs:comment
            >References the use case that is to be included.</rdfs:comment>
        <rdfs:domain rdf:resource="#Include"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#after -->

    <owl:ObjectProperty rdf:about="#after">
        <rdfs:label>after</rdfs:label>
        <rdfs:comment
            >The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before.</rdfs:comment>
        <rdfs:domain rdf:resource="#GeneralOrdering"/>
        <rdfs:range rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#annotatedElement -->

    <owl:ObjectProperty rdf:about="#annotatedElement">
        <rdfs:label
            >annotatedElement</rdfs:label>
        <rdfs:comment
            >References the Element(s) being commented.</rdfs:comment>
        <rdfs:domain rdf:resource="#Comment"/>
        <rdfs:range rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#appliedProfile -->

    <owl:ObjectProperty rdf:about="#appliedProfile">
        <rdfs:label>appliedProfile</rdfs:label>
        <rdfs:comment
            >References the Profiles that are applied to a Package through this ProfileApplication.</rdfs:comment>
        <rdfs:range rdf:resource="#Profile"/>
        <rdfs:domain rdf:resource="#ProfileApplication"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#applyingPackage -->

    <owl:ObjectProperty rdf:about="#applyingPackage">
        <rdfs:label>applyingPackage</rdfs:label>
        <rdfs:comment
            >The package that owns the profile application.</rdfs:comment>
        <rdfs:range rdf:resource="#Package"/>
        <rdfs:domain rdf:resource="#ProfileApplication"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#argument -->

    <owl:ObjectProperty rdf:about="#argument">
        <rdfs:label>argument</rdfs:label>
        <rdfs:comment
            >The arguments of the Message</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#argument2 -->

    <owl:ObjectProperty rdf:about="#argument2">
        <rdfs:label>argument</rdfs:label>
        <rdfs:comment
            >The actual arguments of the Interaction</rdfs:comment>
        <rdfs:range rdf:resource="#Action"/>
        <rdfs:domain rdf:resource="#InteractionUse"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#argument3 -->

    <owl:ObjectProperty rdf:about="#argument3">
        <rdfs:label>argument</rdfs:label>
        <rdfs:comment
            >Specification of the ordered set of argument values that appears during execution.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#InvocationAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#association -->

    <owl:ObjectProperty rdf:about="#association">
        <rdfs:label>association</rdfs:label>
        <rdfs:comment
            >References the association of which this property is a member, if any.</rdfs:comment>
        <rdfs:comment
            >Association to be cleared.</rdfs:comment>
        <rdfs:range rdf:resource="#Association"/>
        <rdfs:domain rdf:resource="#ClearAssociationAction"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#associationEnd -->

    <owl:ObjectProperty rdf:about="#associationEnd">
        <rdfs:label>associationEnd</rdfs:label>
        <rdfs:comment
            >Designates the optional association end that owns a qualifier attribute.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#attribute -->

    <owl:ObjectProperty rdf:about="#attribute">
        <rdfs:label>attribute</rdfs:label>
        <rdfs:comment
            >Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#before -->

    <owl:ObjectProperty rdf:about="#before">
        <rdfs:label>before</rdfs:label>
        <rdfs:comment
            >The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after.</rdfs:comment>
        <rdfs:domain rdf:resource="#GeneralOrdering"/>
        <rdfs:range rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#behavior -->

    <owl:ObjectProperty rdf:about="#behavior">
        <rdfs:label>behavior</rdfs:label>
        <rdfs:comment
            >The invoked behavior. It must be capable of accepting and returning control.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#CallBehaviorAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#behavior2 -->

    <owl:ObjectProperty rdf:about="#behavior2">
        <rdfs:label>behavior</rdfs:label>
        <rdfs:comment
            >Behavior whose execution is occurring.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#BehaviorExecutionSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#behavior3 -->

    <owl:ObjectProperty rdf:about="#behavior3">
        <rdfs:label>behavior</rdfs:label>
        <rdfs:comment
            >Specifies the behavior of the opaque expression.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#OpaqueExpression"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#body -->

    <owl:ObjectProperty rdf:about="#body">
        <rdfs:label>body</rdfs:label>
        <rdfs:comment
            >A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="#ExecutableNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyCondition -->

    <owl:ObjectProperty rdf:about="#bodyCondition">
        <rdfs:label>bodyCondition</rdfs:label>
        <rdfs:comment
            >An optional Constraint on the result values of an invocation of this Operation.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyOutput -->

    <owl:ObjectProperty rdf:about="#bodyOutput">
        <rdfs:label>bodyOutput</rdfs:label>
        <rdfs:comment
            >A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyOutput2 -->

    <owl:ObjectProperty rdf:about="#bodyOutput2">
        <rdfs:label>bodyOutput</rdfs:label>
        <rdfs:comment
            >A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyPart -->

    <owl:ObjectProperty rdf:about="#bodyPart">
        <rdfs:label>bodyPart</rdfs:label>
        <rdfs:comment
            >The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value.</rdfs:comment>
        <rdfs:range rdf:resource="#ExecutableNode"/>
        <rdfs:domain rdf:resource="#LoopNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#boundElement -->

    <owl:ObjectProperty rdf:about="#boundElement">
        <rdfs:label>boundElement</rdfs:label>
        <rdfs:comment
            >The element that is bound by this binding.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateBinding"/>
        <rdfs:range rdf:resource="#TemplateableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#cfragmentGate -->

    <owl:ObjectProperty rdf:about="#cfragmentGate">
        <rdfs:label>cfragmentGate</rdfs:label>
        <rdfs:comment
            >Specifies the gates that form the interface between this CombinedFragment and its surroundings</rdfs:comment>
        <rdfs:domain rdf:resource="#CombinedFragment"/>
        <rdfs:range rdf:resource="#Gate"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#changeExpression -->

    <owl:ObjectProperty rdf:about="#changeExpression">
        <rdfs:label
            >changeExpression</rdfs:label>
        <rdfs:comment
            >A Boolean-valued expression that will result in a change event whenever its value changes from false to true.</rdfs:comment>
        <rdfs:domain rdf:resource="#ChangeEvent"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#class -->

    <owl:ObjectProperty rdf:about="#class">
        <rdfs:label>class</rdfs:label>
        <rdfs:comment
            >The class that owns the operation.</rdfs:comment>
        <rdfs:comment
            >References the Class that owns the Property.</rdfs:comment>
        <rdfs:range rdf:resource="#Class"/>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier -->

    <owl:ObjectProperty rdf:about="#classifier">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#InstanceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier2 -->

    <owl:ObjectProperty rdf:about="#classifier2">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier that owns this template signature.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#RedefinableTemplateSignature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier3 -->

    <owl:ObjectProperty rdf:about="#classifier3">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier whose instances are to be retrieved.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ReadExtentAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier4 -->

    <owl:ObjectProperty rdf:about="#classifier4">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >Classifier to be instantiated.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#CreateObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier5 -->

    <owl:ObjectProperty rdf:about="#classifier5">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier against which the classification of the input object is tested.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifierBehavior -->

    <owl:ObjectProperty rdf:about="#classifierBehavior">
        <rdfs:label
            >classifierBehavior</rdfs:label>
        <rdfs:comment
            >A behavior specification that specifies the behavior of the classifier itself.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#BehavioredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#clause -->

    <owl:ObjectProperty rdf:about="#clause">
        <rdfs:label>clause</rdfs:label>
        <rdfs:comment
            >Set of clauses composing the conditional.</rdfs:comment>
        <rdfs:range rdf:resource="#Clause"/>
        <rdfs:domain rdf:resource="#ConditionalNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#client -->

    <owl:ObjectProperty rdf:about="#client">
        <rdfs:label>client</rdfs:label>
        <rdfs:comment
            >The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Dependency"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#clientDependency -->

    <owl:ObjectProperty rdf:about="#clientDependency">
        <rdfs:label
            >clientDependency</rdfs:label>
        <rdfs:comment
            >Indicates the dependencies that reference the client.</rdfs:comment>
        <rdfs:range rdf:resource="#Dependency"/>
        <rdfs:domain rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#collaborationRole -->

    <owl:ObjectProperty rdf:about="#collaborationRole">
        <rdfs:label
            >collaborationRole</rdfs:label>
        <rdfs:comment
            >References connectable elements (possibly owned by other classifiers) which represent roles that instances may play in this collaboration.</rdfs:comment>
        <rdfs:domain rdf:resource="#Collaboration"/>
        <rdfs:range rdf:resource="#ConnectableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#collaborationUse -->

    <owl:ObjectProperty rdf:about="#collaborationUse">
        <rdfs:label
            >collaborationUse</rdfs:label>
        <rdfs:comment
            >References the collaboration uses owned by the classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#CollaborationUse"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#collection -->

    <owl:ObjectProperty rdf:about="#collection">
        <rdfs:label>collection</rdfs:label>
        <rdfs:comment
            >The collection to be reduced.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReduceAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#componentPackagedElement -->

    <owl:ObjectProperty rdf:about="#componentPackagedElement">
        <rdfs:label>packagedElement</rdfs:label>
        <rdfs:comment
            >The set of PackageableElements that a Component owns. In the namespace of a component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g. Classes, Interfaces, Components, Packages, Use cases, Dependencies (e.g. mappings), and Artifacts.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="#PackageableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#condition -->

    <owl:ObjectProperty rdf:about="#condition">
        <rdfs:label>condition</rdfs:label>
        <rdfs:comment
            >References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#Extend"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#condition2 -->

    <owl:ObjectProperty rdf:about="#condition2">
        <rdfs:label>condition</rdfs:label>
        <rdfs:comment
            >Constraint that should be satisfied for the owner of the parameters in an input parameter set to start execution using the values provided for those parameters, or the owner of the parameters in an output parameter set to end execution providing the values for those parameters, if all preconditions and conditions on input parameter sets were satisfied.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#ParameterSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#configuration -->

    <owl:ObjectProperty rdf:about="#configuration">
        <rdfs:label>configuration</rdfs:label>
        <rdfs:comment
            >The specification of properties that parameterize the deployment and execution of one or more Artifacts.</rdfs:comment>
        <rdfs:domain rdf:resource="#Deployment"/>
        <rdfs:range rdf:resource="#DeploymentSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#conformance -->

    <owl:ObjectProperty rdf:about="#conformance">
        <rdfs:label>conformance</rdfs:label>
        <rdfs:comment
            >Conformance between protocol state machines.</rdfs:comment>
        <rdfs:range rdf:resource="#ProtocolConformance"/>
        <rdfs:domain rdf:resource="#ProtocolStateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connection -->

    <owl:ObjectProperty rdf:about="#connection">
        <rdfs:label>connection</rdfs:label>
        <rdfs:comment
            >The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate.</rdfs:comment>
        <rdfs:range rdf:resource="#ConnectionPointReference"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connectionPoint -->

    <owl:ObjectProperty rdf:about="#connectionPoint">
        <rdfs:label>connectionPoint</rdfs:label>
        <rdfs:comment
            >The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states.</rdfs:comment>
        <rdfs:range rdf:resource="#Pseudostate"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connectionPoint2 -->

    <owl:ObjectProperty rdf:about="#connectionPoint2">
        <rdfs:label>connectionPoint</rdfs:label>
        <rdfs:comment
            >The connection points defined for this state machine. They represent the interface of the state machine when used as part of submachine state.</rdfs:comment>
        <rdfs:range rdf:resource="#Pseudostate"/>
        <rdfs:domain rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connector -->

    <owl:ObjectProperty rdf:about="#connector">
        <rdfs:label>connector</rdfs:label>
        <rdfs:comment
            >The Connector on which this Message is sent.</rdfs:comment>
        <rdfs:range rdf:resource="#Connector"/>
        <rdfs:domain rdf:resource="#Message"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#constrainedElement -->

    <owl:ObjectProperty rdf:about="#constrainedElement">
        <rdfs:label
            >constrainedElement</rdfs:label>
        <rdfs:comment
            >The ordered set of Elements referenced by this Constraint.</rdfs:comment>
        <rdfs:domain rdf:resource="#Constraint"/>
        <rdfs:range rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#constrainingClassifier -->

    <owl:ObjectProperty rdf:about="#constrainingClassifier">
        <rdfs:label
            >constrainingClassifier</rdfs:label>
        <rdfs:comment
            >The classifiers that constrain the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted; otherwise, it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ClassifierTemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#containedEdge -->

    <owl:ObjectProperty rdf:about="#containedEdge">
        <rdfs:label>containedEdge</rdfs:label>
        <rdfs:comment
            >Edges immediately contained in the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#ActivityGroup"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#containedNode -->

    <owl:ObjectProperty rdf:about="#containedNode">
        <rdfs:label>containedNode</rdfs:label>
        <rdfs:comment
            >Nodes immediately contained in the group.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityGroup"/>
        <rdfs:range rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#container -->

    <owl:ObjectProperty rdf:about="#container">
        <rdfs:label>container</rdfs:label>
        <rdfs:comment
            >The region that contains this vertex.</rdfs:comment>
        <rdfs:range rdf:resource="#Region"/>
        <rdfs:domain rdf:resource="#Vertex"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#container2 -->

    <owl:ObjectProperty rdf:about="#container2">
        <rdfs:label>container</rdfs:label>
        <rdfs:comment
            >Designates the region that owns this transition.</rdfs:comment>
        <rdfs:range rdf:resource="#Region"/>
        <rdfs:domain rdf:resource="#Transition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contents -->

    <owl:ObjectProperty rdf:about="#contents">
        <rdfs:label>contents</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="#EObject"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#context2 -->

    <owl:ObjectProperty rdf:about="#context2">
        <rdfs:label>context</rdfs:label>
        <rdfs:comment
            >The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#BehavioredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#context3 -->

    <owl:ObjectProperty rdf:about="#context3">
        <rdfs:label>context</rdfs:label>
        <rdfs:comment
            >Specifies the namespace that owns the NamedElement.</rdfs:comment>
        <rdfs:comment
            >The classifier that owns the behavior of which this action is a part.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Constraint"/>
        <rdfs:range rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contract -->

    <owl:ObjectProperty rdf:about="#contract">
        <rdfs:label>contract</rdfs:label>
        <rdfs:comment
            >References the Interface specifying the conformance contract.</rdfs:comment>
        <rdfs:range rdf:resource="#Interface"/>
        <rdfs:domain rdf:resource="#InterfaceRealization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contract2 -->

    <owl:ObjectProperty rdf:about="#contract2">
        <rdfs:label>contract</rdfs:label>
        <rdfs:comment
            >The contract with which the substituting classifier complies.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Substitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contract3 -->

    <owl:ObjectProperty rdf:about="#contract3">
        <rdfs:label>contract</rdfs:label>
        <rdfs:comment
            >The set of Behaviors that specify the valid interaction patterns across the connector.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#Connector"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#conveyed -->

    <owl:ObjectProperty rdf:about="#conveyed">
        <rdfs:label>conveyed</rdfs:label>
        <rdfs:comment
            >Specifies the information items that may circulate on this information flow.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#InformationFlow"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#covered -->

    <owl:ObjectProperty rdf:about="#covered">
        <rdfs:label>covered</rdfs:label>
        <rdfs:comment
            >References the Lifelines that the InteractionFragment involves.</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
        <rdfs:range rdf:resource="#Lifeline"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#coveredBy -->

    <owl:ObjectProperty rdf:about="#coveredBy">
        <rdfs:label>coveredBy</rdfs:label>
        <rdfs:comment
            >References the InteractionFragments in which this Lifeline takes part.</rdfs:comment>
        <rdfs:range rdf:resource="#InteractionFragment"/>
        <rdfs:domain rdf:resource="#Lifeline"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#datatype -->

    <owl:ObjectProperty rdf:about="#datatype">
        <rdfs:label>datatype</rdfs:label>
        <rdfs:comment
            >The DataType that owns this Operation.</rdfs:comment>
        <rdfs:range rdf:resource="#DataType"/>
        <rdfs:domain rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#datatype2 -->

    <owl:ObjectProperty rdf:about="#datatype2">
        <rdfs:label>datatype</rdfs:label>
        <rdfs:comment
            >The DataType that owns this Property.</rdfs:comment>
        <rdfs:range rdf:resource="#DataType"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decider -->

    <owl:ObjectProperty rdf:about="#decider">
        <rdfs:label>decider</rdfs:label>
        <rdfs:comment
            >An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decider2 -->

    <owl:ObjectProperty rdf:about="#decider2">
        <rdfs:label>decider</rdfs:label>
        <rdfs:comment
            >An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decisionInput -->

    <owl:ObjectProperty rdf:about="#decisionInput">
        <rdfs:label>decisionInput</rdfs:label>
        <rdfs:comment
            >Provides input to guard specifications on edges outgoing from the decision node.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#DecisionNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decisionInputFlow -->

    <owl:ObjectProperty rdf:about="#decisionInputFlow">
        <rdfs:label
            >decisionInputFlow</rdfs:label>
        <rdfs:comment
            >An additional edge incoming to the decision node that provides a decision input value.</rdfs:comment>
        <rdfs:domain rdf:resource="#DecisionNode"/>
        <rdfs:range rdf:resource="#ObjectFlow"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decomposedAs -->

    <owl:ObjectProperty rdf:about="#decomposedAs">
        <rdfs:label>decomposedAs</rdfs:label>
        <rdfs:comment
            >References the Interaction that represents the decomposition.</rdfs:comment>
        <rdfs:domain rdf:resource="#Lifeline"/>
        <rdfs:range rdf:resource="#PartDecomposition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#default -->

    <owl:ObjectProperty rdf:about="#default">
        <rdfs:label>default</rdfs:label>
        <rdfs:comment
            >The element that is the default for this formal template parameter.</rdfs:comment>
        <rdfs:range rdf:resource="#ParameterableElement"/>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValue -->

    <owl:ObjectProperty rdf:about="#defaultValue">
        <rdfs:label>defaultValue</rdfs:label>
        <rdfs:comment
            >Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValue2 -->

    <owl:ObjectProperty rdf:about="#defaultValue2">
        <rdfs:label>defaultValue</rdfs:label>
        <rdfs:comment
            >A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deferrableTrigger -->

    <owl:ObjectProperty rdf:about="#deferrableTrigger">
        <rdfs:label
            >deferrableTrigger</rdfs:label>
        <rdfs:comment
            >A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#definingEnd -->

    <owl:ObjectProperty rdf:about="#definingEnd">
        <rdfs:label>definingEnd</rdfs:label>
        <rdfs:comment
            >A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectorEnd"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#definingFeature -->

    <owl:ObjectProperty rdf:about="#definingFeature">
        <rdfs:label>definingFeature</rdfs:label>
        <rdfs:comment
            >The structural feature that specifies the values that may be held by the slot.</rdfs:comment>
        <rdfs:domain rdf:resource="#Slot"/>
        <rdfs:range rdf:resource="#StructuralFeature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deployedArtifact -->

    <owl:ObjectProperty rdf:about="#deployedArtifact">
        <rdfs:label
            >deployedArtifact</rdfs:label>
        <rdfs:comment
            >The Artifacts that are deployed onto a Node. This association specializes the supplier association.</rdfs:comment>
        <rdfs:range rdf:resource="#DeployedArtifact"/>
        <rdfs:domain rdf:resource="#Deployment"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deployedElement -->

    <owl:ObjectProperty rdf:about="#deployedElement">
        <rdfs:label>deployedElement</rdfs:label>
        <rdfs:comment
            >The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget.</rdfs:comment>
        <rdfs:domain rdf:resource="#DeploymentTarget"/>
        <rdfs:range rdf:resource="#PackageableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deployment -->

    <owl:ObjectProperty rdf:about="#deployment">
        <rdfs:label>deployment</rdfs:label>
        <rdfs:comment
            >The set of Deployments for a DeploymentTarget.</rdfs:comment>
        <rdfs:range rdf:resource="#Deployment"/>
        <rdfs:domain rdf:resource="#DeploymentTarget"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deployment2 -->

    <owl:ObjectProperty rdf:about="#deployment2">
        <rdfs:label>deployment</rdfs:label>
        <rdfs:comment
            >The deployment with which the DeploymentSpecification is associated.</rdfs:comment>
        <rdfs:range rdf:resource="#Deployment"/>
        <rdfs:domain rdf:resource="#DeploymentSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#destroyAt -->

    <owl:ObjectProperty rdf:about="#destroyAt">
        <rdfs:label>destroyAt</rdfs:label>
        <rdfs:comment
            >Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#LinkEndDestructionData"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#details -->

    <owl:ObjectProperty rdf:about="#details">
        <rdfs:label>details</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="#EStringToStringMapEntry"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#doActivity -->

    <owl:ObjectProperty rdf:about="#doActivity">
        <rdfs:label>doActivity</rdfs:label>
        <rdfs:comment
            >An optional behavior that is executed while being in the state. The execution starts when this state is entered, and stops either by itself, or when the state is exited, whichever comes first.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllAttributes -->

    <owl:ObjectProperty rdf:about="#eAllAttributes">
        <rdfs:label>eAllAttributes</rdfs:label>
        <rdfs:range rdf:resource="#EAttribute"/>
        <rdfs:domain rdf:resource="#EClass"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllContainments -->

    <owl:ObjectProperty rdf:about="#eAllContainments">
        <rdfs:label
            >eAllContainments</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EReference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllGenericSuperTypes -->

    <owl:ObjectProperty rdf:about="#eAllGenericSuperTypes">
        <rdfs:label
            >eAllGenericSuperTypes</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllOperations -->

    <owl:ObjectProperty rdf:about="#eAllOperations">
        <rdfs:label>eAllOperations</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EOperation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllReferences -->

    <owl:ObjectProperty rdf:about="#eAllReferences">
        <rdfs:label>eAllReferences</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EReference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllStructuralFeatures -->

    <owl:ObjectProperty rdf:about="#eAllStructuralFeatures">
        <rdfs:label
            >eAllStructuralFeatures</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EStructuralFeature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllSuperTypes -->

    <owl:ObjectProperty rdf:about="#eAllSuperTypes">
        <rdfs:label>eAllSuperTypes</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EClass"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAnnotations -->

    <owl:ObjectProperty rdf:about="#eAnnotations">
        <rdfs:label>eAnnotations</rdfs:label>
        <rdfs:range rdf:resource="#EAnnotation"/>
        <rdfs:domain rdf:resource="#EModelElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAttributeType -->

    <owl:ObjectProperty rdf:about="#eAttributeType">
        <rdfs:label>eAttributeType</rdfs:label>
        <rdfs:domain rdf:resource="#EAttribute"/>
        <rdfs:range rdf:resource="#EDataType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAttributes -->

    <owl:ObjectProperty rdf:about="#eAttributes">
        <rdfs:label>eAttributes</rdfs:label>
        <rdfs:range rdf:resource="#EAttribute"/>
        <rdfs:domain rdf:resource="#EClass"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eBounds -->

    <owl:ObjectProperty rdf:about="#eBounds">
        <rdfs:label>eBounds</rdfs:label>
        <rdfs:range rdf:resource="#EGenericType"/>
        <rdfs:domain rdf:resource="#ETypeParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eClassifier -->

    <owl:ObjectProperty rdf:about="#eClassifier">
        <rdfs:label>eClassifier</rdfs:label>
        <rdfs:range rdf:resource="#EClassifier"/>
        <rdfs:domain rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eClassifiers -->

    <owl:ObjectProperty rdf:about="#eClassifiers">
        <rdfs:label>eClassifiers</rdfs:label>
        <rdfs:range rdf:resource="#EClassifier"/>
        <rdfs:domain rdf:resource="#EPackage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eContainingClass -->

    <owl:ObjectProperty rdf:about="#eContainingClass">
        <rdfs:label
            >eContainingClass</rdfs:label>
        <rdfs:range rdf:resource="#EClass"/>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eContainingClass2 -->

    <owl:ObjectProperty rdf:about="#eContainingClass2">
        <rdfs:label
            >eContainingClass</rdfs:label>
        <rdfs:range rdf:resource="#EClass"/>
        <rdfs:domain rdf:resource="#EOperation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eEnum -->

    <owl:ObjectProperty rdf:about="#eEnum">
        <rdfs:label>eEnum</rdfs:label>
        <rdfs:range rdf:resource="#EEnum"/>
        <rdfs:domain rdf:resource="#EEnumLiteral"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eExceptions -->

    <owl:ObjectProperty rdf:about="#eExceptions">
        <rdfs:label>eExceptions</rdfs:label>
        <rdfs:range rdf:resource="#EClassifier"/>
        <rdfs:domain rdf:resource="#EOperation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eFactoryInstance -->

    <owl:ObjectProperty rdf:about="#eFactoryInstance">
        <rdfs:label
            >eFactoryInstance</rdfs:label>
        <rdfs:range rdf:resource="#EFactory"/>
        <rdfs:domain rdf:resource="#EPackage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eGenericExceptions -->

    <owl:ObjectProperty rdf:about="#eGenericExceptions">
        <rdfs:label
            >eGenericExceptions</rdfs:label>
        <rdfs:range rdf:resource="#EGenericType"/>
        <rdfs:domain rdf:resource="#EOperation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eGenericSuperTypes -->

    <owl:ObjectProperty rdf:about="#eGenericSuperTypes">
        <rdfs:label
            >eGenericSuperTypes</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eGenericType -->

    <owl:ObjectProperty rdf:about="#eGenericType">
        <rdfs:label>eGenericType</rdfs:label>
        <rdfs:range rdf:resource="#EGenericType"/>
        <rdfs:domain rdf:resource="#ETypedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eIDAttribute -->

    <owl:ObjectProperty rdf:about="#eIDAttribute">
        <rdfs:label>eIDAttribute</rdfs:label>
        <rdfs:range rdf:resource="#EAttribute"/>
        <rdfs:domain rdf:resource="#EClass"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eKeys -->

    <owl:ObjectProperty rdf:about="#eKeys">
        <rdfs:label>eKeys</rdfs:label>
        <rdfs:range rdf:resource="#EAttribute"/>
        <rdfs:domain rdf:resource="#EReference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eLiterals -->

    <owl:ObjectProperty rdf:about="#eLiterals">
        <rdfs:label>eLiterals</rdfs:label>
        <rdfs:domain rdf:resource="#EEnum"/>
        <rdfs:range rdf:resource="#EEnumLiteral"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eLowerBound -->

    <owl:ObjectProperty rdf:about="#eLowerBound">
        <rdfs:label>eLowerBound</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eModelElement -->

    <owl:ObjectProperty rdf:about="#eModelElement">
        <rdfs:label>eModelElement</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="#EModelElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eOperation -->

    <owl:ObjectProperty rdf:about="#eOperation">
        <rdfs:label>eOperation</rdfs:label>
        <rdfs:range rdf:resource="#EOperation"/>
        <rdfs:domain rdf:resource="#EParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eOperations -->

    <owl:ObjectProperty rdf:about="#eOperations">
        <rdfs:label>eOperations</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EOperation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eOpposite -->

    <owl:ObjectProperty rdf:about="#eOpposite">
        <rdfs:label>eOpposite</rdfs:label>
        <rdfs:domain rdf:resource="#EReference"/>
        <rdfs:range rdf:resource="#EReference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ePackage -->

    <owl:ObjectProperty rdf:about="#ePackage">
        <rdfs:label>ePackage</rdfs:label>
        <rdfs:domain rdf:resource="#EFactory"/>
        <rdfs:range rdf:resource="#EPackage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ePackage2 -->

    <owl:ObjectProperty rdf:about="#ePackage2">
        <rdfs:label>ePackage</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="#EPackage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eParameters -->

    <owl:ObjectProperty rdf:about="#eParameters">
        <rdfs:label>eParameters</rdfs:label>
        <rdfs:domain rdf:resource="#EOperation"/>
        <rdfs:range rdf:resource="#EParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eRawType -->

    <owl:ObjectProperty rdf:about="#eRawType">
        <rdfs:label>eRawType</rdfs:label>
        <rdfs:range rdf:resource="#EClassifier"/>
        <rdfs:domain rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eReferenceType -->

    <owl:ObjectProperty rdf:about="#eReferenceType">
        <rdfs:label>eReferenceType</rdfs:label>
        <rdfs:range rdf:resource="#EClass"/>
        <rdfs:domain rdf:resource="#EReference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eReferences -->

    <owl:ObjectProperty rdf:about="#eReferences">
        <rdfs:label>eReferences</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EReference"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eStructuralFeatures -->

    <owl:ObjectProperty rdf:about="#eStructuralFeatures">
        <rdfs:label
            >eStructuralFeatures</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="#EStructuralFeature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eSubpackages -->

    <owl:ObjectProperty rdf:about="#eSubpackages">
        <rdfs:label>eSubpackages</rdfs:label>
        <rdfs:domain rdf:resource="#EPackage"/>
        <rdfs:range rdf:resource="#EPackage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eSuperPackage -->

    <owl:ObjectProperty rdf:about="#eSuperPackage">
        <rdfs:label>eSuperPackage</rdfs:label>
        <rdfs:domain rdf:resource="#EPackage"/>
        <rdfs:range rdf:resource="#EPackage"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eSuperTypes -->

    <owl:ObjectProperty rdf:about="#eSuperTypes">
        <rdfs:label>eSuperTypes</rdfs:label>
        <rdfs:range rdf:resource="#EClass"/>
        <rdfs:domain rdf:resource="#EClass"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eType -->

    <owl:ObjectProperty rdf:about="#eType">
        <rdfs:label>eType</rdfs:label>
        <rdfs:range rdf:resource="#EClassifier"/>
        <rdfs:domain rdf:resource="#ETypedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeArguments -->

    <owl:ObjectProperty rdf:about="#eTypeArguments">
        <rdfs:label>eTypeArguments</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeParameter -->

    <owl:ObjectProperty rdf:about="#eTypeParameter">
        <rdfs:label>eTypeParameter</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="#ETypeParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeParameters -->

    <owl:ObjectProperty rdf:about="#eTypeParameters">
        <rdfs:label>eTypeParameters</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="#ETypeParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeParameters2 -->

    <owl:ObjectProperty rdf:about="#eTypeParameters2">
        <rdfs:label>eTypeParameters</rdfs:label>
        <rdfs:domain rdf:resource="#EOperation"/>
        <rdfs:range rdf:resource="#ETypeParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eUpperBound -->

    <owl:ObjectProperty rdf:about="#eUpperBound">
        <rdfs:label>eUpperBound</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="#EGenericType"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#edge -->

    <owl:ObjectProperty rdf:about="#edge">
        <rdfs:label>edge</rdfs:label>
        <rdfs:comment
            >Edges immediately contained in the structured node.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#StructuredActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#edge2 -->

    <owl:ObjectProperty rdf:about="#edge2">
        <rdfs:label>edge</rdfs:label>
        <rdfs:comment
            >Edges expressing flow between nodes of the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="#ActivityEdge"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#edge3 -->

    <owl:ObjectProperty rdf:about="#edge3">
        <rdfs:label>edge</rdfs:label>
        <rdfs:comment
            >Edges immediately contained in the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#effect -->

    <owl:ObjectProperty rdf:about="#effect">
        <rdfs:label>effect</rdfs:label>
        <rdfs:comment
            >Specifies an optional behavior to be performed when the transition fires.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#Transition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#elementImport -->

    <owl:ObjectProperty rdf:about="#elementImport">
        <rdfs:label>elementImport</rdfs:label>
        <rdfs:comment
            >References the ElementImports owned by the Namespace.</rdfs:comment>
        <rdfs:range rdf:resource="#ElementImport"/>
        <rdfs:domain rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#enclosingInteraction -->

    <owl:ObjectProperty rdf:about="#enclosingInteraction">
        <rdfs:label
            >enclosingInteraction</rdfs:label>
        <rdfs:comment
            >The Interaction enclosing this InteractionFragment.</rdfs:comment>
        <rdfs:range rdf:resource="#Interaction"/>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#enclosingOperand -->

    <owl:ObjectProperty rdf:about="#enclosingOperand">
        <rdfs:label
            >enclosingOperand</rdfs:label>
        <rdfs:comment
            >The operand enclosing this InteractionFragment (they may nest recursively)</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
        <rdfs:range rdf:resource="#InteractionOperand"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end -->

    <owl:ObjectProperty rdf:about="#end">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >Denotes a connector that attaches to this connectable element.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectableElement"/>
        <rdfs:range rdf:resource="#ConnectorEnd"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end2 -->

    <owl:ObjectProperty rdf:about="#end2">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >Link end to be read.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end3 -->

    <owl:ObjectProperty rdf:about="#end3">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >A connector consists of at least two connector ends, each representing the participation of instances of the classifiers typing the connectable elements attached to this end. The set of connector ends is ordered.</rdfs:comment>
        <rdfs:domain rdf:resource="#Connector"/>
        <rdfs:range rdf:resource="#ConnectorEnd"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end4 -->

    <owl:ObjectProperty rdf:about="#end4">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >Association end for which this link-end data specifies values.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndData"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#endData -->

    <owl:ObjectProperty rdf:about="#endData">
        <rdfs:label>endData</rdfs:label>
        <rdfs:comment
            >Data identifying one end of a link by the objects on its ends and qualifiers.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkAction"/>
        <rdfs:range rdf:resource="#LinkEndData"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#endType -->

    <owl:ObjectProperty rdf:about="#endType">
        <rdfs:label>endType</rdfs:label>
        <rdfs:comment
            >References the classifiers that are used as types of the ends of the association.</rdfs:comment>
        <rdfs:domain rdf:resource="#Association"/>
        <rdfs:range rdf:resource="#Type"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#entry -->

    <owl:ObjectProperty rdf:about="#entry">
        <rdfs:label>entry</rdfs:label>
        <rdfs:comment
            >The entryPoint kind pseudo states corresponding to this connection point.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectionPointReference"/>
        <rdfs:range rdf:resource="#Pseudostate"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#entry2 -->

    <owl:ObjectProperty rdf:about="#entry2">
        <rdfs:label>entry</rdfs:label>
        <rdfs:comment
            >An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#enumeration -->

    <owl:ObjectProperty rdf:about="#enumeration">
        <rdfs:label>enumeration</rdfs:label>
        <rdfs:comment
            >The Enumeration that this EnumerationLiteral is a member of.</rdfs:comment>
        <rdfs:range rdf:resource="#Enumeration"/>
        <rdfs:domain rdf:resource="#EnumerationLiteral"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#event -->

    <owl:ObjectProperty rdf:about="#event">
        <rdfs:label>event</rdfs:label>
        <rdfs:comment
            >The observation is determined by the entering or exiting of the event element during execution.</rdfs:comment>
        <rdfs:range rdf:resource="#NamedElement"/>
        <rdfs:domain rdf:resource="#TimeObservation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#event2 -->

    <owl:ObjectProperty rdf:about="#event2">
        <rdfs:label>event</rdfs:label>
        <rdfs:comment
            >The observation is determined by the entering or exiting of the event element during execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#DurationObservation"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#event3 -->

    <owl:ObjectProperty rdf:about="#event3">
        <rdfs:label>event</rdfs:label>
        <rdfs:comment
            >References a specification of the occurring event.</rdfs:comment>
        <rdfs:range rdf:resource="#Event"/>
        <rdfs:domain rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#event4 -->

    <owl:ObjectProperty rdf:about="#event4">
        <rdfs:label>event</rdfs:label>
        <rdfs:comment
            >The event that causes the trigger.</rdfs:comment>
        <rdfs:range rdf:resource="#Event"/>
        <rdfs:domain rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exception -->

    <owl:ObjectProperty rdf:about="#exception">
        <rdfs:label>exception</rdfs:label>
        <rdfs:comment
            >An input pin whose value becomes an exception object.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#RaiseExceptionAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exceptionInput -->

    <owl:ObjectProperty rdf:about="#exceptionInput">
        <rdfs:label>exceptionInput</rdfs:label>
        <rdfs:comment
            >An object node within the handler body. When the handler catches an exception, the exception token is placed in this node, causing the body to execute.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
        <rdfs:range rdf:resource="#ObjectNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exceptionType -->

    <owl:ObjectProperty rdf:about="#exceptionType">
        <rdfs:label>exceptionType</rdfs:label>
        <rdfs:comment
            >The kind of instances that the handler catches. If an exception occurs whose type is any of the classifiers in the set, the handler catches the exception and executes its body.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#executableNode -->

    <owl:ObjectProperty rdf:about="#executableNode">
        <rdfs:label>executableNode</rdfs:label>
        <rdfs:comment
            >An ordered set of executable nodes.</rdfs:comment>
        <rdfs:range rdf:resource="#ExecutableNode"/>
        <rdfs:domain rdf:resource="#SequenceNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#execution -->

    <owl:ObjectProperty rdf:about="#execution">
        <rdfs:label>execution</rdfs:label>
        <rdfs:comment
            >References the execution specification describing the execution that is started or finished at this execution event.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExecutionOccurrenceSpecification"/>
        <rdfs:range rdf:resource="#ExecutionSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exit -->

    <owl:ObjectProperty rdf:about="#exit">
        <rdfs:label>exit</rdfs:label>
        <rdfs:comment
            >The exitPoints kind pseudo states corresponding to this connection point.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectionPointReference"/>
        <rdfs:range rdf:resource="#Pseudostate"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exit2 -->

    <owl:ObjectProperty rdf:about="#exit2">
        <rdfs:label>exit</rdfs:label>
        <rdfs:comment
            >An optional behavior that is executed whenever this state is exited regardless of which transition was taken out of the state. If defined, exit actions are always executed to completion only after all internal activities and transition actions have completed execution.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#expr -->

    <owl:ObjectProperty rdf:about="#expr">
        <rdfs:label>expr</rdfs:label>
        <rdfs:comment
            >The value of the Duration.</rdfs:comment>
        <rdfs:domain rdf:resource="#Duration"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#expr2 -->

    <owl:ObjectProperty rdf:about="#expr2">
        <rdfs:label>expr</rdfs:label>
        <rdfs:comment
            >The value of the time expression.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeExpression"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extend -->

    <owl:ObjectProperty rdf:about="#extend">
        <rdfs:label>extend</rdfs:label>
        <rdfs:comment
            >References the Extend relationships owned by this use case.</rdfs:comment>
        <rdfs:range rdf:resource="#Extend"/>
        <rdfs:domain rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extendedCase -->

    <owl:ObjectProperty rdf:about="#extendedCase">
        <rdfs:label>extendedCase</rdfs:label>
        <rdfs:comment
            >References the use case that is being extended.</rdfs:comment>
        <rdfs:domain rdf:resource="#Extend"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extendedRegion -->

    <owl:ObjectProperty rdf:about="#extendedRegion">
        <rdfs:label>extendedRegion</rdfs:label>
        <rdfs:comment
            >The region of which this region is an extension.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="#Region"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extendedSignature -->

    <owl:ObjectProperty rdf:about="#extendedSignature">
        <rdfs:label
            >extendedSignature</rdfs:label>
        <rdfs:comment
            >The template signature that is extended by this template signature.</rdfs:comment>
        <rdfs:range rdf:resource="#RedefinableTemplateSignature"/>
        <rdfs:domain rdf:resource="#RedefinableTemplateSignature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extendedStateMachine -->

    <owl:ObjectProperty rdf:about="#extendedStateMachine">
        <rdfs:label
            >extendedStateMachine</rdfs:label>
        <rdfs:comment
            >The state machines of which this is an extension.</rdfs:comment>
        <rdfs:domain rdf:resource="#StateMachine"/>
        <rdfs:range rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extension3 -->

    <owl:ObjectProperty rdf:about="#extension3">
        <rdfs:label>extension</rdfs:label>
        <rdfs:comment
            >References the use case that represents the extension and owns the extend relationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#Extend"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extension4 -->

    <owl:ObjectProperty rdf:about="#extension4">
        <rdfs:label>extension</rdfs:label>
        <rdfs:comment
            >References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class.</rdfs:comment>
        <owl:objectPropertyRange rdf:resource="#Extension"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extensionLocation -->

    <owl:ObjectProperty rdf:about="#extensionLocation">
        <rdfs:label
            >extensionLocation</rdfs:label>
        <rdfs:comment
            >An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)</rdfs:comment>
        <rdfs:domain rdf:resource="#Extend"/>
        <rdfs:range rdf:resource="#ExtensionPoint"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extensionPoint -->

    <owl:ObjectProperty rdf:about="#extensionPoint">
        <rdfs:label>extensionPoint</rdfs:label>
        <rdfs:comment
            >References the ExtensionPoints owned by the use case.</rdfs:comment>
        <rdfs:range rdf:resource="#ExtensionPoint"/>
        <rdfs:domain rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#feature -->

    <owl:ObjectProperty rdf:about="#feature">
        <rdfs:label>feature</rdfs:label>
        <rdfs:comment
            >Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.
Specifies each feature defined in the classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#Feature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#featuringClassifier -->

    <owl:ObjectProperty rdf:about="#featuringClassifier">
        <rdfs:label
            >featuringClassifier</rdfs:label>
        <rdfs:comment
            >The Classifiers that have this Feature as a feature.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Feature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#finish -->

    <owl:ObjectProperty rdf:about="#finish">
        <rdfs:label>finish</rdfs:label>
        <rdfs:comment
            >References the OccurrenceSpecification that designates the finish of the Action or Behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExecutionSpecification"/>
        <rdfs:range rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#first -->

    <owl:ObjectProperty rdf:about="#first">
        <rdfs:label>first</rdfs:label>
        <rdfs:comment
            >Gives the pin on which an object is placed.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#TestIdentityAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#formal -->

    <owl:ObjectProperty rdf:about="#formal">
        <rdfs:label>formal</rdfs:label>
        <rdfs:comment
            >The formal template parameter that is associated with this substitution.</rdfs:comment>
        <rdfs:range rdf:resource="#TemplateParameter"/>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#formalGate -->

    <owl:ObjectProperty rdf:about="#formalGate">
        <rdfs:label>formalGate</rdfs:label>
        <rdfs:comment
            >Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.</rdfs:comment>
        <rdfs:range rdf:resource="#Gate"/>
        <rdfs:domain rdf:resource="#Interaction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#fragment -->

    <owl:ObjectProperty rdf:about="#fragment">
        <rdfs:label>fragment</rdfs:label>
        <rdfs:comment
            >The fragments of the operand.</rdfs:comment>
        <rdfs:range rdf:resource="#InteractionFragment"/>
        <rdfs:domain rdf:resource="#InteractionOperand"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#fragment2 -->

    <owl:ObjectProperty rdf:about="#fragment2">
        <rdfs:label>fragment</rdfs:label>
        <rdfs:comment
            >The ordered set of fragments in the Interaction.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="#InteractionFragment"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#fromAction -->

    <owl:ObjectProperty rdf:about="#fromAction">
        <rdfs:label>fromAction</rdfs:label>
        <rdfs:comment
            >The action used to provide values.</rdfs:comment>
        <rdfs:range rdf:resource="#Action"/>
        <rdfs:domain rdf:resource="#ActionInputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#general -->

    <owl:ObjectProperty rdf:about="#general">
        <rdfs:label>general</rdfs:label>
        <rdfs:comment
            >References the general classifier in the Generalization relationship.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Generalization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#general2 -->

    <owl:ObjectProperty rdf:about="#general2">
        <rdfs:label>general</rdfs:label>
        <rdfs:comment
            >References the general classifier in the Generalization relationship.
Specifies the general Classifiers for this Classifier.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Classifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalMachine -->

    <owl:ObjectProperty rdf:about="#generalMachine">
        <rdfs:label>generalMachine</rdfs:label>
        <rdfs:comment
            >Specifies the protocol state machine to which the specific state machine conforms.</rdfs:comment>
        <rdfs:domain rdf:resource="#ProtocolConformance"/>
        <rdfs:range rdf:resource="#ProtocolStateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalOrdering -->

    <owl:ObjectProperty rdf:about="#generalOrdering">
        <rdfs:label>generalOrdering</rdfs:label>
        <rdfs:comment
            >The general ordering relationships contained in this fragment.</rdfs:comment>
        <rdfs:range rdf:resource="#GeneralOrdering"/>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalization -->

    <owl:ObjectProperty rdf:about="#generalization">
        <rdfs:label>generalization</rdfs:label>
        <rdfs:comment
            >Designates the instances of Generalization which are members of a given GeneralizationSet.</rdfs:comment>
        <rdfs:range rdf:resource="#Generalization"/>
        <rdfs:domain rdf:resource="#GeneralizationSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalization2 -->

    <owl:ObjectProperty rdf:about="#generalization2">
        <rdfs:label>generalization</rdfs:label>
        <rdfs:comment
            >Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#Generalization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalizationSet -->

    <owl:ObjectProperty rdf:about="#generalizationSet">
        <rdfs:label
            >generalizationSet</rdfs:label>
        <rdfs:comment
            >Designates a set in which instances of Generalization is considered members.</rdfs:comment>
        <rdfs:domain rdf:resource="#Generalization"/>
        <rdfs:range rdf:resource="#GeneralizationSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#group -->

    <owl:ObjectProperty rdf:about="#group">
        <rdfs:label>group</rdfs:label>
        <rdfs:comment
            >Top-level groups in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="#ActivityGroup"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#guard -->

    <owl:ObjectProperty rdf:about="#guard">
        <rdfs:label>guard</rdfs:label>
        <rdfs:comment
            >Constraint of the operand.</rdfs:comment>
        <rdfs:range rdf:resource="#InteractionConstraint"/>
        <rdfs:domain rdf:resource="#InteractionOperand"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#guard2 -->

    <owl:ObjectProperty rdf:about="#guard2">
        <rdfs:label>guard</rdfs:label>
        <rdfs:comment
            >A guard is a constraint that provides a fine-grained control over the firing of the transition. The guard is evaluated when an event occurrence is dispatched by the state machine. If the guard is true at that time, the transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#Transition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#guard3 -->

    <owl:ObjectProperty rdf:about="#guard3">
        <rdfs:label>guard</rdfs:label>
        <rdfs:comment
            >Specification evaluated at runtime to determine if the edge can be traversed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#handler -->

    <owl:ObjectProperty rdf:about="#handler">
        <rdfs:label>handler</rdfs:label>
        <rdfs:comment
            >A set of exception handlers that are examined if an uncaught exception propagates to the outer level of the executable node.</rdfs:comment>
        <rdfs:range rdf:resource="#ExceptionHandler"/>
        <rdfs:domain rdf:resource="#ExecutableNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#handlerBody -->

    <owl:ObjectProperty rdf:about="#handlerBody">
        <rdfs:label>handlerBody</rdfs:label>
        <rdfs:comment
            >A node that is executed if the handler satisfies an uncaught exception.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
        <rdfs:range rdf:resource="#ExecutableNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#icon -->

    <owl:ObjectProperty rdf:about="#icon">
        <rdfs:label>icon</rdfs:label>
        <rdfs:comment
            >Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements.</rdfs:comment>
        <rdfs:range rdf:resource="#Image"/>
        <rdfs:domain rdf:resource="#Stereotype"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#implementingClassifier -->

    <owl:ObjectProperty rdf:about="#implementingClassifier">
        <rdfs:label
            >implementingClassifier</rdfs:label>
        <rdfs:comment
            >References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points).</rdfs:comment>
        <rdfs:range rdf:resource="#BehavioredClassifier"/>
        <rdfs:domain rdf:resource="#InterfaceRealization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importedElement -->

    <owl:ObjectProperty rdf:about="#importedElement">
        <rdfs:label>importedElement</rdfs:label>
        <rdfs:comment
            >Specifies the PackageableElement whose name is to be added to a Namespace.</rdfs:comment>
        <rdfs:domain rdf:resource="#ElementImport"/>
        <rdfs:range rdf:resource="#PackageableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importedMember -->

    <owl:ObjectProperty rdf:about="#importedMember">
        <rdfs:label>importedMember</rdfs:label>
        <rdfs:comment
            >References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</rdfs:comment>
        <rdfs:domain rdf:resource="#Namespace"/>
        <rdfs:range rdf:resource="#PackageableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importedPackage -->

    <owl:ObjectProperty rdf:about="#importedPackage">
        <rdfs:label>importedPackage</rdfs:label>
        <rdfs:comment
            >Specifies the Package whose members are imported into a Namespace.</rdfs:comment>
        <rdfs:range rdf:resource="#Package"/>
        <rdfs:domain rdf:resource="#PackageImport"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importingNamespace -->

    <owl:ObjectProperty rdf:about="#importingNamespace">
        <rdfs:label
            >importingNamespace</rdfs:label>
        <rdfs:comment
            >Specifies the Namespace that imports a PackageableElement from another Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#ElementImport"/>
        <rdfs:range rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importingNamespace2 -->

    <owl:ObjectProperty rdf:about="#importingNamespace2">
        <rdfs:label
            >importingNamespace</rdfs:label>
        <rdfs:comment
            >Specifies the Namespace that imports the members from a Package.</rdfs:comment>
        <rdfs:range rdf:resource="#Namespace"/>
        <rdfs:domain rdf:resource="#PackageImport"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inActivity -->

    <owl:ObjectProperty rdf:about="#inActivity">
        <rdfs:label>inActivity</rdfs:label>
        <rdfs:comment
            >Activity containing the group.</rdfs:comment>
        <rdfs:range rdf:resource="#Activity"/>
        <rdfs:domain rdf:resource="#ActivityGroup"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inGroup -->

    <owl:ObjectProperty rdf:about="#inGroup">
        <rdfs:label>inGroup</rdfs:label>
        <rdfs:comment
            >Groups containing the node.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityGroup"/>
        <rdfs:domain rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inGroup2 -->

    <owl:ObjectProperty rdf:about="#inGroup2">
        <rdfs:label>inGroup</rdfs:label>
        <rdfs:comment
            >Groups containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ActivityGroup"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inInterruptibleRegion -->

    <owl:ObjectProperty rdf:about="#inInterruptibleRegion">
        <rdfs:label
            >inInterruptibleRegion</rdfs:label>
        <rdfs:comment
            >Interruptible regions containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="#InterruptibleActivityRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inPartition -->

    <owl:ObjectProperty rdf:about="#inPartition">
        <rdfs:label>inPartition</rdfs:label>
        <rdfs:comment
            >Partitions containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inPartition2 -->

    <owl:ObjectProperty rdf:about="#inPartition2">
        <rdfs:label>inPartition</rdfs:label>
        <rdfs:comment
            >Partitions containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inState -->

    <owl:ObjectProperty rdf:about="#inState">
        <rdfs:label>inState</rdfs:label>
        <rdfs:comment
            >The required states of the object available at this point in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inStructuredNode -->

    <owl:ObjectProperty rdf:about="#inStructuredNode">
        <rdfs:label
            >inStructuredNode</rdfs:label>
        <rdfs:comment
            >Structured activity node containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#StructuredActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inStructuredNode2 -->

    <owl:ObjectProperty rdf:about="#inStructuredNode2">
        <rdfs:label
            >inStructuredNode</rdfs:label>
        <rdfs:comment
            >Structured activity node containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="#StructuredActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#include -->

    <owl:ObjectProperty rdf:about="#include">
        <rdfs:label>include</rdfs:label>
        <rdfs:comment
            >References the Include relationships owned by this use case.</rdfs:comment>
        <rdfs:range rdf:resource="#Include"/>
        <rdfs:domain rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#includingCase -->

    <owl:ObjectProperty rdf:about="#includingCase">
        <rdfs:label>includingCase</rdfs:label>
        <rdfs:comment
            >References the use case which will include the addition and owns the include relationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#Include"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#incoming -->

    <owl:ObjectProperty rdf:about="#incoming">
        <rdfs:label>incoming</rdfs:label>
        <rdfs:comment
            >Edges that have the node as target.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#incoming2 -->

    <owl:ObjectProperty rdf:about="#incoming2">
        <rdfs:label>incoming</rdfs:label>
        <rdfs:comment
            >Specifies the transitions entering this vertex.</rdfs:comment>
        <rdfs:range rdf:resource="#Transition"/>
        <rdfs:domain rdf:resource="#Vertex"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#informationSource -->

    <owl:ObjectProperty rdf:about="#informationSource">
        <rdfs:label
            >informationSource</rdfs:label>
        <rdfs:comment
            >Defines from which source the conveyed InformationItems are initiated.</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationFlow"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#informationTarget -->

    <owl:ObjectProperty rdf:about="#informationTarget">
        <rdfs:label
            >informationTarget</rdfs:label>
        <rdfs:comment
            >Defines to which target the conveyed InformationItems are directed.</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationFlow"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inheritedMember -->

    <owl:ObjectProperty rdf:about="#inheritedMember">
        <rdfs:label>inheritedMember</rdfs:label>
        <rdfs:comment
            >Specifies all elements inherited by this classifier from the general classifiers.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inheritedParameter -->

    <owl:ObjectProperty rdf:about="#inheritedParameter">
        <rdfs:label
            >inheritedParameter</rdfs:label>
        <rdfs:comment
            >The formal template parameters of the extendedSignature.</rdfs:comment>
        <rdfs:domain rdf:resource="#RedefinableTemplateSignature"/>
        <rdfs:range rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#input -->

    <owl:ObjectProperty rdf:about="#input">
        <rdfs:label>input</rdfs:label>
        <rdfs:comment
            >The ordered set of input pins connected to the Action. These are among the total set of inputs.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="#InputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inputElement -->

    <owl:ObjectProperty rdf:about="#inputElement">
        <rdfs:label>inputElement</rdfs:label>
        <rdfs:comment
            >An object node that holds a separate element of the input collection during each of the multiple executions of the region.</rdfs:comment>
        <rdfs:range rdf:resource="#ExpansionNode"/>
        <rdfs:domain rdf:resource="#ExpansionRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inputValue -->

    <owl:ObjectProperty rdf:about="#inputValue">
        <rdfs:label>inputValue</rdfs:label>
        <rdfs:comment
            >Provides input to the action.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#OpaqueAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inputValue2 -->

    <owl:ObjectProperty rdf:about="#inputValue2">
        <rdfs:label>inputValue</rdfs:label>
        <rdfs:comment
            >Pins taking end objects and qualifier values as input.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#LinkAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#insertAt -->

    <owl:ObjectProperty rdf:about="#insertAt">
        <rdfs:label>insertAt</rdfs:label>
        <rdfs:comment
            >Gives the position at which to insert a new value or move an existing value in ordered structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero. This pin is omitted for unordered structural features.</rdfs:comment>
        <rdfs:domain rdf:resource="#AddStructuralFeatureValueAction"/>
        <rdfs:range rdf:resource="#InputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#insertAt2 -->

    <owl:ObjectProperty rdf:about="#insertAt2">
        <rdfs:label>insertAt</rdfs:label>
        <rdfs:comment
            >Gives the position at which to insert a new value or move an existing value in ordered variables. The types is UnlimitedINatural, but the value cannot be zero. This pin is omitted for unordered variables.</rdfs:comment>
        <rdfs:domain rdf:resource="#AddVariableValueAction"/>
        <rdfs:range rdf:resource="#InputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#insertAt3 -->

    <owl:ObjectProperty rdf:about="#insertAt3">
        <rdfs:label>insertAt</rdfs:label>
        <rdfs:comment
            >Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#LinkEndCreationData"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#instance -->

    <owl:ObjectProperty rdf:about="#instance">
        <rdfs:label>instance</rdfs:label>
        <rdfs:comment
            >The instance that is the specified value.</rdfs:comment>
        <rdfs:range rdf:resource="#InstanceSpecification"/>
        <rdfs:domain rdf:resource="#InstanceValue"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interaction -->

    <owl:ObjectProperty rdf:about="#interaction">
        <rdfs:label>interaction</rdfs:label>
        <rdfs:comment
            >The enclosing Interaction owning the Message</rdfs:comment>
        <rdfs:range rdf:resource="#Interaction"/>
        <rdfs:domain rdf:resource="#Message"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interaction2 -->

    <owl:ObjectProperty rdf:about="#interaction2">
        <rdfs:label>interaction</rdfs:label>
        <rdfs:comment
            >References the Interaction enclosing this Lifeline.</rdfs:comment>
        <rdfs:range rdf:resource="#Interaction"/>
        <rdfs:domain rdf:resource="#Lifeline"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interface -->

    <owl:ObjectProperty rdf:about="#interface">
        <rdfs:label>interface</rdfs:label>
        <rdfs:comment
            >The Interface that owns this Operation.</rdfs:comment>
        <rdfs:range rdf:resource="#Interface"/>
        <rdfs:domain rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interfaceRealization -->

    <owl:ObjectProperty rdf:about="#interfaceRealization">
        <rdfs:label
            >interfaceRealization</rdfs:label>
        <rdfs:comment
            >The set of InterfaceRealizations owned by the BehavioredClassifier. Interface realizations reference the Interfaces of which the BehavioredClassifier is an implementation.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioredClassifier"/>
        <rdfs:range rdf:resource="#InterfaceRealization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interruptingEdge -->

    <owl:ObjectProperty rdf:about="#interruptingEdge">
        <rdfs:label
            >interruptingEdge</rdfs:label>
        <rdfs:comment
            >The edges leaving the region that will abort other tokens flowing in the region.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#InterruptibleActivityRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interrupts -->

    <owl:ObjectProperty rdf:about="#interrupts">
        <rdfs:label>interrupts</rdfs:label>
        <rdfs:comment
            >Region that the edge can interrupt.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#InterruptibleActivityRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#invariant -->

    <owl:ObjectProperty rdf:about="#invariant">
        <rdfs:label>invariant</rdfs:label>
        <rdfs:comment
            >A Constraint that should hold at runtime for this StateInvariant</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#StateInvariant"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#joinSpec -->

    <owl:ObjectProperty rdf:about="#joinSpec">
        <rdfs:label>joinSpec</rdfs:label>
        <rdfs:comment
            >A specification giving the conditions under which the join with emit a token. Default is &quot;and&quot;.</rdfs:comment>
        <rdfs:domain rdf:resource="#JoinNode"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lifeline -->

    <owl:ObjectProperty rdf:about="#lifeline">
        <rdfs:label>lifeline</rdfs:label>
        <rdfs:comment
            >Specifies the participants in this Interaction.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="#Lifeline"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#localPostcondition -->

    <owl:ObjectProperty rdf:about="#localPostcondition">
        <rdfs:label
            >localPostcondition</rdfs:label>
        <rdfs:comment
            >Constraint that must be satisfied when executed is completed.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="#Constraint"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#localPrecondition -->

    <owl:ObjectProperty rdf:about="#localPrecondition">
        <rdfs:label
            >localPrecondition</rdfs:label>
        <rdfs:comment
            >Constraint that must be satisfied when execution is started.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="#Constraint"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#location -->

    <owl:ObjectProperty rdf:about="#location">
        <rdfs:label>location</rdfs:label>
        <rdfs:comment
            >The DeployedTarget which is the target of a Deployment.</rdfs:comment>
        <rdfs:domain rdf:resource="#Deployment"/>
        <rdfs:range rdf:resource="#DeploymentTarget"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#loopVariable -->

    <owl:ObjectProperty rdf:about="#loopVariable">
        <rdfs:label>loopVariable</rdfs:label>
        <rdfs:comment
            >A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#loopVariableInput -->

    <owl:ObjectProperty rdf:about="#loopVariableInput">
        <rdfs:label
            >loopVariableInput</rdfs:label>
        <rdfs:comment
            >A list of values that are moved into the loop variable pins before the first iteration of the loop.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#LoopNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lowerValue -->

    <owl:ObjectProperty rdf:about="#lowerValue">
        <rdfs:label>lowerValue</rdfs:label>
        <rdfs:comment
            >The specification of the lower bound for this multiplicity.</rdfs:comment>
        <rdfs:domain rdf:resource="#MultiplicityElement"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#manifestation -->

    <owl:ObjectProperty rdf:about="#manifestation">
        <rdfs:label>manifestation</rdfs:label>
        <rdfs:comment
            >The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact.</rdfs:comment>
        <rdfs:domain rdf:resource="#Artifact"/>
        <rdfs:range rdf:resource="#Manifestation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#mapping -->

    <owl:ObjectProperty rdf:about="#mapping">
        <rdfs:label>mapping</rdfs:label>
        <rdfs:comment
            >An composition of an Expression that states the abstraction relationship between the supplier and the client. In some cases, such as Derivation, it is usually formal and unidirectional; in other cases, such as Trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the elements is not specified.</rdfs:comment>
        <rdfs:domain rdf:resource="#Abstraction"/>
        <rdfs:range rdf:resource="#OpaqueExpression"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#max -->

    <owl:ObjectProperty rdf:about="#max">
        <rdfs:label>max</rdfs:label>
        <rdfs:comment
            >Refers to the ValueSpecification denoting the maximum value of the range.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interval"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#maxint -->

    <owl:ObjectProperty rdf:about="#maxint">
        <rdfs:label>maxint</rdfs:label>
        <rdfs:comment
            >The maximum number of iterations of a loop</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionConstraint"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#member -->

    <owl:ObjectProperty rdf:about="#member">
        <rdfs:label>member</rdfs:label>
        <rdfs:comment
            >A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance.</rdfs:comment>
        <rdfs:range rdf:resource="#NamedElement"/>
        <rdfs:domain rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#memberEnd -->

    <owl:ObjectProperty rdf:about="#memberEnd">
        <rdfs:label>memberEnd</rdfs:label>
        <rdfs:comment
            >Each end represents participation of instances of the classifier connected to the end in links of the association.</rdfs:comment>
        <rdfs:domain rdf:resource="#Association"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#mergedPackage -->

    <owl:ObjectProperty rdf:about="#mergedPackage">
        <rdfs:label>mergedPackage</rdfs:label>
        <rdfs:comment
            >References the Package that is to be merged with the receiving package of the PackageMerge.</rdfs:comment>
        <rdfs:range rdf:resource="#Package"/>
        <rdfs:domain rdf:resource="#PackageMerge"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#message -->

    <owl:ObjectProperty rdf:about="#message">
        <rdfs:label>message</rdfs:label>
        <rdfs:comment
            >The set of messages that apply to this fragment</rdfs:comment>
        <rdfs:domain rdf:resource="#ConsiderIgnoreFragment"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#message2 -->

    <owl:ObjectProperty rdf:about="#message2">
        <rdfs:label>message</rdfs:label>
        <rdfs:comment
            >The Messages contained in this Interaction.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="#Message"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#message3 -->

    <owl:ObjectProperty rdf:about="#message3">
        <rdfs:label>message</rdfs:label>
        <rdfs:comment
            >References a Message.</rdfs:comment>
        <rdfs:range rdf:resource="#Message"/>
        <rdfs:domain rdf:resource="#MessageEnd"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#metaclass -->

    <owl:ObjectProperty rdf:about="#metaclass">
        <rdfs:label>metaclass</rdfs:label>
        <rdfs:comment
            >References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd.</rdfs:comment>
        <rdfs:range rdf:resource="#Class"/>
        <rdfs:domain rdf:resource="#Extension"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#metaclassReference -->

    <owl:ObjectProperty rdf:about="#metaclassReference">
        <rdfs:label
            >metaclassReference</rdfs:label>
        <rdfs:comment
            >References a metaclass that may be extended.</rdfs:comment>
        <rdfs:range rdf:resource="#ElementImport"/>
        <rdfs:domain rdf:resource="#Profile"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#metamodelReference -->

    <owl:ObjectProperty rdf:about="#metamodelReference">
        <rdfs:label
            >metamodelReference</rdfs:label>
        <rdfs:comment
            >References a package containing (directly or indirectly) metaclasses that may be extended.</rdfs:comment>
        <rdfs:range rdf:resource="#PackageImport"/>
        <rdfs:domain rdf:resource="#Profile"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#method -->

    <owl:ObjectProperty rdf:about="#method">
        <rdfs:label>method</rdfs:label>
        <rdfs:comment
            >A behavioral description that implements the behavioral feature. There may be at most one behavior for a particular pairing of a classifier (as owner of the behavior) and a behavioral feature (as specification of the behavior).</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#min -->

    <owl:ObjectProperty rdf:about="#min">
        <rdfs:label>min</rdfs:label>
        <rdfs:comment
            >Refers to the ValueSpecification denoting the minimum value of the range.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interval"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#minint -->

    <owl:ObjectProperty rdf:about="#minint">
        <rdfs:label>minint</rdfs:label>
        <rdfs:comment
            >The minimum number of iterations of a loop</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionConstraint"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nameExpression -->

    <owl:ObjectProperty rdf:about="#nameExpression">
        <rdfs:label>nameExpression</rdfs:label>
        <rdfs:comment
            >The string expression used to define the name of this named element.</rdfs:comment>
        <rdfs:domain rdf:resource="#NamedElement"/>
        <rdfs:range rdf:resource="#StringExpression"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#namespace -->

    <owl:ObjectProperty rdf:about="#namespace">
        <rdfs:label>namespace</rdfs:label>
        <rdfs:comment
            >Specifies the namespace that owns the NamedElement.</rdfs:comment>
        <rdfs:domain rdf:resource="#NamedElement"/>
        <rdfs:range rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#navigableOwnedEnd -->

    <owl:ObjectProperty rdf:about="#navigableOwnedEnd">
        <rdfs:label
            >navigableOwnedEnd</rdfs:label>
        <rdfs:comment
            >The navigable ends that are owned by the association itself.</rdfs:comment>
        <rdfs:domain rdf:resource="#Association"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedArtifact -->

    <owl:ObjectProperty rdf:about="#nestedArtifact">
        <rdfs:label>nestedArtifact</rdfs:label>
        <rdfs:comment
            >The Artifacts that are defined (nested) within the Artifact.
The association is a specialization of the ownedMember association from Namespace to NamedElement.</rdfs:comment>
        <rdfs:range rdf:resource="#Artifact"/>
        <rdfs:domain rdf:resource="#Artifact"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedClassifier2 -->

    <owl:ObjectProperty rdf:about="#nestedClassifier2">
        <rdfs:label
            >nestedClassifier</rdfs:label>
        <rdfs:comment
            >References all the Classifiers that are defined (nested) within the Class.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Interface"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedClassifier5 -->

    <owl:ObjectProperty rdf:about="#nestedClassifier5">
        <rdfs:label
            >nestedClassifier</rdfs:label>
        <rdfs:comment
            >References all the Classifiers that are defined (nested) within the Class.</rdfs:comment>
        <owl:objectPropertyRange rdf:resource="#Classifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedNode -->

    <owl:ObjectProperty rdf:about="#nestedNode">
        <rdfs:label>nestedNode</rdfs:label>
        <rdfs:comment
            >The Nodes that are defined (nested) within the Node.</rdfs:comment>
        <rdfs:range rdf:resource="#Node"/>
        <rdfs:domain rdf:resource="#Node"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedPackage -->

    <owl:ObjectProperty rdf:about="#nestedPackage">
        <rdfs:label>nestedPackage</rdfs:label>
        <rdfs:comment
            >References the packaged elements that are Packages.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="#Package"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestingPackage -->

    <owl:ObjectProperty rdf:about="#nestingPackage">
        <rdfs:label>nestingPackage</rdfs:label>
        <rdfs:comment
            >References the Package that owns this Package.</rdfs:comment>
        <rdfs:range rdf:resource="#Package"/>
        <rdfs:domain rdf:resource="#Package"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#newClassifier -->

    <owl:ObjectProperty rdf:about="#newClassifier">
        <rdfs:label>newClassifier</rdfs:label>
        <rdfs:comment
            >A set of classifiers to be added to the classifiers of the object.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#node -->

    <owl:ObjectProperty rdf:about="#node">
        <rdfs:label>node</rdfs:label>
        <rdfs:comment
            >Nodes immediately contained in the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityNode"/>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#node2 -->

    <owl:ObjectProperty rdf:about="#node2">
        <rdfs:label>node</rdfs:label>
        <rdfs:comment
            >Nodes coordinated by the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#node3 -->

    <owl:ObjectProperty rdf:about="#node3">
        <rdfs:label>node</rdfs:label>
        <rdfs:comment
            >Nodes immediately contained in the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityNode"/>
        <rdfs:domain rdf:resource="#StructuredActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#node4 -->

    <owl:ObjectProperty rdf:about="#node4">
        <rdfs:label>node</rdfs:label>
        <rdfs:comment
            >Nodes immediately contained in the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityNode"/>
        <rdfs:domain rdf:resource="#InterruptibleActivityRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object -->

    <owl:ObjectProperty rdf:about="#object">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Gives the input pin from which the object whose structural feature is to be read or written is obtained.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#StructuralFeatureAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object2 -->

    <owl:ObjectProperty rdf:about="#object2">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Gives the input pin from which the link object is obtained.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndQualifierAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object3 -->

    <owl:ObjectProperty rdf:about="#object3">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object which is either a behavior to be started or has a classifier behavior to be started.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#StartObjectBehaviorAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object4 -->

    <owl:ObjectProperty rdf:about="#object4">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object whose classification is to be tested.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object5 -->

    <owl:ObjectProperty rdf:about="#object5">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Gives the input pin from which the link object is obtained.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object6 -->

    <owl:ObjectProperty rdf:about="#object6">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object on which to start the owned behavior.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#StartClassifierBehaviorAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object7 -->

    <owl:ObjectProperty rdf:about="#object7">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Gives the input pin from which is obtained the object whose participation in the association is to be cleared.</rdfs:comment>
        <rdfs:domain rdf:resource="#ClearAssociationAction"/>
        <rdfs:range rdf:resource="#InputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object8 -->

    <owl:ObjectProperty rdf:about="#object8">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >The object to be unmarshalled.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#UnmarshallAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object9 -->

    <owl:ObjectProperty rdf:about="#object9">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object to be reclassified.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#observation -->

    <owl:ObjectProperty rdf:about="#observation">
        <rdfs:label>observation</rdfs:label>
        <rdfs:comment
            >Refers to the time and duration observations that are involved in expr.</rdfs:comment>
        <rdfs:range rdf:resource="#Observation"/>
        <rdfs:domain rdf:resource="#TimeExpression"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#observation2 -->

    <owl:ObjectProperty rdf:about="#observation2">
        <rdfs:label>observation</rdfs:label>
        <rdfs:comment
            >Refers to the time and duration observations that are involved in expr.</rdfs:comment>
        <rdfs:domain rdf:resource="#Duration"/>
        <rdfs:range rdf:resource="#Observation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#oldClassifier -->

    <owl:ObjectProperty rdf:about="#oldClassifier">
        <rdfs:label>oldClassifier</rdfs:label>
        <rdfs:comment
            >A set of classifiers to be removed from the classifiers of the object.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#onPort -->

    <owl:ObjectProperty rdf:about="#onPort">
        <rdfs:label>onPort</rdfs:label>
        <rdfs:comment
            >A optional port of the receiver object on which the behavioral feature is invoked.</rdfs:comment>
        <rdfs:domain rdf:resource="#InvocationAction"/>
        <rdfs:range rdf:resource="#Port"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operand -->

    <owl:ObjectProperty rdf:about="#operand">
        <rdfs:label>operand</rdfs:label>
        <rdfs:comment
            >Specifies a sequence of operands.</rdfs:comment>
        <rdfs:domain rdf:resource="#Expression"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operand2 -->

    <owl:ObjectProperty rdf:about="#operand2">
        <rdfs:label>operand</rdfs:label>
        <rdfs:comment
            >The set of operands of the combined fragment.</rdfs:comment>
        <rdfs:domain rdf:resource="#CombinedFragment"/>
        <rdfs:range rdf:resource="#InteractionOperand"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation -->

    <owl:ObjectProperty rdf:about="#operation">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >Designates the operation whose invocation raised the call event.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallEvent"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation2 -->

    <owl:ObjectProperty rdf:about="#operation2">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >The operation associated with this event.</rdfs:comment>
        <rdfs:range rdf:resource="#Operation"/>
        <rdfs:domain rdf:resource="#SendOperationEvent"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation3 -->

    <owl:ObjectProperty rdf:about="#operation3">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >The operation to be invoked by the action execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallOperationAction"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation4 -->

    <owl:ObjectProperty rdf:about="#operation4">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >References the Operation owning this parameter.</rdfs:comment>
        <rdfs:range rdf:resource="#Operation"/>
        <rdfs:domain rdf:resource="#Parameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation5 -->

    <owl:ObjectProperty rdf:about="#operation5">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >The operation associated with this event.</rdfs:comment>
        <rdfs:range rdf:resource="#Operation"/>
        <rdfs:domain rdf:resource="#ReceiveOperationEvent"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#opposite -->

    <owl:ObjectProperty rdf:about="#opposite">
        <rdfs:label>opposite</rdfs:label>
        <rdfs:comment
            >In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#outgoing -->

    <owl:ObjectProperty rdf:about="#outgoing">
        <rdfs:label>outgoing</rdfs:label>
        <rdfs:comment
            >Specifies the transitions departing from this vertex.</rdfs:comment>
        <rdfs:range rdf:resource="#Transition"/>
        <rdfs:domain rdf:resource="#Vertex"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#outgoing2 -->

    <owl:ObjectProperty rdf:about="#outgoing2">
        <rdfs:label>outgoing</rdfs:label>
        <rdfs:comment
            >Edges that have the node as source.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#output -->

    <owl:ObjectProperty rdf:about="#output">
        <rdfs:label>output</rdfs:label>
        <rdfs:comment
            >The ordered set of output pins connected to the Action. The action places its results onto pins in this set.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#outputElement -->

    <owl:ObjectProperty rdf:about="#outputElement">
        <rdfs:label>outputElement</rdfs:label>
        <rdfs:comment
            >An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete.</rdfs:comment>
        <rdfs:range rdf:resource="#ExpansionNode"/>
        <rdfs:domain rdf:resource="#ExpansionRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#outputValue -->

    <owl:ObjectProperty rdf:about="#outputValue">
        <rdfs:label>outputValue</rdfs:label>
        <rdfs:comment
            >Takes output from the action.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedActual -->

    <owl:ObjectProperty rdf:about="#ownedActual">
        <rdfs:label>ownedActual</rdfs:label>
        <rdfs:comment
            >The actual parameter that is owned by this substitution.</rdfs:comment>
        <rdfs:range rdf:resource="#ParameterableElement"/>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedAttribute -->

    <owl:ObjectProperty rdf:about="#ownedAttribute">
        <rdfs:label>ownedAttribute</rdfs:label>
        <rdfs:comment
            >The attributes (i.e. the properties) owned by the class.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedAttribute2 -->

    <owl:ObjectProperty rdf:about="#ownedAttribute2">
        <rdfs:label>ownedAttribute</rdfs:label>
        <rdfs:comment
            >The attributes or association ends defined for the Artifact.
The association is a specialization of the ownedMember association.</rdfs:comment>
        <rdfs:domain rdf:resource="#Artifact"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedAttribute3 -->

    <owl:ObjectProperty rdf:about="#ownedAttribute3">
        <rdfs:label>ownedAttribute</rdfs:label>
        <rdfs:comment
            >The attributes owned by the signal.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#Signal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedAttribute4 -->

    <owl:ObjectProperty rdf:about="#ownedAttribute4">
        <rdfs:label>ownedAttribute</rdfs:label>
        <rdfs:comment
            >References the properties owned by the classifier.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#StructuredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedAttribute5 -->

    <owl:ObjectProperty rdf:about="#ownedAttribute5">
        <rdfs:label>ownedAttribute</rdfs:label>
        <rdfs:comment
            >The Attributes owned by the DataType.</rdfs:comment>
        <rdfs:domain rdf:resource="#DataType"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedBehavior -->

    <owl:ObjectProperty rdf:about="#ownedBehavior">
        <rdfs:label>ownedBehavior</rdfs:label>
        <rdfs:comment
            >References behavior specifications owned by a classifier.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#BehavioredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedComment -->

    <owl:ObjectProperty rdf:about="#ownedComment">
        <rdfs:label>ownedComment</rdfs:label>
        <rdfs:comment
            >The Comments owned by this element.</rdfs:comment>
        <rdfs:range rdf:resource="#Comment"/>
        <rdfs:domain rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedConnector -->

    <owl:ObjectProperty rdf:about="#ownedConnector">
        <rdfs:label>ownedConnector</rdfs:label>
        <rdfs:comment
            >References the connectors owned by the classifier.</rdfs:comment>
        <rdfs:range rdf:resource="#Connector"/>
        <rdfs:domain rdf:resource="#StructuredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedDefault -->

    <owl:ObjectProperty rdf:about="#ownedDefault">
        <rdfs:label>ownedDefault</rdfs:label>
        <rdfs:comment
            >The element that is owned by this template parameter for the purpose of providing a default.</rdfs:comment>
        <rdfs:range rdf:resource="#ParameterableElement"/>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedElement -->

    <owl:ObjectProperty rdf:about="#ownedElement">
        <rdfs:label>ownedElement</rdfs:label>
        <rdfs:comment
            >The Elements owned by this element.</rdfs:comment>
        <rdfs:range rdf:resource="#Element"/>
        <rdfs:domain rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedEnd -->

    <owl:ObjectProperty rdf:about="#ownedEnd">
        <rdfs:label>ownedEnd</rdfs:label>
        <rdfs:comment
            >The ends that are owned by the association itself.</rdfs:comment>
        <rdfs:domain rdf:resource="#Association"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedLiteral -->

    <owl:ObjectProperty rdf:about="#ownedLiteral">
        <rdfs:label>ownedLiteral</rdfs:label>
        <rdfs:comment
            >The ordered set of literals for this Enumeration.</rdfs:comment>
        <rdfs:domain rdf:resource="#Enumeration"/>
        <rdfs:range rdf:resource="#EnumerationLiteral"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedMember -->

    <owl:ObjectProperty rdf:about="#ownedMember">
        <rdfs:label>ownedMember</rdfs:label>
        <rdfs:comment
            >A collection of NamedElements owned by the Namespace.</rdfs:comment>
        <rdfs:range rdf:resource="#NamedElement"/>
        <rdfs:domain rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedOperation -->

    <owl:ObjectProperty rdf:about="#ownedOperation">
        <rdfs:label>ownedOperation</rdfs:label>
        <rdfs:comment
            >The Operations defined for the Artifact. The association is a specialization of the ownedMember association.</rdfs:comment>
        <rdfs:domain rdf:resource="#Artifact"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedOperation2 -->

    <owl:ObjectProperty rdf:about="#ownedOperation2">
        <rdfs:label>ownedOperation</rdfs:label>
        <rdfs:comment
            >The operations owned by the class.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedOperation3 -->

    <owl:ObjectProperty rdf:about="#ownedOperation3">
        <rdfs:label>ownedOperation</rdfs:label>
        <rdfs:comment
            >The operations owned by the class.</rdfs:comment>
        <rdfs:domain rdf:resource="#Class"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedOperation4 -->

    <owl:ObjectProperty rdf:about="#ownedOperation4">
        <rdfs:label>ownedOperation</rdfs:label>
        <rdfs:comment
            >The Operations owned by the DataType.</rdfs:comment>
        <rdfs:domain rdf:resource="#DataType"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameter -->

    <owl:ObjectProperty rdf:about="#ownedParameter">
        <rdfs:label>ownedParameter</rdfs:label>
        <rdfs:comment
            >Specifies the ordered set of formal parameters of this BehavioralFeature.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="#Parameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameter2 -->

    <owl:ObjectProperty rdf:about="#ownedParameter2">
        <rdfs:label>ownedParameter</rdfs:label>
        <rdfs:comment
            >The formal template parameters that are owned by this template signature.</rdfs:comment>
        <rdfs:range rdf:resource="#TemplateParameter"/>
        <rdfs:domain rdf:resource="#TemplateSignature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameter3 -->

    <owl:ObjectProperty rdf:about="#ownedParameter3">
        <rdfs:label>ownedParameter</rdfs:label>
        <rdfs:comment
            >References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#Parameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameterSet -->

    <owl:ObjectProperty rdf:about="#ownedParameterSet">
        <rdfs:label
            >ownedParameterSet</rdfs:label>
        <rdfs:comment
            >The ParameterSets owned by this Behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#ParameterSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameterSet2 -->

    <owl:ObjectProperty rdf:about="#ownedParameterSet2">
        <rdfs:label
            >ownedParameterSet</rdfs:label>
        <rdfs:comment
            >The ParameterSets owned by this BehavioralFeature.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="#ParameterSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameteredElement -->

    <owl:ObjectProperty rdf:about="#ownedParameteredElement">
        <rdfs:label
            >ownedParameteredElement</rdfs:label>
        <rdfs:comment
            >The element that is owned by this template parameter.</rdfs:comment>
        <rdfs:range rdf:resource="#ParameterableElement"/>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedPort -->

    <owl:ObjectProperty rdf:about="#ownedPort">
        <rdfs:label>ownedPort</rdfs:label>
        <rdfs:comment
            >References a set of ports that an encapsulated classifier owns.</rdfs:comment>
        <rdfs:domain rdf:resource="#EncapsulatedClassifier"/>
        <rdfs:range rdf:resource="#Port"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedReception2 -->

    <owl:ObjectProperty rdf:about="#ownedReception2">
        <rdfs:label>ownedReception</rdfs:label>
        <rdfs:comment
            >Receptions that objects providing this interface are willing to accept.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="#Reception"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedReception5 -->

    <owl:ObjectProperty rdf:about="#ownedReception5">
        <rdfs:label>ownedReception</rdfs:label>
        <rdfs:comment
            >Receptions that objects of this class are willing to accept.</rdfs:comment>
        <owl:objectPropertyRange rdf:resource="#Reception"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedRule -->

    <owl:ObjectProperty rdf:about="#ownedRule">
        <rdfs:label>ownedRule</rdfs:label>
        <rdfs:comment
            >Specifies a set of Constraints owned by this Namespace.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#Namespace"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedStereotype -->

    <owl:ObjectProperty rdf:about="#ownedStereotype">
        <rdfs:label>ownedStereotype</rdfs:label>
        <rdfs:comment
            >References the Stereotypes that are owned by the Profile.</rdfs:comment>
        <rdfs:domain rdf:resource="#Profile"/>
        <rdfs:range rdf:resource="#Stereotype"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedTemplateSignature -->

    <owl:ObjectProperty rdf:about="#ownedTemplateSignature">
        <rdfs:label
            >ownedTemplateSignature</rdfs:label>
        <rdfs:comment
            >The optional template signature specifying the formal template parameters.</rdfs:comment>
        <rdfs:range rdf:resource="#TemplateSignature"/>
        <rdfs:domain rdf:resource="#TemplateableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedTrigger -->

    <owl:ObjectProperty rdf:about="#ownedTrigger">
        <rdfs:label>ownedTrigger</rdfs:label>
        <rdfs:comment
            >References Trigger descriptions owned by a Classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioredClassifier"/>
        <rdfs:range rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedType -->

    <owl:ObjectProperty rdf:about="#ownedType">
        <rdfs:label>ownedType</rdfs:label>
        <rdfs:comment
            >References the packaged elements that are Types.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="#Type"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedUseCase -->

    <owl:ObjectProperty rdf:about="#ownedUseCase">
        <rdfs:label>ownedUseCase</rdfs:label>
        <rdfs:comment
            >References the use cases owned by this classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#owner -->

    <owl:ObjectProperty rdf:about="#owner">
        <rdfs:label>owner</rdfs:label>
        <rdfs:comment
            >The Element that owns this element.</rdfs:comment>
        <rdfs:range rdf:resource="#Element"/>
        <rdfs:domain rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#owningAssociation -->

    <owl:ObjectProperty rdf:about="#owningAssociation">
        <rdfs:label
            >owningAssociation</rdfs:label>
        <rdfs:comment
            >References the owning association of this property, if any.</rdfs:comment>
        <rdfs:range rdf:resource="#Association"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#owningExpression -->

    <owl:ObjectProperty rdf:about="#owningExpression">
        <rdfs:label
            >owningExpression</rdfs:label>
        <rdfs:comment
            >The string expression of which this expression is a substring.</rdfs:comment>
        <rdfs:range rdf:resource="#StringExpression"/>
        <rdfs:domain rdf:resource="#StringExpression"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#owningInstance -->

    <owl:ObjectProperty rdf:about="#owningInstance">
        <rdfs:label>owningInstance</rdfs:label>
        <rdfs:comment
            >The instance specification that owns this slot.</rdfs:comment>
        <rdfs:range rdf:resource="#InstanceSpecification"/>
        <rdfs:domain rdf:resource="#Slot"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#owningTemplateParameter -->

    <owl:ObjectProperty rdf:about="#owningTemplateParameter">
        <rdfs:label
            >owningTemplateParameter</rdfs:label>
        <rdfs:comment
            >The formal template parameter that owns this element.</rdfs:comment>
        <rdfs:domain rdf:resource="#ParameterableElement"/>
        <rdfs:range rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#package -->

    <owl:ObjectProperty rdf:about="#package">
        <rdfs:label>package</rdfs:label>
        <rdfs:comment
            >Specifies the owning package of this classifier, if any.</rdfs:comment>
        <rdfs:range rdf:resource="#Package"/>
        <rdfs:domain rdf:resource="#Type"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#packageImport -->

    <owl:ObjectProperty rdf:about="#packageImport">
        <rdfs:label>packageImport</rdfs:label>
        <rdfs:comment
            >References the PackageImports owned by the Namespace.</rdfs:comment>
        <rdfs:domain rdf:resource="#Namespace"/>
        <rdfs:range rdf:resource="#PackageImport"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#packageMerge -->

    <owl:ObjectProperty rdf:about="#packageMerge">
        <rdfs:label>packageMerge</rdfs:label>
        <rdfs:comment
            >References the PackageMerges that are owned by this Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="#PackageMerge"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#packagedElement -->

    <owl:ObjectProperty rdf:about="#packagedElement">
        <rdfs:label>packagedElement</rdfs:label>
        <rdfs:comment
            >Specifies the packageable elements that are owned by this Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="#PackageableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameter -->

    <owl:ObjectProperty rdf:about="#parameter">
        <rdfs:label>parameter</rdfs:label>
        <rdfs:comment
            >The ordered set of all formal template parameters for this template signature.</rdfs:comment>
        <rdfs:range rdf:resource="#TemplateParameter"/>
        <rdfs:domain rdf:resource="#TemplateSignature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameter2 -->

    <owl:ObjectProperty rdf:about="#parameter2">
        <rdfs:label>parameter</rdfs:label>
        <rdfs:comment
            >Parameters in the parameter set.</rdfs:comment>
        <rdfs:range rdf:resource="#Parameter"/>
        <rdfs:domain rdf:resource="#ParameterSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameter3 -->

    <owl:ObjectProperty rdf:about="#parameter3">
        <rdfs:label>parameter</rdfs:label>
        <rdfs:comment
            >The parameter the object node will be accepting or providing values for.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityParameterNode"/>
        <rdfs:range rdf:resource="#Parameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameterSet -->

    <owl:ObjectProperty rdf:about="#parameterSet">
        <rdfs:label>parameterSet</rdfs:label>
        <rdfs:comment
            >The parameter sets containing the parameter. See ParameterSet.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="#ParameterSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameterSubstitution -->

    <owl:ObjectProperty rdf:about="#parameterSubstitution">
        <rdfs:label
            >parameterSubstitution</rdfs:label>
        <rdfs:comment
            >The parameter substitutions owned by this template binding.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateBinding"/>
        <rdfs:range rdf:resource="#TemplateParameterSubstitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameteredElement -->

    <owl:ObjectProperty rdf:about="#parameteredElement">
        <rdfs:label
            >parameteredElement</rdfs:label>
        <rdfs:comment
            >The element exposed by this template parameter.</rdfs:comment>
        <rdfs:range rdf:resource="#ParameterableElement"/>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#part -->

    <owl:ObjectProperty rdf:about="#part">
        <rdfs:label>part</rdfs:label>
        <rdfs:comment
            >References the properties specifying instances that the classifier owns by composition. This association is derived, selecting those owned properties where isComposite is true.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#StructuredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#partWithPort -->

    <owl:ObjectProperty rdf:about="#partWithPort">
        <rdfs:label>partWithPort</rdfs:label>
        <rdfs:comment
            >Indicates the role of the internal structure of a classifier with the port to which the connector end is attached.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectorEnd"/>
        <rdfs:range rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#partition -->

    <owl:ObjectProperty rdf:about="#partition">
        <rdfs:label>partition</rdfs:label>
        <rdfs:comment
            >Top-level partitions in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#port -->

    <owl:ObjectProperty rdf:about="#port">
        <rdfs:label>port</rdfs:label>
        <rdfs:comment
            >A optional port of the receiver object on which the behavioral feature is invoked.</rdfs:comment>
        <rdfs:range rdf:resource="#Port"/>
        <rdfs:domain rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#postCondition -->

    <owl:ObjectProperty rdf:about="#postCondition">
        <rdfs:label>postCondition</rdfs:label>
        <rdfs:comment
            >Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#ProtocolTransition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#postcondition -->

    <owl:ObjectProperty rdf:about="#postcondition">
        <rdfs:label>postcondition</rdfs:label>
        <rdfs:comment
            >An optional set of Constraints specifying what is fulfilled after the execution of the behavior is completed, if its precondition was fulfilled before its invocation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#Constraint"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#postcondition2 -->

    <owl:ObjectProperty rdf:about="#postcondition2">
        <rdfs:label>postcondition</rdfs:label>
        <rdfs:comment
            >An optional set of Constraints specifying the state of the system when the Operation is completed.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#powertype -->

    <owl:ObjectProperty rdf:about="#powertype">
        <rdfs:label>powertype</rdfs:label>
        <rdfs:comment
            >Designates the Classifier that is defined as the power type for the associated GeneralizationSet.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#GeneralizationSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#powertypeExtent -->

    <owl:ObjectProperty rdf:about="#powertypeExtent">
        <rdfs:label>powertypeExtent</rdfs:label>
        <rdfs:comment
            >Designates the GeneralizationSet of which the associated Classifier is a power type.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#GeneralizationSet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#preCondition -->

    <owl:ObjectProperty rdf:about="#preCondition">
        <rdfs:label>preCondition</rdfs:label>
        <rdfs:comment
            >Specifies the precondition of the transition. It specifies the condition that should be verified before triggering the transition. This guard condition added to the source state will be evaluated as part of the precondition of the operation referred by the transition if any.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#ProtocolTransition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#precondition -->

    <owl:ObjectProperty rdf:about="#precondition">
        <rdfs:label>precondition</rdfs:label>
        <rdfs:comment
            >An optional set of Constraints on the state of the system when the Operation is invoked.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#precondition2 -->

    <owl:ObjectProperty rdf:about="#precondition2">
        <rdfs:label>precondition</rdfs:label>
        <rdfs:comment
            >An optional set of Constraints specifying what must be fulfilled when the behavior is invoked.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#Constraint"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#predecessorClause -->

    <owl:ObjectProperty rdf:about="#predecessorClause">
        <rdfs:label
            >predecessorClause</rdfs:label>
        <rdfs:comment
            >A set of clauses whose tests must all evaluate false before the current clause can be tested.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="#Clause"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#profileApplication -->

    <owl:ObjectProperty rdf:about="#profileApplication">
        <rdfs:label
            >profileApplication</rdfs:label>
        <rdfs:comment
            >References the ProfileApplications that indicate which profiles have been applied to the Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="#ProfileApplication"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#protectedNode -->

    <owl:ObjectProperty rdf:about="#protectedNode">
        <rdfs:label>protectedNode</rdfs:label>
        <rdfs:comment
            >The node protected by the handler. The handler is examined if an exception propagates to the outside of the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
        <rdfs:range rdf:resource="#ExecutableNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#protocol -->

    <owl:ObjectProperty rdf:about="#protocol">
        <rdfs:label>protocol</rdfs:label>
        <rdfs:comment
            >References a protocol state machine specifying the legal sequences of the invocation of the behavioral features described in the interface.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="#ProtocolStateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#protocol2 -->

    <owl:ObjectProperty rdf:about="#protocol2">
        <rdfs:label>protocol</rdfs:label>
        <rdfs:comment
            >References an optional protocol state machine which describes valid interactions at this interaction point.</rdfs:comment>
        <rdfs:domain rdf:resource="#Port"/>
        <rdfs:range rdf:resource="#ProtocolStateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#provided -->

    <owl:ObjectProperty rdf:about="#provided">
        <rdfs:label>provided</rdfs:label>
        <rdfs:comment
            >References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.</rdfs:comment>
        <rdfs:range rdf:resource="#Interface"/>
        <rdfs:domain rdf:resource="#Port"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#provided2 -->

    <owl:ObjectProperty rdf:about="#provided2">
        <rdfs:label>provided</rdfs:label>
        <rdfs:comment
            >The interfaces that the component exposes to its environment. These interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="#Interface"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifier -->

    <owl:ObjectProperty rdf:about="#qualifier">
        <rdfs:label>qualifier</rdfs:label>
        <rdfs:comment
            >An optional list of ordered qualifier attributes for the end. If the list is empty, then the Association is not qualified.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifier2 -->

    <owl:ObjectProperty rdf:about="#qualifier2">
        <rdfs:label>qualifier</rdfs:label>
        <rdfs:comment
            >List of qualifier values</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndData"/>
        <rdfs:range rdf:resource="#QualifierValue"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifier3 -->

    <owl:ObjectProperty rdf:about="#qualifier3">
        <rdfs:label>qualifier</rdfs:label>
        <rdfs:comment
            >Attribute representing the qualifier for which the value is to be specified.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#QualifierValue"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifier4 -->

    <owl:ObjectProperty rdf:about="#qualifier4">
        <rdfs:label>qualifier</rdfs:label>
        <rdfs:comment
            >The attribute representing the qualifier to be read.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndQualifierAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#raisedException -->

    <owl:ObjectProperty rdf:about="#raisedException">
        <rdfs:label>raisedException</rdfs:label>
        <rdfs:comment
            >References the Types representing exceptions that may be raised during an invocation of this feature.
The signals that the behavioral feature raises as exceptions.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="#Type"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realization -->

    <owl:ObjectProperty rdf:about="#realization">
        <rdfs:label>realization</rdfs:label>
        <rdfs:comment
            >Determines which Relationship will realize the specified flow</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationFlow"/>
        <rdfs:range rdf:resource="#Relationship"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realization2 -->

    <owl:ObjectProperty rdf:about="#realization2">
        <rdfs:label>realization</rdfs:label>
        <rdfs:comment
            >The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="#ComponentRealization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realizingActivityEdge -->

    <owl:ObjectProperty rdf:about="#realizingActivityEdge">
        <rdfs:label
            >realizingActivityEdge</rdfs:label>
        <rdfs:comment
            >Determines which ActivityEdges will realize the specified flow.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityEdge"/>
        <rdfs:domain rdf:resource="#InformationFlow"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realizingClassifier -->

    <owl:ObjectProperty rdf:about="#realizingClassifier">
        <rdfs:label
            >realizingClassifier</rdfs:label>
        <rdfs:comment
            >The classifiers that are involved in the implementation of the Component that owns this Realization.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#ComponentRealization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realizingConnector -->

    <owl:ObjectProperty rdf:about="#realizingConnector">
        <rdfs:label
            >realizingConnector</rdfs:label>
        <rdfs:comment
            >Determines which Connectors will realize the specified flow.</rdfs:comment>
        <rdfs:range rdf:resource="#Connector"/>
        <rdfs:domain rdf:resource="#InformationFlow"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realizingMessage -->

    <owl:ObjectProperty rdf:about="#realizingMessage">
        <rdfs:label
            >realizingMessage</rdfs:label>
        <rdfs:comment
            >Determines which Messages will realize the specified flow.</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationFlow"/>
        <rdfs:range rdf:resource="#Message"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#receiveEvent -->

    <owl:ObjectProperty rdf:about="#receiveEvent">
        <rdfs:label>receiveEvent</rdfs:label>
        <rdfs:comment
            >References the Receiving of the Message</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="#MessageEnd"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#receivingPackage -->

    <owl:ObjectProperty rdf:about="#receivingPackage">
        <rdfs:label
            >receivingPackage</rdfs:label>
        <rdfs:comment
            >References the Package that is being extended with the contents of the merged package of the PackageMerge.</rdfs:comment>
        <rdfs:range rdf:resource="#Package"/>
        <rdfs:domain rdf:resource="#PackageMerge"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedBehavior -->

    <owl:ObjectProperty rdf:about="#redefinedBehavior">
        <rdfs:label
            >redefinedBehavior</rdfs:label>
        <rdfs:comment
            >References a behavior that this behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the behavior implements a behavioral feature, it replaces the redefined behavior. If the behavior is a classifier behavior, it extends the redefined behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#Behavior"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedClassifier -->

    <owl:ObjectProperty rdf:about="#redefinedClassifier">
        <rdfs:label
            >redefinedClassifier</rdfs:label>
        <rdfs:comment
            >References the Classifiers that are redefined by this Classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#Classifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedConnector -->

    <owl:ObjectProperty rdf:about="#redefinedConnector">
        <rdfs:label
            >redefinedConnector</rdfs:label>
        <rdfs:comment
            >A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector. The types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced.</rdfs:comment>
        <rdfs:domain rdf:resource="#Connector"/>
        <rdfs:range rdf:resource="#Connector"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedEdge -->

    <owl:ObjectProperty rdf:about="#redefinedEdge">
        <rdfs:label>redefinedEdge</rdfs:label>
        <rdfs:comment
            >Inherited edges replaced by this edge in a specialization of the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ActivityEdge"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedElement -->

    <owl:ObjectProperty rdf:about="#redefinedElement">
        <rdfs:label
            >redefinedElement</rdfs:label>
        <rdfs:comment
            >The redefinable element that is being redefined by this element.</rdfs:comment>
        <rdfs:range rdf:resource="#Feature"/>
        <rdfs:domain rdf:resource="#Feature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedInterface -->

    <owl:ObjectProperty rdf:about="#redefinedInterface">
        <rdfs:label
            >redefinedInterface</rdfs:label>
        <rdfs:comment
            >References all the Interfaces redefined by this Interface.</rdfs:comment>
        <rdfs:range rdf:resource="#Interface"/>
        <rdfs:domain rdf:resource="#Interface"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedNode -->

    <owl:ObjectProperty rdf:about="#redefinedNode">
        <rdfs:label>redefinedNode</rdfs:label>
        <rdfs:comment
            >Inherited nodes replaced by this node in a specialization of the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedOperation -->

    <owl:ObjectProperty rdf:about="#redefinedOperation">
        <rdfs:label
            >redefinedOperation</rdfs:label>
        <rdfs:comment
            >References the Operations that are redefined by this Operation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="#Operation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedPort -->

    <owl:ObjectProperty rdf:about="#redefinedPort">
        <rdfs:label>redefinedPort</rdfs:label>
        <rdfs:comment
            >A port may be redefined when its containing classifier is specialized. The redefining port may have additional interfaces to those that are associated with the redefined port or it may replace an interface by one of its subtypes.</rdfs:comment>
        <rdfs:domain rdf:resource="#Port"/>
        <rdfs:range rdf:resource="#Port"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedProperty -->

    <owl:ObjectProperty rdf:about="#redefinedProperty">
        <rdfs:label
            >redefinedProperty</rdfs:label>
        <rdfs:comment
            >References the properties that are redefined by this property.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedState -->

    <owl:ObjectProperty rdf:about="#redefinedState">
        <rdfs:label>redefinedState</rdfs:label>
        <rdfs:comment
            >The state of which this state is a redefinition.</rdfs:comment>
        <rdfs:range rdf:resource="#State"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinedTransition -->

    <owl:ObjectProperty rdf:about="#redefinedTransition">
        <rdfs:label
            >redefinedTransition</rdfs:label>
        <rdfs:comment
            >The transition that is redefined by this transition.</rdfs:comment>
        <rdfs:range rdf:resource="#Transition"/>
        <rdfs:domain rdf:resource="#Transition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#redefinitionContext -->

    <owl:ObjectProperty rdf:about="#redefinitionContext">
        <rdfs:label
            >redefinitionContext</rdfs:label>
        <rdfs:comment
            >References the contexts that this element may be redefined from.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Feature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#reducer -->

    <owl:ObjectProperty rdf:about="#reducer">
        <rdfs:label>reducer</rdfs:label>
        <rdfs:comment
            >Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#ReduceAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#references -->

    <owl:ObjectProperty rdf:about="#references">
        <rdfs:label>references</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="#EObject"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#referred -->

    <owl:ObjectProperty rdf:about="#referred">
        <rdfs:label>referred</rdfs:label>
        <rdfs:comment
            >This association refers to the associated operation. It is derived from the operation of the call trigger when applicable.</rdfs:comment>
        <rdfs:range rdf:resource="#Operation"/>
        <rdfs:domain rdf:resource="#ProtocolTransition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#refersTo -->

    <owl:ObjectProperty rdf:about="#refersTo">
        <rdfs:label>refersTo</rdfs:label>
        <rdfs:comment
            >Refers to the Interaction that defines its meaning</rdfs:comment>
        <rdfs:range rdf:resource="#Interaction"/>
        <rdfs:domain rdf:resource="#InteractionUse"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#region -->

    <owl:ObjectProperty rdf:about="#region">
        <rdfs:label>region</rdfs:label>
        <rdfs:comment
            >The regions owned directly by the state.</rdfs:comment>
        <rdfs:range rdf:resource="#Region"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#region2 -->

    <owl:ObjectProperty rdf:about="#region2">
        <rdfs:label>region</rdfs:label>
        <rdfs:comment
            >The regions owned directly by the state machine.</rdfs:comment>
        <rdfs:range rdf:resource="#Region"/>
        <rdfs:domain rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#regionAsInput -->

    <owl:ObjectProperty rdf:about="#regionAsInput">
        <rdfs:label>regionAsInput</rdfs:label>
        <rdfs:comment
            >The expansion region for which the node is an input.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExpansionNode"/>
        <rdfs:range rdf:resource="#ExpansionRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#regionAsOutput -->

    <owl:ObjectProperty rdf:about="#regionAsOutput">
        <rdfs:label>regionAsOutput</rdfs:label>
        <rdfs:comment
            >The expansion region for which the node is an output.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExpansionNode"/>
        <rdfs:range rdf:resource="#ExpansionRegion"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#relatedElement3 -->

    <owl:ObjectProperty rdf:about="#relatedElement3">
        <rdfs:label>relatedElement</rdfs:label>
        <rdfs:comment
            >Specifies the elements related by the Relationship.</rdfs:comment>
        <owl:objectPropertyRange rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#removeAt -->

    <owl:ObjectProperty rdf:about="#removeAt">
        <rdfs:label>removeAt</rdfs:label>
        <rdfs:comment
            >Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#RemoveVariableValueAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#removeAt2 -->

    <owl:ObjectProperty rdf:about="#removeAt2">
        <rdfs:label>removeAt</rdfs:label>
        <rdfs:comment
            >Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#RemoveStructuralFeatureValueAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#replyToCall -->

    <owl:ObjectProperty rdf:about="#replyToCall">
        <rdfs:label>replyToCall</rdfs:label>
        <rdfs:comment
            >The trigger specifying the operation whose call is being replied to.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReplyAction"/>
        <rdfs:range rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#replyValue -->

    <owl:ObjectProperty rdf:about="#replyValue">
        <rdfs:label>replyValue</rdfs:label>
        <rdfs:comment
            >A list of pins containing the reply values of the operation. These values are returned to the caller.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReplyAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#representation -->

    <owl:ObjectProperty rdf:about="#representation">
        <rdfs:label>representation</rdfs:label>
        <rdfs:comment
            >References a collaboration use which indicates the collaboration that represents this classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#CollaborationUse"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#represented -->

    <owl:ObjectProperty rdf:about="#represented">
        <rdfs:label>represented</rdfs:label>
        <rdfs:comment
            >Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#InformationItem"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#represents -->

    <owl:ObjectProperty rdf:about="#represents">
        <rdfs:label>represents</rdfs:label>
        <rdfs:comment
            >References the ConnectableElement within the classifier that contains the enclosing interaction.</rdfs:comment>
        <rdfs:range rdf:resource="#ConnectableElement"/>
        <rdfs:domain rdf:resource="#Lifeline"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#represents2 -->

    <owl:ObjectProperty rdf:about="#represents2">
        <rdfs:label>represents</rdfs:label>
        <rdfs:comment
            >An element constraining behaviors invoked by nodes in the partition.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
        <rdfs:range rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#request -->

    <owl:ObjectProperty rdf:about="#request">
        <rdfs:label>request</rdfs:label>
        <rdfs:comment
            >The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#SendObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#required -->

    <owl:ObjectProperty rdf:about="#required">
        <rdfs:label>required</rdfs:label>
        <rdfs:comment
            >References the interfaces specifying the set of operations and receptions which the classifier expects its environment to handle. This association is derived as the set of interfaces required by the type of the port or its supertypes.</rdfs:comment>
        <rdfs:range rdf:resource="#Interface"/>
        <rdfs:domain rdf:resource="#Port"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#required2 -->

    <owl:ObjectProperty rdf:about="#required2">
        <rdfs:label>required</rdfs:label>
        <rdfs:comment
            >The interfaces that the component requires from other components in its environment in order to be able to offer its full set of provided functionality. These interfaces may be used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="#Interface"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result -->

    <owl:ObjectProperty rdf:about="#result">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ValueSpecificationAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result10 -->

    <owl:ObjectProperty rdf:about="#result10">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Pin where the result value is placed.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndQualifierAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result11 -->

    <owl:ObjectProperty rdf:about="#result11">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >A list of output pins that constitute the data flow outputs of the conditional.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConditionalNode"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result12 -->

    <owl:ObjectProperty rdf:about="#result12">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >A list of output pins that constitute the data flow output of the entire loop.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result13 -->

    <owl:ObjectProperty rdf:about="#result13">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >After termination of the action, will hold the result of the test.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result14 -->

    <owl:ObjectProperty rdf:about="#result14">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadStructuralFeatureAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result15 -->

    <owl:ObjectProperty rdf:about="#result15">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >A list of output pins where the results of performing the invocation are placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result16 -->

    <owl:ObjectProperty rdf:about="#result16">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#CreateLinkObjectAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result17 -->

    <owl:ObjectProperty rdf:about="#result17">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Tells whether the two input objects are identical.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#TestIdentityAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result18 -->

    <owl:ObjectProperty rdf:about="#result18">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptEventAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result19 -->

    <owl:ObjectProperty rdf:about="#result19">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the hosting object is placed.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadSelfAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result2 -->

    <owl:ObjectProperty rdf:about="#result2">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#CreateObjectAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result20 -->

    <owl:ObjectProperty rdf:about="#result20">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >The pin on which are put the objects participating in the association at the end not specified by the inputs.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadLinkAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result21 -->

    <owl:ObjectProperty rdf:about="#result21">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueExpression"/>
        <rdfs:range rdf:resource="#Parameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result3 -->

    <owl:ObjectProperty rdf:about="#result3">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >The runtime instances of the classifier.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadExtentAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result4 -->

    <owl:ObjectProperty rdf:about="#result4">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#WriteStructuralFeatureAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result5 -->

    <owl:ObjectProperty rdf:about="#result5">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#ClearStructuralFeatureAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result6 -->

    <owl:ObjectProperty rdf:about="#result6">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >The values of the structural features of the input object.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#UnmarshallAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result7 -->

    <owl:ObjectProperty rdf:about="#result7">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReduceAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result8 -->

    <owl:ObjectProperty rdf:about="#result8">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadVariableAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result9 -->

    <owl:ObjectProperty rdf:about="#result9">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Pin where the result value is placed.</rdfs:comment>
        <rdfs:range rdf:resource="#OutputPin"/>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#returnInformation -->

    <owl:ObjectProperty rdf:about="#returnInformation">
        <rdfs:label
            >returnInformation</rdfs:label>
        <rdfs:comment
            >A pin containing the return information value produced by an earlier AcceptCallAction.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#ReplyAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#returnInformation2 -->

    <owl:ObjectProperty rdf:about="#returnInformation2">
        <rdfs:label
            >returnInformation</rdfs:label>
        <rdfs:comment
            >Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptCallAction"/>
        <rdfs:range rdf:resource="#OutputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#role -->

    <owl:ObjectProperty rdf:about="#role">
        <rdfs:label>role</rdfs:label>
        <rdfs:comment
            >References the roles that instances may play in this classifier.</rdfs:comment>
        <rdfs:range rdf:resource="#ConnectableElement"/>
        <rdfs:domain rdf:resource="#StructuredClassifier"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#role2 -->

    <owl:ObjectProperty rdf:about="#role2">
        <rdfs:label>role</rdfs:label>
        <rdfs:comment
            >The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.</rdfs:comment>
        <rdfs:range rdf:resource="#ConnectableElement"/>
        <rdfs:domain rdf:resource="#ConnectorEnd"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#roleBinding -->

    <owl:ObjectProperty rdf:about="#roleBinding">
        <rdfs:label>roleBinding</rdfs:label>
        <rdfs:comment
            >A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).</rdfs:comment>
        <rdfs:domain rdf:resource="#CollaborationUse"/>
        <rdfs:range rdf:resource="#Dependency"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#scope -->

    <owl:ObjectProperty rdf:about="#scope">
        <rdfs:label>scope</rdfs:label>
        <rdfs:comment
            >A structured activity node that owns the variable.</rdfs:comment>
        <rdfs:range rdf:resource="#StructuredActivityNode"/>
        <rdfs:domain rdf:resource="#Variable"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#second -->

    <owl:ObjectProperty rdf:about="#second">
        <rdfs:label>second</rdfs:label>
        <rdfs:comment
            >Gives the pin on which an object is placed.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#TestIdentityAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#selection -->

    <owl:ObjectProperty rdf:about="#selection">
        <rdfs:label>selection</rdfs:label>
        <rdfs:comment
            >Selects tokens from a source object node.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#ObjectFlow"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#selection2 -->

    <owl:ObjectProperty rdf:about="#selection2">
        <rdfs:label>selection</rdfs:label>
        <rdfs:comment
            >Selects tokens for outgoing edges.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#ObjectNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#selector -->

    <owl:ObjectProperty rdf:about="#selector">
        <rdfs:label>selector</rdfs:label>
        <rdfs:comment
            >If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set.</rdfs:comment>
        <rdfs:domain rdf:resource="#Lifeline"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#sendEvent -->

    <owl:ObjectProperty rdf:about="#sendEvent">
        <rdfs:label>sendEvent</rdfs:label>
        <rdfs:comment
            >References the Sending of the Message.</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="#MessageEnd"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#setupPart -->

    <owl:ObjectProperty rdf:about="#setupPart">
        <rdfs:label>setupPart</rdfs:label>
        <rdfs:comment
            >The set of nodes and edges that initialize values or perform other setup computations for the loop.</rdfs:comment>
        <rdfs:range rdf:resource="#ExecutableNode"/>
        <rdfs:domain rdf:resource="#LoopNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal -->

    <owl:ObjectProperty rdf:about="#signal">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The specific signal that is associated with this event.</rdfs:comment>
        <rdfs:range rdf:resource="#Signal"/>
        <rdfs:domain rdf:resource="#SignalEvent"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal2 -->

    <owl:ObjectProperty rdf:about="#signal2">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The signal associated with this event.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReceiveSignalEvent"/>
        <rdfs:range rdf:resource="#Signal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal3 -->

    <owl:ObjectProperty rdf:about="#signal3">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The signal that this reception handles.</rdfs:comment>
        <rdfs:domain rdf:resource="#Reception"/>
        <rdfs:range rdf:resource="#Signal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal4 -->

    <owl:ObjectProperty rdf:about="#signal4">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The specification of signal object transmitted to the target objects.</rdfs:comment>
        <rdfs:domain rdf:resource="#BroadcastSignalAction"/>
        <rdfs:range rdf:resource="#Signal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal5 -->

    <owl:ObjectProperty rdf:about="#signal5">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The signal associated with this event.</rdfs:comment>
        <rdfs:domain rdf:resource="#SendSignalEvent"/>
        <rdfs:range rdf:resource="#Signal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal6 -->

    <owl:ObjectProperty rdf:about="#signal6">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The type of signal transmitted to the target object.</rdfs:comment>
        <rdfs:domain rdf:resource="#SendSignalAction"/>
        <rdfs:range rdf:resource="#Signal"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signature -->

    <owl:ObjectProperty rdf:about="#signature">
        <rdfs:label>signature</rdfs:label>
        <rdfs:comment
            >The definition of the type or signature of the Message (depending on its kind). The associated named element is derived from the message end that constitutes the sending or receiving message event. If both a sending event and a receiving message event are present, the signature is obtained from the sending event.</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signature2 -->

    <owl:ObjectProperty rdf:about="#signature2">
        <rdfs:label>signature</rdfs:label>
        <rdfs:comment
            >The template signature that owns this template parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
        <rdfs:range rdf:resource="#TemplateSignature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signature3 -->

    <owl:ObjectProperty rdf:about="#signature3">
        <rdfs:label>signature</rdfs:label>
        <rdfs:comment
            >The template signature for the template that is the target of the binding.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateBinding"/>
        <rdfs:range rdf:resource="#TemplateSignature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#slot -->

    <owl:ObjectProperty rdf:about="#slot">
        <rdfs:label>slot</rdfs:label>
        <rdfs:comment
            >A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description.</rdfs:comment>
        <rdfs:domain rdf:resource="#InstanceSpecification"/>
        <rdfs:range rdf:resource="#Slot"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#source -->

    <owl:ObjectProperty rdf:about="#source">
        <rdfs:label>source</rdfs:label>
        <rdfs:comment
            >Node from which tokens are taken when they traverse the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#source2 -->

    <owl:ObjectProperty rdf:about="#source2">
        <rdfs:label>source</rdfs:label>
        <rdfs:comment
            >Specifies the sources of the DirectedRelationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#DirectedRelationship"/>
        <rdfs:range rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#source3 -->

    <owl:ObjectProperty rdf:about="#source3">
        <rdfs:label>source</rdfs:label>
        <rdfs:comment
            >Designates the originating vertex (state or pseudostate) of the transition.</rdfs:comment>
        <rdfs:domain rdf:resource="#Transition"/>
        <rdfs:range rdf:resource="#Vertex"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specific -->

    <owl:ObjectProperty rdf:about="#specific">
        <rdfs:label>specific</rdfs:label>
        <rdfs:comment
            >References the specializing classifier in the Generalization relationship.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Generalization"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specificMachine -->

    <owl:ObjectProperty rdf:about="#specificMachine">
        <rdfs:label>specificMachine</rdfs:label>
        <rdfs:comment
            >Specifies the state machine which conforms to the general state machine.</rdfs:comment>
        <rdfs:domain rdf:resource="#ProtocolConformance"/>
        <rdfs:range rdf:resource="#ProtocolStateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specification -->

    <owl:ObjectProperty rdf:about="#specification">
        <rdfs:label>specification</rdfs:label>
        <rdfs:comment
            >Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. A behavior does not need to have a specification, in which case it either is the classifer behavior of a BehavioredClassifier or it can only be invoked by another behavior of the classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="#BehavioralFeature"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specification2 -->

    <owl:ObjectProperty rdf:about="#specification2">
        <rdfs:label>specification</rdfs:label>
        <rdfs:comment
            >A specification of how to compute, derive, or construct the instance.</rdfs:comment>
        <rdfs:domain rdf:resource="#InstanceSpecification"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specification3 -->

    <owl:ObjectProperty rdf:about="#specification3">
        <rdfs:label>specification</rdfs:label>
        <rdfs:comment
            >A condition that must be true when evaluated in order for the constraint to be satisfied.</rdfs:comment>
        <rdfs:domain rdf:resource="#Constraint"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#start -->

    <owl:ObjectProperty rdf:about="#start">
        <rdfs:label>start</rdfs:label>
        <rdfs:comment
            >References the OccurrenceSpecification that designates the start of the Action or Behavior</rdfs:comment>
        <rdfs:domain rdf:resource="#ExecutionSpecification"/>
        <rdfs:range rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#state -->

    <owl:ObjectProperty rdf:about="#state">
        <rdfs:label>state</rdfs:label>
        <rdfs:comment
            >The State in which the connection point refreshens are defined.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectionPointReference"/>
        <rdfs:range rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#state2 -->

    <owl:ObjectProperty rdf:about="#state2">
        <rdfs:label>state</rdfs:label>
        <rdfs:comment
            >The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#state3 -->

    <owl:ObjectProperty rdf:about="#state3">
        <rdfs:label>state</rdfs:label>
        <rdfs:comment
            >The State that owns this pseudostate and in which it appears.</rdfs:comment>
        <rdfs:domain rdf:resource="#Pseudostate"/>
        <rdfs:range rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#stateInvariant -->

    <owl:ObjectProperty rdf:about="#stateInvariant">
        <rdfs:label>stateInvariant</rdfs:label>
        <rdfs:comment
            >Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.</rdfs:comment>
        <rdfs:range rdf:resource="#Constraint"/>
        <rdfs:domain rdf:resource="#State"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#stateMachine -->

    <owl:ObjectProperty rdf:about="#stateMachine">
        <rdfs:label>stateMachine</rdfs:label>
        <rdfs:comment
            >The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#stateMachine2 -->

    <owl:ObjectProperty rdf:about="#stateMachine2">
        <rdfs:label>stateMachine</rdfs:label>
        <rdfs:comment
            >The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint.</rdfs:comment>
        <rdfs:domain rdf:resource="#Pseudostate"/>
        <rdfs:range rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#structuralFeature -->

    <owl:ObjectProperty rdf:about="#structuralFeature">
        <rdfs:label
            >structuralFeature</rdfs:label>
        <rdfs:comment
            >Structural feature to be read.</rdfs:comment>
        <rdfs:range rdf:resource="#StructuralFeature"/>
        <rdfs:domain rdf:resource="#StructuralFeatureAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#structuredNode -->

    <owl:ObjectProperty rdf:about="#structuredNode">
        <rdfs:label>structuredNode</rdfs:label>
        <rdfs:comment
            >Top-level structured nodes in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="#StructuredActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subExpression -->

    <owl:ObjectProperty rdf:about="#subExpression">
        <rdfs:label>subExpression</rdfs:label>
        <rdfs:comment
            >The StringExpressions that constitute this StringExpression.</rdfs:comment>
        <rdfs:range rdf:resource="#StringExpression"/>
        <rdfs:domain rdf:resource="#StringExpression"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subgroup -->

    <owl:ObjectProperty rdf:about="#subgroup">
        <rdfs:label>subgroup</rdfs:label>
        <rdfs:comment
            >Groups immediately contained in the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityGroup"/>
        <rdfs:domain rdf:resource="#ActivityGroup"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subject -->

    <owl:ObjectProperty rdf:about="#subject">
        <rdfs:label>subject</rdfs:label>
        <rdfs:comment
            >References the subjects to which this use case applies. The subject or its parts realize all the use cases that apply to this subject. Use cases need not be attached to any specific subject, however. The subject may, but need not, own the use cases that apply to it.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#submachine -->

    <owl:ObjectProperty rdf:about="#submachine">
        <rdfs:label>submachine</rdfs:label>
        <rdfs:comment
            >The state machine that is to be inserted in place of the (submachine) state.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#submachineState -->

    <owl:ObjectProperty rdf:about="#submachineState">
        <rdfs:label>submachineState</rdfs:label>
        <rdfs:comment
            >References the submachine(s) in case of a submachine state. Multiple machines are referenced in case of a concurrent state.</rdfs:comment>
        <rdfs:range rdf:resource="#State"/>
        <rdfs:domain rdf:resource="#StateMachine"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subpartition -->

    <owl:ObjectProperty rdf:about="#subpartition">
        <rdfs:label>subpartition</rdfs:label>
        <rdfs:comment
            >Partitions immediately contained in the partition.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
        <rdfs:range rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subsettedProperty -->

    <owl:ObjectProperty rdf:about="#subsettedProperty">
        <rdfs:label
            >subsettedProperty</rdfs:label>
        <rdfs:comment
            >References the properties of which this property is constrained to be a subset.</rdfs:comment>
        <rdfs:range rdf:resource="#Property"/>
        <rdfs:domain rdf:resource="#Property"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#substitutingClassifier -->

    <owl:ObjectProperty rdf:about="#substitutingClassifier">
        <rdfs:label
            >substitutingClassifier</rdfs:label>
        <rdfs:comment
            >Instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#Substitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#substitution -->

    <owl:ObjectProperty rdf:about="#substitution">
        <rdfs:label>substitution</rdfs:label>
        <rdfs:comment
            >References the substitutions that are owned by this Classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#Substitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subvertex -->

    <owl:ObjectProperty rdf:about="#subvertex">
        <rdfs:label>subvertex</rdfs:label>
        <rdfs:comment
            >The set of vertices that are owned by this region.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="#Vertex"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#successorClause -->

    <owl:ObjectProperty rdf:about="#successorClause">
        <rdfs:label>successorClause</rdfs:label>
        <rdfs:comment
            >A set of clauses which may not be tested unless the current clause tests false.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="#Clause"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#superClass -->

    <owl:ObjectProperty rdf:about="#superClass">
        <rdfs:label>superClass</rdfs:label>
        <rdfs:comment
            >This gives the superclasses of a class.</rdfs:comment>
        <rdfs:domain rdf:resource="#Class"/>
        <rdfs:range rdf:resource="#Class"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#superGroup -->

    <owl:ObjectProperty rdf:about="#superGroup">
        <rdfs:label>superGroup</rdfs:label>
        <rdfs:comment
            >Group immediately containing the group.</rdfs:comment>
        <rdfs:range rdf:resource="#ActivityGroup"/>
        <rdfs:domain rdf:resource="#ActivityGroup"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#superPartition -->

    <owl:ObjectProperty rdf:about="#superPartition">
        <rdfs:label>superPartition</rdfs:label>
        <rdfs:comment
            >Partition immediately containing the partition.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
        <rdfs:range rdf:resource="#ActivityPartition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#supplier -->

    <owl:ObjectProperty rdf:about="#supplier">
        <rdfs:label>supplier</rdfs:label>
        <rdfs:comment
            >The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific.</rdfs:comment>
        <rdfs:domain rdf:resource="#Dependency"/>
        <rdfs:range rdf:resource="#NamedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target -->

    <owl:ObjectProperty rdf:about="#target">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The target object to which the object is sent.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#SendObjectAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target2 -->

    <owl:ObjectProperty rdf:about="#target2">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >Designates the target vertex that is reached when the transition is taken.</rdfs:comment>
        <rdfs:domain rdf:resource="#Transition"/>
        <rdfs:range rdf:resource="#Vertex"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target3 -->

    <owl:ObjectProperty rdf:about="#target3">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The target object to which the signal is sent.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#SendSignalAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target4 -->

    <owl:ObjectProperty rdf:about="#target4">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The input pin providing the object to be destroyed.</rdfs:comment>
        <rdfs:domain rdf:resource="#DestroyObjectAction"/>
        <rdfs:range rdf:resource="#InputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target5 -->

    <owl:ObjectProperty rdf:about="#target5">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >Specifies the targets of the DirectedRelationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#DirectedRelationship"/>
        <rdfs:range rdf:resource="#Element"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target6 -->

    <owl:ObjectProperty rdf:about="#target6">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >Node to which tokens are put when they traverse the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ActivityNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target7 -->

    <owl:ObjectProperty rdf:about="#target7">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallOperationAction"/>
        <rdfs:range rdf:resource="#InputPin"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#template -->

    <owl:ObjectProperty rdf:about="#template">
        <rdfs:label>template</rdfs:label>
        <rdfs:comment
            >The element that owns this template signature.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateSignature"/>
        <rdfs:range rdf:resource="#TemplateableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#templateBinding -->

    <owl:ObjectProperty rdf:about="#templateBinding">
        <rdfs:label>templateBinding</rdfs:label>
        <rdfs:comment
            >The optional bindings from this element to templates.</rdfs:comment>
        <rdfs:range rdf:resource="#TemplateBinding"/>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#templateBinding2 -->

    <owl:ObjectProperty rdf:about="#templateBinding2">
        <rdfs:label>templateBinding</rdfs:label>
        <rdfs:comment
            >The optional bindings from this element to templates.</rdfs:comment>
        <rdfs:range rdf:resource="#TemplateBinding"/>
        <rdfs:domain rdf:resource="#TemplateableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#templateParameter -->

    <owl:ObjectProperty rdf:about="#templateParameter">
        <rdfs:label
            >templateParameter</rdfs:label>
        <rdfs:comment
            >The template parameter that exposes this element as a formal parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#ParameterableElement"/>
        <rdfs:range rdf:resource="#TemplateParameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#test -->

    <owl:ObjectProperty rdf:about="#test">
        <rdfs:label>test</rdfs:label>
        <rdfs:comment
            >The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed.</rdfs:comment>
        <rdfs:range rdf:resource="#ExecutableNode"/>
        <rdfs:domain rdf:resource="#LoopNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#test2 -->

    <owl:ObjectProperty rdf:about="#test2">
        <rdfs:label>test</rdfs:label>
        <rdfs:comment
            >A nested activity fragment with a designated output pin that specifies the result of the test.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="#ExecutableNode"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#toAfter -->

    <owl:ObjectProperty rdf:about="#toAfter">
        <rdfs:label>toAfter</rdfs:label>
        <rdfs:comment
            >References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification</rdfs:comment>
        <rdfs:range rdf:resource="#GeneralOrdering"/>
        <rdfs:domain rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#toBefore -->

    <owl:ObjectProperty rdf:about="#toBefore">
        <rdfs:label>toBefore</rdfs:label>
        <rdfs:comment
            >References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification</rdfs:comment>
        <rdfs:range rdf:resource="#GeneralOrdering"/>
        <rdfs:domain rdf:resource="#OccurrenceSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#transformation -->

    <owl:ObjectProperty rdf:about="#transformation">
        <rdfs:label>transformation</rdfs:label>
        <rdfs:comment
            >Changes or replaces data tokens flowing along edge.</rdfs:comment>
        <rdfs:range rdf:resource="#Behavior"/>
        <rdfs:domain rdf:resource="#ObjectFlow"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#transition -->

    <owl:ObjectProperty rdf:about="#transition">
        <rdfs:label>transition</rdfs:label>
        <rdfs:comment
            >The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="#Transition"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#trigger -->

    <owl:ObjectProperty rdf:about="#trigger">
        <rdfs:label>trigger</rdfs:label>
        <rdfs:comment
            >The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptEventAction"/>
        <rdfs:range rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#trigger2 -->

    <owl:ObjectProperty rdf:about="#trigger2">
        <rdfs:label>trigger</rdfs:label>
        <rdfs:comment
            >Specifies the triggers that may fire the transition.</rdfs:comment>
        <rdfs:domain rdf:resource="#Transition"/>
        <rdfs:range rdf:resource="#Trigger"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#type -->

    <owl:ObjectProperty rdf:about="#type">
        <rdfs:label>type</rdfs:label>
        <rdfs:comment
            >An optional association that specifies the link corresponding to this connector.</rdfs:comment>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
The type of the TypedElement.</rdfs:comment>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
Specifies the return result of the operation, if present.</rdfs:comment>
        <rdfs:range rdf:resource="#Association"/>
        <rdfs:domain rdf:resource="#Connector"/>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="#Type"/>
        <rdfs:domain rdf:resource="#TypedElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#type3 -->

    <owl:ObjectProperty rdf:about="#type3">
        <rdfs:label>type</rdfs:label>
        <rdfs:comment
            >The collaboration which is used in this occurrence. The collaboration defines the cooperation between its roles which are mapped to properties of the classifier owning the collaboration use.</rdfs:comment>
        <rdfs:range rdf:resource="#Collaboration"/>
        <rdfs:domain rdf:resource="#CollaborationUse"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#unmarshallType -->

    <owl:ObjectProperty rdf:about="#unmarshallType">
        <rdfs:label>unmarshallType</rdfs:label>
        <rdfs:comment
            >The type of the object to be unmarshalled.</rdfs:comment>
        <rdfs:range rdf:resource="#Classifier"/>
        <rdfs:domain rdf:resource="#UnmarshallAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upperBound -->

    <owl:ObjectProperty rdf:about="#upperBound">
        <rdfs:label>upperBound</rdfs:label>
        <rdfs:comment
            >The maximum number of tokens allowed in the node. Objects cannot flow into the node if the upper bound is reached.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upperValue2 -->

    <owl:ObjectProperty rdf:about="#upperValue2"/>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#useCase -->

    <owl:ObjectProperty rdf:about="#useCase">
        <rdfs:label>useCase</rdfs:label>
        <rdfs:comment
            >References the use case that owns this extension point.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExtensionPoint"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#useCase2 -->

    <owl:ObjectProperty rdf:about="#useCase2">
        <rdfs:label>useCase</rdfs:label>
        <rdfs:comment
            >The set of use cases for which this Classifier is the subject.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="#UseCase"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#utilizedElement -->

    <owl:ObjectProperty rdf:about="#utilizedElement">
        <rdfs:label>utilizedElement</rdfs:label>
        <rdfs:comment
            >The model element that is utilized in the manifestation in an Artifact.</rdfs:comment>
        <rdfs:domain rdf:resource="#Manifestation"/>
        <rdfs:range rdf:resource="#PackageableElement"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value -->

    <owl:ObjectProperty rdf:about="#value">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Input pin from which the specified value for the qualifier is taken.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#QualifierValue"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value2 -->

    <owl:ObjectProperty rdf:about="#value2">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Value to be added or removed from the variable.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#WriteVariableAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value3 -->

    <owl:ObjectProperty rdf:about="#value3">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >The value or values corresponding to the defining feature for the owning instance specification.</rdfs:comment>
        <rdfs:domain rdf:resource="#Slot"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value4 -->

    <owl:ObjectProperty rdf:about="#value4">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an &#39;open&#39; end for reading.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#LinkEndData"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value5 -->

    <owl:ObjectProperty rdf:about="#value5">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Value that the pin will provide.</rdfs:comment>
        <rdfs:domain rdf:resource="#ValuePin"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value6 -->

    <owl:ObjectProperty rdf:about="#value6">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Value to be added or removed from the structural feature.</rdfs:comment>
        <rdfs:range rdf:resource="#InputPin"/>
        <rdfs:domain rdf:resource="#WriteStructuralFeatureAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value7 -->

    <owl:ObjectProperty rdf:about="#value7">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Value specification to be evaluated.</rdfs:comment>
        <rdfs:range rdf:resource="#ValueSpecification"/>
        <rdfs:domain rdf:resource="#ValueSpecificationAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#variable -->

    <owl:ObjectProperty rdf:about="#variable">
        <rdfs:label>variable</rdfs:label>
        <rdfs:comment
            >Variable to be read.</rdfs:comment>
        <rdfs:range rdf:resource="#Variable"/>
        <rdfs:domain rdf:resource="#VariableAction"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#variable2 -->

    <owl:ObjectProperty rdf:about="#variable2">
        <rdfs:label>variable</rdfs:label>
        <rdfs:comment
            >Top-level variables in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="#Variable"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#variable3 -->

    <owl:ObjectProperty rdf:about="#variable3">
        <rdfs:label>variable</rdfs:label>
        <rdfs:comment
            >A variable defined in the scope of the structured activity node. It has no value and may not be accessed</rdfs:comment>
        <rdfs:domain rdf:resource="#StructuredActivityNode"/>
        <rdfs:range rdf:resource="#Variable"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#weight -->

    <owl:ObjectProperty rdf:about="#weight">
        <rdfs:label>weight</rdfs:label>
        <rdfs:comment
            >The minimum number of tokens that must traverse the edge at the same time.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="#ValueSpecification"/>
    </owl:ObjectProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#when -->

    <owl:ObjectProperty rdf:about="#when">
        <rdfs:label>when</rdfs:label>
        <rdfs:comment
            >Specifies the corresponding time deadline.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeEvent"/>
        <rdfs:range rdf:resource="#TimeExpression"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#abstract -->

    <owl:DatatypeProperty rdf:about="#abstract">
        <rdfs:label>abstract</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#activity3 -->

    <owl:DatatypeProperty rdf:about="#activity3">
        <rdfs:label>activity</rdfs:label>
        <rdfs:comment
            >Activity containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#activity4 -->

    <owl:DatatypeProperty rdf:about="#activity4">
        <rdfs:label>activity</rdfs:label>
        <rdfs:comment
            >Activity containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#actual2 -->

    <owl:DatatypeProperty rdf:about="#actual2">
        <rdfs:label>actual</rdfs:label>
        <rdfs:comment
            >The element that is the actual parameter for this substitution.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#addition2 -->

    <owl:DatatypeProperty rdf:about="#addition2">
        <rdfs:label>addition</rdfs:label>
        <rdfs:comment
            >References the use case that is to be included.</rdfs:comment>
        <rdfs:domain rdf:resource="#Include"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#aggregation -->

    <owl:DatatypeProperty rdf:about="#aggregation">
        <rdfs:label>aggregation</rdfs:label>
        <rdfs:comment
            >Specifies the kind of aggregation that applies to the Property.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#alias -->

    <owl:DatatypeProperty rdf:about="#alias">
        <rdfs:label>alias</rdfs:label>
        <rdfs:comment
            >Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used.</rdfs:comment>
        <rdfs:domain rdf:resource="#ElementImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#allowSubstitutable -->

    <owl:DatatypeProperty rdf:about="#allowSubstitutable">
        <rdfs:label
            >allowSubstitutable</rdfs:label>
        <rdfs:comment
            >Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#ClassifierTemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#annotatedElement2 -->

    <owl:DatatypeProperty rdf:about="#annotatedElement2">
        <rdfs:label
            >annotatedElement</rdfs:label>
        <rdfs:comment
            >References the Element(s) being commented.</rdfs:comment>
        <rdfs:domain rdf:resource="#Comment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#argument4 -->

    <owl:DatatypeProperty rdf:about="#argument4">
        <rdfs:label>argument</rdfs:label>
        <rdfs:comment
            >The arguments of the Message</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#argument5 -->

    <owl:DatatypeProperty rdf:about="#argument5">
        <rdfs:label>argument</rdfs:label>
        <rdfs:comment
            >Specification of the ordered set of argument values that appears during execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#InvocationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#association2 -->

    <owl:DatatypeProperty rdf:about="#association2">
        <rdfs:label>association</rdfs:label>
        <rdfs:comment
            >References the association of which this property is a member, if any.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#association3 -->

    <owl:DatatypeProperty rdf:about="#association3">
        <rdfs:label>association</rdfs:label>
        <rdfs:comment
            >Association to be cleared.</rdfs:comment>
        <rdfs:domain rdf:resource="#ClearAssociationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#behavior4 -->

    <owl:DatatypeProperty rdf:about="#behavior4">
        <rdfs:label>behavior</rdfs:label>
        <rdfs:comment
            >The invoked behavior. It must be capable of accepting and returning control.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallBehaviorAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#body2 -->

    <owl:DatatypeProperty rdf:about="#body2">
        <rdfs:label>body</rdfs:label>
        <rdfs:comment
            >Specifies the behavior in one or more languages.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueBehavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#body3 -->

    <owl:DatatypeProperty rdf:about="#body3">
        <rdfs:label>body</rdfs:label>
        <rdfs:comment
            >Specifies the action in one or more languages.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#body4 -->

    <owl:DatatypeProperty rdf:about="#body4">
        <rdfs:label>body</rdfs:label>
        <rdfs:comment
            >A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#body5 -->

    <owl:DatatypeProperty rdf:about="#body5">
        <rdfs:label>body</rdfs:label>
        <rdfs:comment>element</rdfs:comment>
        <rdfs:domain rdf:resource="#Comment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#body6 -->

    <owl:DatatypeProperty rdf:about="#body6">
        <rdfs:label>body</rdfs:label>
        <rdfs:comment
            >The text of the expression, possibly in multiple languages.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueExpression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyOutput3 -->

    <owl:DatatypeProperty rdf:about="#bodyOutput3">
        <rdfs:label>bodyOutput</rdfs:label>
        <rdfs:comment
            >A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyOutput4 -->

    <owl:DatatypeProperty rdf:about="#bodyOutput4">
        <rdfs:label>bodyOutput</rdfs:label>
        <rdfs:comment
            >A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#bodyPart2 -->

    <owl:DatatypeProperty rdf:about="#bodyPart2">
        <rdfs:label>bodyPart</rdfs:label>
        <rdfs:comment
            >The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#changeExpression2 -->

    <owl:DatatypeProperty rdf:about="#changeExpression2">
        <rdfs:label
            >changeExpression</rdfs:label>
        <rdfs:comment
            >A Boolean-valued expression that will result in a change event whenever its value changes from false to true.</rdfs:comment>
        <rdfs:domain rdf:resource="#ChangeEvent"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#changeable -->

    <owl:DatatypeProperty rdf:about="#changeable">
        <rdfs:label>changeable</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#class2 -->

    <owl:DatatypeProperty rdf:about="#class2">
        <rdfs:label>class</rdfs:label>
        <rdfs:comment
            >The class that owns the operation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier10 -->

    <owl:DatatypeProperty rdf:about="#classifier10">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier against which the classification of the input object is tested.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier6 -->

    <owl:DatatypeProperty rdf:about="#classifier6">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier whose instances are to be retrieved.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadExtentAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier7 -->

    <owl:DatatypeProperty rdf:about="#classifier7">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier that owns this template signature.</rdfs:comment>
        <rdfs:domain rdf:resource="#RedefinableTemplateSignature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier8 -->

    <owl:DatatypeProperty rdf:about="#classifier8">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them.</rdfs:comment>
        <rdfs:domain rdf:resource="#InstanceSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#classifier9 -->

    <owl:DatatypeProperty rdf:about="#classifier9">
        <rdfs:label>classifier</rdfs:label>
        <rdfs:comment
            >Classifier to be instantiated.</rdfs:comment>
        <rdfs:domain rdf:resource="#CreateObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#clause2 -->

    <owl:DatatypeProperty rdf:about="#clause2">
        <rdfs:label>clause</rdfs:label>
        <rdfs:comment
            >Set of clauses composing the conditional.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConditionalNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#client2 -->

    <owl:DatatypeProperty rdf:about="#client2">
        <rdfs:label>client</rdfs:label>
        <rdfs:comment
            >The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Dependency"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#collection2 -->

    <owl:DatatypeProperty rdf:about="#collection2">
        <rdfs:label>collection</rdfs:label>
        <rdfs:comment
            >The collection to be reduced.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReduceAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#concurrency -->

    <owl:DatatypeProperty rdf:about="#concurrency">
        <rdfs:label>concurrency</rdfs:label>
        <rdfs:comment
            >Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a class with isActive being false). Active instances control access to their own behavioral features.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#configuration2 -->

    <owl:DatatypeProperty rdf:about="#configuration2">
        <rdfs:label>configuration</rdfs:label>
        <rdfs:comment
            >The specification of properties that parameterize the deployment and execution of one or more Artifacts.</rdfs:comment>
        <rdfs:domain rdf:resource="#Deployment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connection2 -->

    <owl:DatatypeProperty rdf:about="#connection2">
        <rdfs:label>connection</rdfs:label>
        <rdfs:comment
            >The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connectionPoint3 -->

    <owl:DatatypeProperty rdf:about="#connectionPoint3">
        <rdfs:label>connectionPoint</rdfs:label>
        <rdfs:comment
            >The entry and exit pseudostates of a composite state. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite states.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#connector2 -->

    <owl:DatatypeProperty rdf:about="#connector2">
        <rdfs:label>connector</rdfs:label>
        <rdfs:comment
            >The Connector on which this Message is sent.</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#constrainedElement2 -->

    <owl:DatatypeProperty rdf:about="#constrainedElement2">
        <rdfs:label
            >constrainedElement</rdfs:label>
        <rdfs:comment
            >The ordered set of Elements referenced by this Constraint.</rdfs:comment>
        <rdfs:domain rdf:resource="#Constraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#constrainingClassifier2 -->

    <owl:DatatypeProperty rdf:about="#constrainingClassifier2">
        <rdfs:label
            >constrainingClassifier</rdfs:label>
        <rdfs:comment
            >The classifiers that constrain the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any classifier that is compatible with this constraining classifier can be substituted; otherwise, it must be either this classifier or one of its subclasses. If this property is empty, there are no constraints on the classifier that can be used as an argument.</rdfs:comment>
        <rdfs:domain rdf:resource="#ClassifierTemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#container3 -->

    <owl:DatatypeProperty rdf:about="#container3">
        <rdfs:label>container</rdfs:label>
        <rdfs:domain rdf:resource="#EReference"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#containment -->

    <owl:DatatypeProperty rdf:about="#containment">
        <rdfs:label>containment</rdfs:label>
        <rdfs:domain rdf:resource="#EReference"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#content -->

    <owl:DatatypeProperty rdf:about="#content">
        <rdfs:label>content</rdfs:label>
        <rdfs:comment
            >This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing &#39;instructions&#39; using a standard such as Scalable Vector Graphic (SVG) (which is XML based).</rdfs:comment>
        <rdfs:domain rdf:resource="#Image"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contents2 -->

    <owl:DatatypeProperty rdf:about="#contents2">
        <rdfs:label>contents</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#context4 -->

    <owl:DatatypeProperty rdf:about="#context4">
        <rdfs:label>context</rdfs:label>
        <rdfs:comment
            >Specifies the namespace that owns the NamedElement.</rdfs:comment>
        <rdfs:domain rdf:resource="#Constraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#context5 -->

    <owl:DatatypeProperty rdf:about="#context5">
        <rdfs:label>context</rdfs:label>
        <rdfs:comment
            >The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#context6 -->

    <owl:DatatypeProperty rdf:about="#context6">
        <rdfs:label>context</rdfs:label>
        <rdfs:comment
            >The classifier that owns the behavior of which this action is a part.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contract4 -->

    <owl:DatatypeProperty rdf:about="#contract4">
        <rdfs:label>contract</rdfs:label>
        <rdfs:comment
            >The contract with which the substituting classifier complies.</rdfs:comment>
        <rdfs:domain rdf:resource="#Substitution"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#contract5 -->

    <owl:DatatypeProperty rdf:about="#contract5">
        <rdfs:label>contract</rdfs:label>
        <rdfs:comment
            >References the Interface specifying the conformance contract.</rdfs:comment>
        <rdfs:domain rdf:resource="#InterfaceRealization"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#conveyed2 -->

    <owl:DatatypeProperty rdf:about="#conveyed2">
        <rdfs:label>conveyed</rdfs:label>
        <rdfs:comment
            >Specifies the information items that may circulate on this information flow.</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationFlow"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#covered2 -->

    <owl:DatatypeProperty rdf:about="#covered2">
        <rdfs:label>covered</rdfs:label>
        <rdfs:comment
            >References the Lifelines that the InteractionFragment involves.</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#datatype3 -->

    <owl:DatatypeProperty rdf:about="#datatype3">
        <rdfs:label>datatype</rdfs:label>
        <rdfs:comment
            >The DataType that owns this Property.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#datatype4 -->

    <owl:DatatypeProperty rdf:about="#datatype4">
        <rdfs:label>datatype</rdfs:label>
        <rdfs:comment
            >The DataType that owns this Operation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decider3 -->

    <owl:DatatypeProperty rdf:about="#decider3">
        <rdfs:label>decider</rdfs:label>
        <rdfs:comment
            >An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decider4 -->

    <owl:DatatypeProperty rdf:about="#decider4">
        <rdfs:label>decider</rdfs:label>
        <rdfs:comment
            >An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decisionInput2 -->

    <owl:DatatypeProperty rdf:about="#decisionInput2">
        <rdfs:label>decisionInput</rdfs:label>
        <rdfs:comment
            >Provides input to guard specifications on edges outgoing from the decision node.</rdfs:comment>
        <rdfs:domain rdf:resource="#DecisionNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decisionInputFlow2 -->

    <owl:DatatypeProperty rdf:about="#decisionInputFlow2">
        <rdfs:label
            >decisionInputFlow</rdfs:label>
        <rdfs:comment
            >An additional edge incoming to the decision node that provides a decision input value.</rdfs:comment>
        <rdfs:domain rdf:resource="#DecisionNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#decomposedAs2 -->

    <owl:DatatypeProperty rdf:about="#decomposedAs2">
        <rdfs:label>decomposedAs</rdfs:label>
        <rdfs:comment
            >References the Interaction that represents the decomposition.</rdfs:comment>
        <rdfs:domain rdf:resource="#Lifeline"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#default2 -->

    <owl:DatatypeProperty rdf:about="#default2">
        <rdfs:label>default</rdfs:label>
        <rdfs:comment
            >Specifies a String that represents a value to be used when no argument is supplied for the Parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#default3 -->

    <owl:DatatypeProperty rdf:about="#default3">
        <rdfs:label>default</rdfs:label>
        <rdfs:comment
            >Specifies a String that represents a value to be used when no argument is supplied for the Property.
A String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#default4 -->

    <owl:DatatypeProperty rdf:about="#default4">
        <rdfs:label>default</rdfs:label>
        <rdfs:comment
            >The element that is the default for this formal template parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValue3 -->

    <owl:DatatypeProperty rdf:about="#defaultValue3">
        <rdfs:label>defaultValue</rdfs:label>
        <rdfs:comment
            >A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValue4 -->

    <owl:DatatypeProperty rdf:about="#defaultValue4">
        <rdfs:label>defaultValue</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValue5 -->

    <owl:DatatypeProperty rdf:about="#defaultValue5">
        <rdfs:label>defaultValue</rdfs:label>
        <rdfs:comment
            >Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValue6 -->

    <owl:DatatypeProperty rdf:about="#defaultValue6">
        <rdfs:label>defaultValue</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#defaultValueLiteral -->

    <owl:DatatypeProperty rdf:about="#defaultValueLiteral">
        <rdfs:label
            >defaultValueLiteral</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deferrableTrigger2 -->

    <owl:DatatypeProperty rdf:about="#deferrableTrigger2">
        <rdfs:label
            >deferrableTrigger</rdfs:label>
        <rdfs:comment
            >A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deployedArtifact2 -->

    <owl:DatatypeProperty rdf:about="#deployedArtifact2">
        <rdfs:label
            >deployedArtifact</rdfs:label>
        <rdfs:comment
            >The Artifacts that are deployed onto a Node. This association specializes the supplier association.</rdfs:comment>
        <rdfs:domain rdf:resource="#Deployment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deployedElement2 -->

    <owl:DatatypeProperty rdf:about="#deployedElement2">
        <rdfs:label>deployedElement</rdfs:label>
        <rdfs:comment
            >The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget.</rdfs:comment>
        <rdfs:domain rdf:resource="#DeploymentTarget"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#deploymentLocation -->

    <owl:DatatypeProperty rdf:about="#deploymentLocation">
        <rdfs:label
            >deploymentLocation</rdfs:label>
        <rdfs:comment
            >The location where an Artifact is deployed onto a Node. This is typically a &#39;directory&#39; or &#39;memory address&#39;.</rdfs:comment>
        <rdfs:domain rdf:resource="#DeploymentSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#derived -->

    <owl:DatatypeProperty rdf:about="#derived">
        <rdfs:label>derived</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#details2 -->

    <owl:DatatypeProperty rdf:about="#details2">
        <rdfs:label>details</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#direction -->

    <owl:DatatypeProperty rdf:about="#direction">
        <rdfs:label>direction</rdfs:label>
        <rdfs:comment
            >Indicates whether a parameter is being sent into or out of a behavioral element.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllAttributes2 -->

    <owl:DatatypeProperty rdf:about="#eAllAttributes2">
        <rdfs:label>eAllAttributes</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllContainments2 -->

    <owl:DatatypeProperty rdf:about="#eAllContainments2">
        <rdfs:label
            >eAllContainments</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllOperations2 -->

    <owl:DatatypeProperty rdf:about="#eAllOperations2">
        <rdfs:label>eAllOperations</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllReferences2 -->

    <owl:DatatypeProperty rdf:about="#eAllReferences2">
        <rdfs:label>eAllReferences</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAllStructuralFeatures2 -->

    <owl:DatatypeProperty rdf:about="#eAllStructuralFeatures2">
        <rdfs:label
            >eAllStructuralFeatures</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAnnotations2 -->

    <owl:DatatypeProperty rdf:about="#eAnnotations2">
        <rdfs:label>eAnnotations</rdfs:label>
        <rdfs:domain rdf:resource="#EModelElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eAttributes2 -->

    <owl:DatatypeProperty rdf:about="#eAttributes2">
        <rdfs:label>eAttributes</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eClassifier2 -->

    <owl:DatatypeProperty rdf:about="#eClassifier2">
        <rdfs:label>eClassifier</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eEnum2 -->

    <owl:DatatypeProperty rdf:about="#eEnum2">
        <rdfs:label>eEnum</rdfs:label>
        <rdfs:domain rdf:resource="#EEnumLiteral"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eExceptions2 -->

    <owl:DatatypeProperty rdf:about="#eExceptions2">
        <rdfs:label>eExceptions</rdfs:label>
        <rdfs:domain rdf:resource="#EOperation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eGenericType2 -->

    <owl:DatatypeProperty rdf:about="#eGenericType2">
        <rdfs:label>eGenericType</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eIDAttribute2 -->

    <owl:DatatypeProperty rdf:about="#eIDAttribute2">
        <rdfs:label>eIDAttribute</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eOperations2 -->

    <owl:DatatypeProperty rdf:about="#eOperations2">
        <rdfs:label>eOperations</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ePackage3 -->

    <owl:DatatypeProperty rdf:about="#ePackage3">
        <rdfs:label>ePackage</rdfs:label>
        <rdfs:domain rdf:resource="#EFactory"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ePackage4 -->

    <owl:DatatypeProperty rdf:about="#ePackage4">
        <rdfs:label>ePackage</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eParameters2 -->

    <owl:DatatypeProperty rdf:about="#eParameters2">
        <rdfs:label>eParameters</rdfs:label>
        <rdfs:domain rdf:resource="#EOperation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eRawType2 -->

    <owl:DatatypeProperty rdf:about="#eRawType2">
        <rdfs:label>eRawType</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eReferences2 -->

    <owl:DatatypeProperty rdf:about="#eReferences2">
        <rdfs:label>eReferences</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eStructuralFeatures2 -->

    <owl:DatatypeProperty rdf:about="#eStructuralFeatures2">
        <rdfs:label
            >eStructuralFeatures</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eType2 -->

    <owl:DatatypeProperty rdf:about="#eType2">
        <rdfs:label>eType</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeParameter2 -->

    <owl:DatatypeProperty rdf:about="#eTypeParameter2">
        <rdfs:label>eTypeParameter</rdfs:label>
        <rdfs:domain rdf:resource="#EGenericType"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeParameters3 -->

    <owl:DatatypeProperty rdf:about="#eTypeParameters3">
        <rdfs:label>eTypeParameters</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#eTypeParameters4 -->

    <owl:DatatypeProperty rdf:about="#eTypeParameters4">
        <rdfs:label>eTypeParameters</rdfs:label>
        <rdfs:domain rdf:resource="#EOperation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#effect2 -->

    <owl:DatatypeProperty rdf:about="#effect2">
        <rdfs:label>effect</rdfs:label>
        <rdfs:comment
            >Specifies the effect that the owner of the parameter has on values passed in or out of the parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#elementImportVisibility -->

    <owl:DatatypeProperty rdf:about="#elementImportVisibility">
        <rdfs:label>visibility</rdfs:label>
        <rdfs:comment
            >Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import.</rdfs:comment>
        <rdfs:domain rdf:resource="#ElementImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#enclosingOperand2 -->

    <owl:DatatypeProperty rdf:about="#enclosingOperand2">
        <rdfs:label
            >enclosingOperand</rdfs:label>
        <rdfs:comment
            >The operand enclosing this InteractionFragment (they may nest recursively)</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end5 -->

    <owl:DatatypeProperty rdf:about="#end5">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >Link end to be read.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end6 -->

    <owl:DatatypeProperty rdf:about="#end6">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >Association end for which this link-end data specifies values.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndData"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end7 -->

    <owl:DatatypeProperty rdf:about="#end7">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >Denotes a connector that attaches to this connectable element.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectableElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#end8 -->

    <owl:DatatypeProperty rdf:about="#end8">
        <rdfs:label>end</rdfs:label>
        <rdfs:comment
            >A connector consists of at least two connector ends, each representing the participation of instances of the classifiers typing the connectable elements attached to this end. The set of connector ends is ordered.</rdfs:comment>
        <rdfs:domain rdf:resource="#Connector"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#entry3 -->

    <owl:DatatypeProperty rdf:about="#entry3">
        <rdfs:label>entry</rdfs:label>
        <rdfs:comment
            >The entryPoint kind pseudo states corresponding to this connection point.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectionPointReference"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exceptionType2 -->

    <owl:DatatypeProperty rdf:about="#exceptionType2">
        <rdfs:label>exceptionType</rdfs:label>
        <rdfs:comment
            >The kind of instances that the handler catches. If an exception occurs whose type is any of the classifiers in the set, the handler catches the exception and executes its body.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#executableNode2 -->

    <owl:DatatypeProperty rdf:about="#executableNode2">
        <rdfs:label>executableNode</rdfs:label>
        <rdfs:comment
            >An ordered set of executable nodes.</rdfs:comment>
        <rdfs:domain rdf:resource="#SequenceNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#executionLocation -->

    <owl:DatatypeProperty rdf:about="#executionLocation">
        <rdfs:label
            >executionLocation</rdfs:label>
        <rdfs:comment
            >The location where a component Artifact executes. This may be a local or remote location.</rdfs:comment>
        <rdfs:domain rdf:resource="#DeploymentSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#exit3 -->

    <owl:DatatypeProperty rdf:about="#exit3">
        <rdfs:label>exit</rdfs:label>
        <rdfs:comment
            >The exitPoints kind pseudo states corresponding to this connection point.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConnectionPointReference"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#expr3 -->

    <owl:DatatypeProperty rdf:about="#expr3">
        <rdfs:label>expr</rdfs:label>
        <rdfs:comment
            >The value of the time expression.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeExpression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extendedCase2 -->

    <owl:DatatypeProperty rdf:about="#extendedCase2">
        <rdfs:label>extendedCase</rdfs:label>
        <rdfs:comment
            >References the use case that is being extended.</rdfs:comment>
        <rdfs:domain rdf:resource="#Extend"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extension4 -->

    <owl:DatatypeProperty rdf:about="#extension4">
        <owl:dataPropertyDomain rdf:resource="#Class"/>
        <owl:dataPropertyRange rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extension5 -->

    <owl:DatatypeProperty rdf:about="#extension5">
        <rdfs:label>extension</rdfs:label>
        <rdfs:comment
            >References the use case that represents the extension and owns the extend relationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#Extend"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#extensionLocation2 -->

    <owl:DatatypeProperty rdf:about="#extensionLocation2">
        <rdfs:label
            >extensionLocation</rdfs:label>
        <rdfs:comment
            >An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)</rdfs:comment>
        <rdfs:domain rdf:resource="#Extend"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#featuringClassifier2 -->

    <owl:DatatypeProperty rdf:about="#featuringClassifier2">
        <rdfs:label
            >featuringClassifier</rdfs:label>
        <rdfs:comment
            >The Classifiers that have this Feature as a feature.</rdfs:comment>
        <rdfs:domain rdf:resource="#Feature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#fileName -->

    <owl:DatatypeProperty rdf:about="#fileName">
        <rdfs:label>fileName</rdfs:label>
        <rdfs:comment
            >A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator.</rdfs:comment>
        <rdfs:domain rdf:resource="#Artifact"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#finish2 -->

    <owl:DatatypeProperty rdf:about="#finish2">
        <rdfs:label>finish</rdfs:label>
        <rdfs:comment
            >References the OccurrenceSpecification that designates the finish of the Action or Behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExecutionSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#first2 -->

    <owl:DatatypeProperty rdf:about="#first2">
        <rdfs:label>first</rdfs:label>
        <rdfs:comment
            >Gives the pin on which an object is placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#TestIdentityAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#firstEvent -->

    <owl:DatatypeProperty rdf:about="#firstEvent">
        <rdfs:label>firstEvent</rdfs:label>
        <rdfs:comment
            >The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i]. Default value is true applied when event[i] refers an element that represents only one time instant.</rdfs:comment>
        <rdfs:domain rdf:resource="#DurationObservation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#firstEvent2 -->

    <owl:DatatypeProperty rdf:about="#firstEvent2">
        <rdfs:label>firstEvent</rdfs:label>
        <rdfs:comment
            >The value of firstEvent is related to event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters event. If firstEvent is false, then the corresponding observation event is the time instant the execution exits event.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeObservation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#firstEvent3 -->

    <owl:DatatypeProperty rdf:about="#firstEvent3">
        <rdfs:label>firstEvent</rdfs:label>
        <rdfs:comment
            >The value of firstEvent is related to constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within constrainedElement.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeConstraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#firstEvent4 -->

    <owl:DatatypeProperty rdf:about="#firstEvent4">
        <rdfs:label>firstEvent</rdfs:label>
        <rdfs:comment
            >The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i]. Default value is true applied when constrainedElement[i] refers an element that represents only one time instant.</rdfs:comment>
        <rdfs:domain rdf:resource="#DurationConstraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#formal2 -->

    <owl:DatatypeProperty rdf:about="#formal2">
        <rdfs:label>formal</rdfs:label>
        <rdfs:comment
            >The formal template parameter that is associated with this substitution.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#formalGate2 -->

    <owl:DatatypeProperty rdf:about="#formalGate2">
        <rdfs:label>formalGate</rdfs:label>
        <rdfs:comment
            >Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#format -->

    <owl:DatatypeProperty rdf:about="#format">
        <rdfs:label>format</rdfs:label>
        <rdfs:comment
            >This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.

In addition the prefix &#39;MIME: &#39; is also reserved. This option can be used as an alternative to express the reserved values above, for example &quot;SVG&quot; could instead be expressed as &quot;MIME: image/svg+xml&quot;.</rdfs:comment>
        <rdfs:domain rdf:resource="#Image"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#fragment3 -->

    <owl:DatatypeProperty rdf:about="#fragment3">
        <rdfs:label>fragment</rdfs:label>
        <rdfs:comment
            >The ordered set of fragments in the Interaction.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#general3 -->

    <owl:DatatypeProperty rdf:about="#general3">
        <rdfs:label>general</rdfs:label>
        <rdfs:comment
            >References the general classifier in the Generalization relationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#Generalization"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalMachine2 -->

    <owl:DatatypeProperty rdf:about="#generalMachine2">
        <rdfs:label>generalMachine</rdfs:label>
        <rdfs:comment
            >Specifies the protocol state machine to which the specific state machine conforms.</rdfs:comment>
        <rdfs:domain rdf:resource="#ProtocolConformance"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalOrdering2 -->

    <owl:DatatypeProperty rdf:about="#generalOrdering2">
        <rdfs:label>generalOrdering</rdfs:label>
        <rdfs:comment
            >The general ordering relationships contained in this fragment.</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionFragment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#generalizationSet2 -->

    <owl:DatatypeProperty rdf:about="#generalizationSet2">
        <rdfs:label
            >generalizationSet</rdfs:label>
        <rdfs:comment
            >Designates a set in which instances of Generalization is considered members.</rdfs:comment>
        <rdfs:domain rdf:resource="#Generalization"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#guard4 -->

    <owl:DatatypeProperty rdf:about="#guard4">
        <rdfs:label>guard</rdfs:label>
        <rdfs:comment
            >Constraint of the operand.</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionOperand"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#guard5 -->

    <owl:DatatypeProperty rdf:about="#guard5">
        <rdfs:label>guard</rdfs:label>
        <rdfs:comment
            >Specification evaluated at runtime to determine if the edge can be traversed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#handlerBody2 -->

    <owl:DatatypeProperty rdf:about="#handlerBody2">
        <rdfs:label>handlerBody</rdfs:label>
        <rdfs:comment
            >A node that is executed if the handler satisfies an uncaught exception.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#iD -->

    <owl:DatatypeProperty rdf:about="#iD">
        <rdfs:label>iD</rdfs:label>
        <rdfs:domain rdf:resource="#EAttribute"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#implementingClassifier2 -->

    <owl:DatatypeProperty rdf:about="#implementingClassifier2">
        <rdfs:label
            >implementingClassifier</rdfs:label>
        <rdfs:comment
            >References the BehavioredClassifier that owns this Interfacerealization (i.e., the classifier that realizes the Interface to which it points).</rdfs:comment>
        <rdfs:domain rdf:resource="#InterfaceRealization"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importedElement2 -->

    <owl:DatatypeProperty rdf:about="#importedElement2">
        <rdfs:label>importedElement</rdfs:label>
        <rdfs:comment
            >Specifies the PackageableElement whose name is to be added to a Namespace.</rdfs:comment>
        <rdfs:domain rdf:resource="#ElementImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importedMember2 -->

    <owl:DatatypeProperty rdf:about="#importedMember2">
        <rdfs:label>importedMember</rdfs:label>
        <rdfs:comment
            >References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</rdfs:comment>
        <rdfs:domain rdf:resource="#Namespace"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importedPackage2 -->

    <owl:DatatypeProperty rdf:about="#importedPackage2">
        <rdfs:label>importedPackage</rdfs:label>
        <rdfs:comment
            >Specifies the Package whose members are imported into a Namespace.</rdfs:comment>
        <rdfs:domain rdf:resource="#PackageImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importingNamespace3 -->

    <owl:DatatypeProperty rdf:about="#importingNamespace3">
        <rdfs:label
            >importingNamespace</rdfs:label>
        <rdfs:comment
            >Specifies the Namespace that imports a PackageableElement from another Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#ElementImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#importingNamespace4 -->

    <owl:DatatypeProperty rdf:about="#importingNamespace4">
        <rdfs:label
            >importingNamespace</rdfs:label>
        <rdfs:comment
            >Specifies the Namespace that imports the members from a Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#PackageImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inActivity2 -->

    <owl:DatatypeProperty rdf:about="#inActivity2">
        <rdfs:label>inActivity</rdfs:label>
        <rdfs:comment
            >Activity containing the group.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityGroup"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inGroup3 -->

    <owl:DatatypeProperty rdf:about="#inGroup3">
        <rdfs:label>inGroup</rdfs:label>
        <rdfs:comment
            >Groups containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inGroup4 -->

    <owl:DatatypeProperty rdf:about="#inGroup4">
        <rdfs:label>inGroup</rdfs:label>
        <rdfs:comment
            >Groups containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inInterruptibleRegion2 -->

    <owl:DatatypeProperty rdf:about="#inInterruptibleRegion2">
        <rdfs:label
            >inInterruptibleRegion</rdfs:label>
        <rdfs:comment
            >Interruptible regions containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inPartition3 -->

    <owl:DatatypeProperty rdf:about="#inPartition3">
        <rdfs:label>inPartition</rdfs:label>
        <rdfs:comment
            >Partitions containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inPartition4 -->

    <owl:DatatypeProperty rdf:about="#inPartition4">
        <rdfs:label>inPartition</rdfs:label>
        <rdfs:comment
            >Partitions containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inState2 -->

    <owl:DatatypeProperty rdf:about="#inState2">
        <rdfs:label>inState</rdfs:label>
        <rdfs:comment
            >The required states of the object available at this point in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inStructuredNode3 -->

    <owl:DatatypeProperty rdf:about="#inStructuredNode3">
        <rdfs:label
            >inStructuredNode</rdfs:label>
        <rdfs:comment
            >Structured activity node containing the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inStructuredNode4 -->

    <owl:DatatypeProperty rdf:about="#inStructuredNode4">
        <rdfs:label
            >inStructuredNode</rdfs:label>
        <rdfs:comment
            >Structured activity node containing the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#includingCase2 -->

    <owl:DatatypeProperty rdf:about="#includingCase2">
        <rdfs:label>includingCase</rdfs:label>
        <rdfs:comment
            >References the use case which will include the addition and owns the include relationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#Include"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#incoming3 -->

    <owl:DatatypeProperty rdf:about="#incoming3">
        <rdfs:label>incoming</rdfs:label>
        <rdfs:comment
            >Specifies the transitions entering this vertex.</rdfs:comment>
        <rdfs:domain rdf:resource="#Vertex"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#input2 -->

    <owl:DatatypeProperty rdf:about="#input2">
        <rdfs:label>input</rdfs:label>
        <rdfs:comment
            >The ordered set of input pins connected to the Action. These are among the total set of inputs.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#inputValue3 -->

    <owl:DatatypeProperty rdf:about="#inputValue3">
        <rdfs:label>inputValue</rdfs:label>
        <rdfs:comment
            >Provides input to the action.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#insertAt4 -->

    <owl:DatatypeProperty rdf:about="#insertAt4">
        <rdfs:label>insertAt</rdfs:label>
        <rdfs:comment
            >Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndCreationData"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#instance2 -->

    <owl:DatatypeProperty rdf:about="#instance2">
        <rdfs:label>instance</rdfs:label>
        <rdfs:domain rdf:resource="#EEnumLiteral"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#instanceClass -->

    <owl:DatatypeProperty rdf:about="#instanceClass">
        <rdfs:label>instanceClass</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#instanceClassName -->

    <owl:DatatypeProperty rdf:about="#instanceClassName">
        <rdfs:label
            >instanceClassName</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#instanceTypeName -->

    <owl:DatatypeProperty rdf:about="#instanceTypeName">
        <rdfs:label
            >instanceTypeName</rdfs:label>
        <rdfs:domain rdf:resource="#EClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interactionOperator -->

    <owl:DatatypeProperty rdf:about="#interactionOperator">
        <rdfs:label
            >interactionOperator</rdfs:label>
        <rdfs:comment
            >Specifies the operation which defines the semantics of this combination of InteractionFragments.</rdfs:comment>
        <rdfs:domain rdf:resource="#CombinedFragment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interface2 -->

    <owl:DatatypeProperty rdf:about="#interface2">
        <rdfs:label>interface</rdfs:label>
        <rdfs:comment
            >The Interface that owns this Operation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interface3 -->

    <owl:DatatypeProperty rdf:about="#interface3">
        <rdfs:label>interface</rdfs:label>
        <rdfs:domain rdf:resource="#EClass"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#interrupts2 -->

    <owl:DatatypeProperty rdf:about="#interrupts2">
        <rdfs:label>interrupts</rdfs:label>
        <rdfs:comment
            >Region that the edge can interrupt.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isAbstract -->

    <owl:DatatypeProperty rdf:about="#isAbstract">
        <rdfs:label>isAbstract</rdfs:label>
        <rdfs:comment
            >If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isAbstract2 -->

    <owl:DatatypeProperty rdf:about="#isAbstract2">
        <rdfs:label>isAbstract</rdfs:label>
        <rdfs:comment
            >If true, then the behavioral feature does not have an implementation, and one must be supplied by a more specific element. If false, the behavioral feature must have an implementation in the classifier or one must be inherited from a more general element.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isActive -->

    <owl:DatatypeProperty rdf:about="#isActive">
        <rdfs:label>isActive</rdfs:label>
        <rdfs:comment
            >Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class.</rdfs:comment>
        <rdfs:domain rdf:resource="#Class"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isAssured -->

    <owl:DatatypeProperty rdf:about="#isAssured">
        <rdfs:label>isAssured</rdfs:label>
        <rdfs:comment
            >If true, the modeler asserts that at least one test will succeed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConditionalNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isBehavior -->

    <owl:DatatypeProperty rdf:about="#isBehavior">
        <rdfs:label>isBehavior</rdfs:label>
        <rdfs:comment
            >Specifies whether requests arriving at this port are sent to the classifier behavior of this classifier. Such ports are referred to as behavior port. Any invocation of a behavioral feature targeted at a behavior port will be handled by the instance of the owning classifier itself, rather than by any instances that this classifier may contain.</rdfs:comment>
        <rdfs:domain rdf:resource="#Port"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isCombineDuplicate -->

    <owl:DatatypeProperty rdf:about="#isCombineDuplicate">
        <rdfs:label
            >isCombineDuplicate</rdfs:label>
        <rdfs:comment
            >Tells whether tokens having objects with the same identity are combined into one by the join.</rdfs:comment>
        <rdfs:domain rdf:resource="#JoinNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isComposite -->

    <owl:DatatypeProperty rdf:about="#isComposite">
        <rdfs:label>isComposite</rdfs:label>
        <rdfs:comment
            >A state with isComposite=true is said to be a composite state. A composite state is a state that contains at least one region.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isComposite2 -->

    <owl:DatatypeProperty rdf:about="#isComposite2">
        <rdfs:label>isComposite</rdfs:label>
        <rdfs:comment
            >If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.
This is a derived value, indicating whether the aggregation of the Property is composite or not.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isControl -->

    <owl:DatatypeProperty rdf:about="#isControl">
        <rdfs:label>isControl</rdfs:label>
        <rdfs:comment
            >Tells whether the pins provide data to the actions, or just controls when it executes it.</rdfs:comment>
        <rdfs:domain rdf:resource="#Pin"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isControlType -->

    <owl:DatatypeProperty rdf:about="#isControlType">
        <rdfs:label>isControlType</rdfs:label>
        <rdfs:comment
            >Tells whether the type of the object node is to be treated as control.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isCovering -->

    <owl:DatatypeProperty rdf:about="#isCovering">
        <rdfs:label>isCovering</rdfs:label>
        <rdfs:comment
            >Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet.</rdfs:comment>
        <rdfs:domain rdf:resource="#GeneralizationSet"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDerived -->

    <owl:DatatypeProperty rdf:about="#isDerived">
        <rdfs:label>isDerived</rdfs:label>
        <rdfs:comment
            >Specifies whether the association is derived from other model elements such as other associations or constraints.</rdfs:comment>
        <rdfs:domain rdf:resource="#Association"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDerived2 -->

    <owl:DatatypeProperty rdf:about="#isDerived2">
        <rdfs:label>isDerived</rdfs:label>
        <rdfs:comment
            >If isDerived is true, the value of the attribute is derived from information elsewhere.
Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDerivedUnion -->

    <owl:DatatypeProperty rdf:about="#isDerivedUnion">
        <rdfs:label>isDerivedUnion</rdfs:label>
        <rdfs:comment
            >Specifies whether the property is derived as the union of all of the properties that are constrained to subset it.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDestroyDuplicates -->

    <owl:DatatypeProperty rdf:about="#isDestroyDuplicates">
        <rdfs:label
            >isDestroyDuplicates</rdfs:label>
        <rdfs:comment
            >Specifies whether to destroy duplicates of the value in nonunique association ends.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndDestructionData"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDestroyLinks -->

    <owl:DatatypeProperty rdf:about="#isDestroyLinks">
        <rdfs:label>isDestroyLinks</rdfs:label>
        <rdfs:comment
            >Specifies whether links in which the object participates are destroyed along with the object.</rdfs:comment>
        <rdfs:domain rdf:resource="#DestroyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDestroyOwnedObjects -->

    <owl:DatatypeProperty rdf:about="#isDestroyOwnedObjects">
        <rdfs:label
            >isDestroyOwnedObjects</rdfs:label>
        <rdfs:comment
            >Specifies whether objects owned by the object are destroyed along with the object.</rdfs:comment>
        <rdfs:domain rdf:resource="#DestroyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDeterminate -->

    <owl:DatatypeProperty rdf:about="#isDeterminate">
        <rdfs:label>isDeterminate</rdfs:label>
        <rdfs:comment
            >If true, the modeler asserts that at most one test will succeed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConditionalNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDimension -->

    <owl:DatatypeProperty rdf:about="#isDimension">
        <rdfs:label>isDimension</rdfs:label>
        <rdfs:comment
            >Tells whether the partition groups other partitions along a dimension.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDirect -->

    <owl:DatatypeProperty rdf:about="#isDirect">
        <rdfs:label>isDirect</rdfs:label>
        <rdfs:comment
            >Indicates whether the classifier must directly classify the input object.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isDisjoint -->

    <owl:DatatypeProperty rdf:about="#isDisjoint">
        <rdfs:label>isDisjoint</rdfs:label>
        <rdfs:comment
            >Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager.</rdfs:comment>
        <rdfs:domain rdf:resource="#GeneralizationSet"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isException -->

    <owl:DatatypeProperty rdf:about="#isException">
        <rdfs:label>isException</rdfs:label>
        <rdfs:comment
            >Tells whether an output parameter may emit a value to the exclusion of the other outputs.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isExternal -->

    <owl:DatatypeProperty rdf:about="#isExternal">
        <rdfs:label>isExternal</rdfs:label>
        <rdfs:comment
            >Tells whether the partition represents an entity to which the partitioning structure does not apply.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isIndirectlyInstantiated -->

    <owl:DatatypeProperty rdf:about="#isIndirectlyInstantiated">
        <rdfs:label
            >isIndirectlyInstantiated</rdfs:label>
        <rdfs:comment
            >The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. &lt;&lt;specification&gt;&gt;, &lt;&lt;focus&gt;&gt;, &lt;&lt;subsystem&gt;&gt;.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isLeaf -->

    <owl:DatatypeProperty rdf:about="#isLeaf">
        <rdfs:label>isLeaf</rdfs:label>
        <rdfs:comment
            >Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement.</rdfs:comment>
        <rdfs:domain rdf:resource="#Feature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isMulticast -->

    <owl:DatatypeProperty rdf:about="#isMulticast">
        <rdfs:label>isMulticast</rdfs:label>
        <rdfs:comment
            >Tells whether the objects in the flow are passed by multicasting.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectFlow"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isMultireceive -->

    <owl:DatatypeProperty rdf:about="#isMultireceive">
        <rdfs:label>isMultireceive</rdfs:label>
        <rdfs:comment
            >Tells whether the objects in the flow are gathered from respondents to multicasting.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectFlow"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isOrdered -->

    <owl:DatatypeProperty rdf:about="#isOrdered">
        <rdfs:label>isOrdered</rdfs:label>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
Specifies whether the return parameter is ordered or not, if present.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isOrdered2 -->

    <owl:DatatypeProperty rdf:about="#isOrdered2">
        <rdfs:label>isOrdered</rdfs:label>
        <rdfs:comment
            >Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReduceAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isOrdered3 -->

    <owl:DatatypeProperty rdf:about="#isOrdered3">
        <rdfs:label>isOrdered</rdfs:label>
        <rdfs:comment
            >For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.</rdfs:comment>
        <rdfs:domain rdf:resource="#MultiplicityElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isOrthogonal -->

    <owl:DatatypeProperty rdf:about="#isOrthogonal">
        <rdfs:label>isOrthogonal</rdfs:label>
        <rdfs:comment
            >A state with isOrthogonal=true is said to be an orthogonal composite state. An orthogonal composite state contains two or more regions.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isQuery -->

    <owl:DatatypeProperty rdf:about="#isQuery">
        <rdfs:label>isQuery</rdfs:label>
        <rdfs:comment
            >Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false).</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReadOnly -->

    <owl:DatatypeProperty rdf:about="#isReadOnly">
        <rdfs:label>isReadOnly</rdfs:label>
        <rdfs:comment
            >If true, this activity must not make any changes to variables outside the activity or to objects. (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the action, then the model is ill-formed.) The default is false (an activity may make nonlocal changes).</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReadOnly2 -->

    <owl:DatatypeProperty rdf:about="#isReadOnly2">
        <rdfs:label>isReadOnly</rdfs:label>
        <rdfs:comment
            >States whether the feature&#39;s value may be modified by a client.</rdfs:comment>
        <rdfs:domain rdf:resource="#StructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReentrant -->

    <owl:DatatypeProperty rdf:about="#isReentrant">
        <rdfs:label>isReentrant</rdfs:label>
        <rdfs:comment
            >Tells whether the behavior can be invoked while it is still executing from a previous invocation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isRelative -->

    <owl:DatatypeProperty rdf:about="#isRelative">
        <rdfs:label>isRelative</rdfs:label>
        <rdfs:comment
            >Specifies whether it is relative or absolute time.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeEvent"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isRemoveDuplicates -->

    <owl:DatatypeProperty rdf:about="#isRemoveDuplicates">
        <rdfs:label
            >isRemoveDuplicates</rdfs:label>
        <rdfs:comment
            >Specifies whether to remove duplicates of the value in nonunique structural features.</rdfs:comment>
        <rdfs:domain rdf:resource="#RemoveStructuralFeatureValueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isRemoveDuplicates2 -->

    <owl:DatatypeProperty rdf:about="#isRemoveDuplicates2">
        <rdfs:label
            >isRemoveDuplicates</rdfs:label>
        <rdfs:comment
            >Specifies whether to remove duplicates of the value in nonunique variables.</rdfs:comment>
        <rdfs:domain rdf:resource="#RemoveVariableValueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReplaceAll -->

    <owl:DatatypeProperty rdf:about="#isReplaceAll">
        <rdfs:label>isReplaceAll</rdfs:label>
        <rdfs:comment
            >Specifies whether existing values of the variable should be removed before adding the new value.</rdfs:comment>
        <rdfs:domain rdf:resource="#AddVariableValueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReplaceAll2 -->

    <owl:DatatypeProperty rdf:about="#isReplaceAll2">
        <rdfs:label>isReplaceAll</rdfs:label>
        <rdfs:comment
            >Specifies whether existing values of the structural feature of the object should be removed before adding the new value.</rdfs:comment>
        <rdfs:domain rdf:resource="#AddStructuralFeatureValueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReplaceAll3 -->

    <owl:DatatypeProperty rdf:about="#isReplaceAll3">
        <rdfs:label>isReplaceAll</rdfs:label>
        <rdfs:comment
            >Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndCreationData"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isReplaceAll4 -->

    <owl:DatatypeProperty rdf:about="#isReplaceAll4">
        <rdfs:label>isReplaceAll</rdfs:label>
        <rdfs:comment
            >Specifies whether existing classifiers should be removed before adding the new classifiers.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isRequired -->

    <owl:DatatypeProperty rdf:about="#isRequired">
        <rdfs:label>isRequired</rdfs:label>
        <rdfs:comment
            >Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the multiplicity of the Property referenced by Extension::ownedEnd; a multiplicity of 1 means that isRequired is true, but otherwise it is false. Since the default multiplicity of an ExtensionEnd is 0..1, the default value of isRequired is false.</rdfs:comment>
        <rdfs:domain rdf:resource="#Extension"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isService -->

    <owl:DatatypeProperty rdf:about="#isService">
        <rdfs:label>isService</rdfs:label>
        <rdfs:comment
            >If true indicates that this port is used to provide the published functionality of a classifier; if false, this port is used to implement the classifier but is not part of the essential externally-visible functionality of the classifier and can, therefore, be altered or deleted along with the internal implementation of the classifier and other properties that are considered part of its implementation.</rdfs:comment>
        <rdfs:domain rdf:resource="#Port"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isSimple -->

    <owl:DatatypeProperty rdf:about="#isSimple">
        <rdfs:label>isSimple</rdfs:label>
        <rdfs:comment
            >A state with isSimple=true is said to be a simple state. A simple state does not have any regions and it does not refer to any submachine state machine.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isSingleExecution -->

    <owl:DatatypeProperty rdf:about="#isSingleExecution">
        <rdfs:label
            >isSingleExecution</rdfs:label>
        <rdfs:comment
            >If true, all invocations of the activity are handled by the same execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isStatic -->

    <owl:DatatypeProperty rdf:about="#isStatic">
        <rdfs:label>isStatic</rdfs:label>
        <rdfs:comment
            >Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true).</rdfs:comment>
        <rdfs:domain rdf:resource="#Feature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isStream -->

    <owl:DatatypeProperty rdf:about="#isStream">
        <rdfs:label>isStream</rdfs:label>
        <rdfs:comment
            >Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter post values while the behavior is executing.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isStrict -->

    <owl:DatatypeProperty rdf:about="#isStrict">
        <rdfs:label>isStrict</rdfs:label>
        <rdfs:comment
            >Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied.</rdfs:comment>
        <rdfs:domain rdf:resource="#ProfileApplication"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isSubmachineState -->

    <owl:DatatypeProperty rdf:about="#isSubmachineState">
        <rdfs:label
            >isSubmachineState</rdfs:label>
        <rdfs:comment
            >A state with isSubmachineState=true is said to be a submachine state. Such a state refers to a state machine (submachine).</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isSubstitutable -->

    <owl:DatatypeProperty rdf:about="#isSubstitutable">
        <rdfs:label>isSubstitutable</rdfs:label>
        <rdfs:comment
            >Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Generalization"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isSynchronous -->

    <owl:DatatypeProperty rdf:about="#isSynchronous">
        <rdfs:label>isSynchronous</rdfs:label>
        <rdfs:comment
            >If true, the call is synchronous and the caller waits for completion of the invoked behavior.
If false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isTestedFirst -->

    <owl:DatatypeProperty rdf:about="#isTestedFirst">
        <rdfs:label>isTestedFirst</rdfs:label>
        <rdfs:comment
            >If true, the test is performed before the first execution of the body.
If false, the body is executed once before the test is performed.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isUnique -->

    <owl:DatatypeProperty rdf:about="#isUnique">
        <rdfs:label>isUnique</rdfs:label>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
Specifies whether the return parameter is unique or not, if present.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isUnique2 -->

    <owl:DatatypeProperty rdf:about="#isUnique2">
        <rdfs:label>isUnique</rdfs:label>
        <rdfs:comment
            >For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique.</rdfs:comment>
        <rdfs:domain rdf:resource="#MultiplicityElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#isUnmarshall -->

    <owl:DatatypeProperty rdf:about="#isUnmarshall">
        <rdfs:label>isUnmarshall</rdfs:label>
        <rdfs:comment
            >Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptEventAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#joinSpec2 -->

    <owl:DatatypeProperty rdf:about="#joinSpec2">
        <rdfs:label>joinSpec</rdfs:label>
        <rdfs:comment
            >A specification giving the conditions under which the join with emit a token. Default is &quot;and&quot;.</rdfs:comment>
        <rdfs:domain rdf:resource="#JoinNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#key -->

    <owl:DatatypeProperty rdf:about="#key">
        <rdfs:label>key</rdfs:label>
        <rdfs:domain rdf:resource="#EStringToStringMapEntry"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#kind -->

    <owl:DatatypeProperty rdf:about="#kind">
        <rdfs:label>kind</rdfs:label>
        <rdfs:comment
            >Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice.</rdfs:comment>
        <rdfs:domain rdf:resource="#Pseudostate"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#kind2 -->

    <owl:DatatypeProperty rdf:about="#kind2">
        <rdfs:label>kind</rdfs:label>
        <rdfs:comment
            >Indicates  the precise type of the transition.</rdfs:comment>
        <rdfs:domain rdf:resource="#Transition"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#kind3 -->

    <owl:DatatypeProperty rdf:about="#kind3">
        <rdfs:label>kind</rdfs:label>
        <rdfs:comment
            >Indicates the kind of connector.</rdfs:comment>
        <rdfs:domain rdf:resource="#Connector"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#language -->

    <owl:DatatypeProperty rdf:about="#language">
        <rdfs:label>language</rdfs:label>
        <rdfs:comment
            >Languages the body strings use in the same order as the body strings.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueBehavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#language2 -->

    <owl:DatatypeProperty rdf:about="#language2">
        <rdfs:label>language</rdfs:label>
        <rdfs:comment
            >Languages the body strings use, in the same order as the body strings</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#language3 -->

    <owl:DatatypeProperty rdf:about="#language3">
        <rdfs:label>language</rdfs:label>
        <rdfs:comment
            >Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueExpression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lifeline2 -->

    <owl:DatatypeProperty rdf:about="#lifeline2">
        <rdfs:label>lifeline</rdfs:label>
        <rdfs:comment
            >Specifies the participants in this Interaction.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#literal -->

    <owl:DatatypeProperty rdf:about="#literal">
        <rdfs:label>literal</rdfs:label>
        <rdfs:domain rdf:resource="#EEnumLiteral"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#location2 -->

    <owl:DatatypeProperty rdf:about="#location2">
        <rdfs:label>location</rdfs:label>
        <rdfs:comment
            >This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype.</rdfs:comment>
        <rdfs:domain rdf:resource="#Image"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#location3 -->

    <owl:DatatypeProperty rdf:about="#location3">
        <rdfs:label>location</rdfs:label>
        <rdfs:comment
            >The DeployedTarget which is the target of a Deployment.</rdfs:comment>
        <rdfs:domain rdf:resource="#Deployment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#loopVariable2 -->

    <owl:DatatypeProperty rdf:about="#loopVariable2">
        <rdfs:label>loopVariable</rdfs:label>
        <rdfs:comment
            >A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#loopVariableInput2 -->

    <owl:DatatypeProperty rdf:about="#loopVariableInput2">
        <rdfs:label
            >loopVariableInput</rdfs:label>
        <rdfs:comment
            >A list of values that are moved into the loop variable pins before the first iteration of the loop.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lower -->

    <owl:DatatypeProperty rdf:about="#lower">
        <rdfs:label>lower</rdfs:label>
        <rdfs:comment
            >Specifies the lower bound of the multiplicity interval.</rdfs:comment>
        <rdfs:domain rdf:resource="#MultiplicityElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lower2 -->

    <owl:DatatypeProperty rdf:about="#lower2">
        <rdfs:label>lower</rdfs:label>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
Specifies the lower multiplicity of the return parameter, if present.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lowerBound -->

    <owl:DatatypeProperty rdf:about="#lowerBound">
        <rdfs:label>lowerBound</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#lowerValue2 -->

    <owl:DatatypeProperty rdf:about="#lowerValue2">
        <rdfs:label>lowerValue</rdfs:label>
        <rdfs:comment
            >The specification of the lower bound for this multiplicity.</rdfs:comment>
        <rdfs:domain rdf:resource="#MultiplicityElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#many -->

    <owl:DatatypeProperty rdf:about="#many">
        <rdfs:label>many</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#mapping2 -->

    <owl:DatatypeProperty rdf:about="#mapping2">
        <rdfs:label>mapping</rdfs:label>
        <rdfs:comment
            >An composition of an Expression that states the abstraction relationship between the supplier and the client. In some cases, such as Derivation, it is usually formal and unidirectional; in other cases, such as Trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the elements is not specified.</rdfs:comment>
        <rdfs:domain rdf:resource="#Abstraction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#maxint2 -->

    <owl:DatatypeProperty rdf:about="#maxint2">
        <rdfs:label>maxint</rdfs:label>
        <rdfs:comment
            >The maximum number of iterations of a loop</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionConstraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#mergedPackage2 -->

    <owl:DatatypeProperty rdf:about="#mergedPackage2">
        <rdfs:label>mergedPackage</rdfs:label>
        <rdfs:comment
            >References the Package that is to be merged with the receiving package of the PackageMerge.</rdfs:comment>
        <rdfs:domain rdf:resource="#PackageMerge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#message4 -->

    <owl:DatatypeProperty rdf:about="#message4">
        <rdfs:label>message</rdfs:label>
        <rdfs:comment
            >The set of messages that apply to this fragment</rdfs:comment>
        <rdfs:domain rdf:resource="#ConsiderIgnoreFragment"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#message5 -->

    <owl:DatatypeProperty rdf:about="#message5">
        <rdfs:label>message</rdfs:label>
        <rdfs:comment
            >The Messages contained in this Interaction.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interaction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#message6 -->

    <owl:DatatypeProperty rdf:about="#message6">
        <rdfs:label>message</rdfs:label>
        <rdfs:comment
            >References a Message.</rdfs:comment>
        <rdfs:domain rdf:resource="#MessageEnd"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#messageKind -->

    <owl:DatatypeProperty rdf:about="#messageKind">
        <rdfs:label>messageKind</rdfs:label>
        <rdfs:comment
            >The derived kind of the Message (complete, lost, found or unknown)</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#messageSort -->

    <owl:DatatypeProperty rdf:about="#messageSort">
        <rdfs:label>messageSort</rdfs:label>
        <rdfs:comment
            >The sort of communication reflected by the Message</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#metaclassReference2 -->

    <owl:DatatypeProperty rdf:about="#metaclassReference2">
        <rdfs:label
            >metaclassReference</rdfs:label>
        <rdfs:comment
            >References a metaclass that may be extended.</rdfs:comment>
        <rdfs:domain rdf:resource="#Profile"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#minint2 -->

    <owl:DatatypeProperty rdf:about="#minint2">
        <rdfs:label>minint</rdfs:label>
        <rdfs:comment
            >The minimum number of iterations of a loop</rdfs:comment>
        <rdfs:domain rdf:resource="#InteractionConstraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#mode -->

    <owl:DatatypeProperty rdf:about="#mode">
        <rdfs:label>mode</rdfs:label>
        <rdfs:comment
            >The way in which the executions interact:
parallel: all interactions are independent
iterative: the interactions occur in order of the elements
stream: a stream of values flows into a single execution</rdfs:comment>
        <rdfs:domain rdf:resource="#ExpansionRegion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#mustIsolate -->

    <owl:DatatypeProperty rdf:about="#mustIsolate">
        <rdfs:label>mustIsolate</rdfs:label>
        <rdfs:comment
            >If true, then the actions in the node execute in isolation from actions outside the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#StructuredActivityNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#name -->

    <owl:DatatypeProperty rdf:about="#name">
        <rdfs:label>name</rdfs:label>
        <rdfs:comment
            >The name of the NamedElement.</rdfs:comment>
        <rdfs:domain rdf:resource="#NamedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#name2 -->

    <owl:DatatypeProperty rdf:about="#name2">
        <rdfs:label>name</rdfs:label>
        <rdfs:domain rdf:resource="#ENamedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#namespace2 -->

    <owl:DatatypeProperty rdf:about="#namespace2">
        <rdfs:label>namespace</rdfs:label>
        <rdfs:comment
            >Specifies the namespace that owns the NamedElement.</rdfs:comment>
        <rdfs:domain rdf:resource="#NamedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedClassifier4 -->

    <owl:DatatypeProperty rdf:about="#nestedClassifier4">
        <rdfs:label
            >nestedClassifier</rdfs:label>
        <rdfs:comment
            >References all the Classifiers that are defined (nested) within the Class.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nestedClassifier5 -->

    <owl:DatatypeProperty rdf:about="#nestedClassifier5">
        <owl:dataPropertyDomain rdf:resource="#Class"/>
        <owl:dataPropertyRange rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#newClassifier2 -->

    <owl:DatatypeProperty rdf:about="#newClassifier2">
        <rdfs:label>newClassifier</rdfs:label>
        <rdfs:comment
            >A set of classifiers to be added to the classifiers of the object.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nsPrefix -->

    <owl:DatatypeProperty rdf:about="#nsPrefix">
        <rdfs:label>nsPrefix</rdfs:label>
        <rdfs:domain rdf:resource="#EPackage"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#nsURI -->

    <owl:DatatypeProperty rdf:about="#nsURI">
        <rdfs:label>nsURI</rdfs:label>
        <rdfs:domain rdf:resource="#EPackage"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object10 -->

    <owl:DatatypeProperty rdf:about="#object10">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object whose classification is to be tested.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object11 -->

    <owl:DatatypeProperty rdf:about="#object11">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object to be reclassified.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object12 -->

    <owl:DatatypeProperty rdf:about="#object12">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Holds the object which is either a behavior to be started or has a classifier behavior to be started.</rdfs:comment>
        <rdfs:domain rdf:resource="#StartObjectBehaviorAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#object13 -->

    <owl:DatatypeProperty rdf:about="#object13">
        <rdfs:label>object</rdfs:label>
        <rdfs:comment
            >Gives the input pin from which the link object is obtained.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#observation3 -->

    <owl:DatatypeProperty rdf:about="#observation3">
        <rdfs:label>observation</rdfs:label>
        <rdfs:comment
            >Refers to the time and duration observations that are involved in expr.</rdfs:comment>
        <rdfs:domain rdf:resource="#TimeExpression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#oldClassifier2 -->

    <owl:DatatypeProperty rdf:about="#oldClassifier2">
        <rdfs:label>oldClassifier</rdfs:label>
        <rdfs:comment
            >A set of classifiers to be removed from the classifiers of the object.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReclassifyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#onPort2 -->

    <owl:DatatypeProperty rdf:about="#onPort2">
        <rdfs:label>onPort</rdfs:label>
        <rdfs:comment
            >A optional port of the receiver object on which the behavioral feature is invoked.</rdfs:comment>
        <rdfs:domain rdf:resource="#InvocationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operand3 -->

    <owl:DatatypeProperty rdf:about="#operand3">
        <rdfs:label>operand</rdfs:label>
        <rdfs:comment
            >Specifies a sequence of operands.</rdfs:comment>
        <rdfs:domain rdf:resource="#Expression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation6 -->

    <owl:DatatypeProperty rdf:about="#operation6">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >The operation to be invoked by the action execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallOperationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#operation7 -->

    <owl:DatatypeProperty rdf:about="#operation7">
        <rdfs:label>operation</rdfs:label>
        <rdfs:comment
            >Designates the operation whose invocation raised the call event.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallEvent"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ordered -->

    <owl:DatatypeProperty rdf:about="#ordered">
        <rdfs:label>ordered</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ordering -->

    <owl:DatatypeProperty rdf:about="#ordering">
        <rdfs:label>ordering</rdfs:label>
        <rdfs:comment
            >Tells whether and how the tokens in the object node are ordered for selection to traverse edges outgoing from the object node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#outgoing3 -->

    <owl:DatatypeProperty rdf:about="#outgoing3">
        <rdfs:label>outgoing</rdfs:label>
        <rdfs:comment
            >Specifies the transitions departing from this vertex.</rdfs:comment>
        <rdfs:domain rdf:resource="#Vertex"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#output2 -->

    <owl:DatatypeProperty rdf:about="#output2">
        <rdfs:label>output</rdfs:label>
        <rdfs:comment
            >The ordered set of output pins connected to the Action. The action places its results onto pins in this set.</rdfs:comment>
        <rdfs:domain rdf:resource="#Action"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#outputValue2 -->

    <owl:DatatypeProperty rdf:about="#outputValue2">
        <rdfs:label>outputValue</rdfs:label>
        <rdfs:comment
            >Takes output from the action.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedActual2 -->

    <owl:DatatypeProperty rdf:about="#ownedActual2">
        <rdfs:label>ownedActual</rdfs:label>
        <rdfs:comment
            >The actual parameter that is owned by this substitution.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedDefault2 -->

    <owl:DatatypeProperty rdf:about="#ownedDefault2">
        <rdfs:label>ownedDefault</rdfs:label>
        <rdfs:comment
            >The element that is owned by this template parameter for the purpose of providing a default.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedLiteral2 -->

    <owl:DatatypeProperty rdf:about="#ownedLiteral2">
        <rdfs:label>ownedLiteral</rdfs:label>
        <rdfs:comment
            >The ordered set of literals for this Enumeration.</rdfs:comment>
        <rdfs:domain rdf:resource="#Enumeration"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameter4 -->

    <owl:DatatypeProperty rdf:about="#ownedParameter4">
        <rdfs:label>ownedParameter</rdfs:label>
        <rdfs:comment
            >References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameter5 -->

    <owl:DatatypeProperty rdf:about="#ownedParameter5">
        <rdfs:label>ownedParameter</rdfs:label>
        <rdfs:comment
            >Specifies the ordered set of formal parameters of this BehavioralFeature.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameterSet3 -->

    <owl:DatatypeProperty rdf:about="#ownedParameterSet3">
        <rdfs:label
            >ownedParameterSet</rdfs:label>
        <rdfs:comment
            >The ParameterSets owned by this Behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameterSet4 -->

    <owl:DatatypeProperty rdf:about="#ownedParameterSet4">
        <rdfs:label
            >ownedParameterSet</rdfs:label>
        <rdfs:comment
            >The ParameterSets owned by this BehavioralFeature.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedParameteredElement2 -->

    <owl:DatatypeProperty rdf:about="#ownedParameteredElement2">
        <rdfs:label
            >ownedParameteredElement</rdfs:label>
        <rdfs:comment
            >The element that is owned by this template parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedPort2 -->

    <owl:DatatypeProperty rdf:about="#ownedPort2">
        <rdfs:label>ownedPort</rdfs:label>
        <rdfs:comment
            >References a set of ports that an encapsulated classifier owns.</rdfs:comment>
        <rdfs:domain rdf:resource="#EncapsulatedClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedReception4 -->

    <owl:DatatypeProperty rdf:about="#ownedReception4">
        <rdfs:label>ownedReception</rdfs:label>
        <rdfs:comment
            >Receptions that objects providing this interface are willing to accept.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedReception5 -->

    <owl:DatatypeProperty rdf:about="#ownedReception5">
        <owl:dataPropertyDomain rdf:resource="#Class"/>
        <owl:dataPropertyRange rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedStereotype2 -->

    <owl:DatatypeProperty rdf:about="#ownedStereotype2">
        <rdfs:label>ownedStereotype</rdfs:label>
        <rdfs:comment
            >References the Stereotypes that are owned by the Profile.</rdfs:comment>
        <rdfs:domain rdf:resource="#Profile"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedTemplateSignature2 -->

    <owl:DatatypeProperty rdf:about="#ownedTemplateSignature2">
        <rdfs:label
            >ownedTemplateSignature</rdfs:label>
        <rdfs:comment
            >The optional template signature specifying the formal template parameters.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateableElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedTrigger2 -->

    <owl:DatatypeProperty rdf:about="#ownedTrigger2">
        <rdfs:label>ownedTrigger</rdfs:label>
        <rdfs:comment
            >References Trigger descriptions owned by a Classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioredClassifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedType2 -->

    <owl:DatatypeProperty rdf:about="#ownedType2">
        <rdfs:label>ownedType</rdfs:label>
        <rdfs:comment
            >References the packaged elements that are Types.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ownedUseCase2 -->

    <owl:DatatypeProperty rdf:about="#ownedUseCase2">
        <rdfs:label>ownedUseCase</rdfs:label>
        <rdfs:comment
            >References the use cases owned by this classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#owningAssociation2 -->

    <owl:DatatypeProperty rdf:about="#owningAssociation2">
        <rdfs:label
            >owningAssociation</rdfs:label>
        <rdfs:comment
            >References the owning association of this property, if any.</rdfs:comment>
        <rdfs:domain rdf:resource="#Property"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#packageImportVisibility -->

    <owl:DatatypeProperty rdf:about="#packageImportVisibility">
        <rdfs:label>visibility</rdfs:label>
        <rdfs:comment
            >Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not.</rdfs:comment>
        <rdfs:domain rdf:resource="#PackageImport"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#packagedElement3 -->

    <owl:DatatypeProperty rdf:about="#packagedElement3">
        <rdfs:label>packagedElement</rdfs:label>
        <rdfs:comment
            >Specifies the packageable elements that are owned by this Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#packagedElement4 -->

    <owl:DatatypeProperty rdf:about="#packagedElement4">
        <rdfs:label>packagedElement</rdfs:label>
        <rdfs:comment
            >The set of PackageableElements that a Component owns. In the namespace of a component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g. Classes, Interfaces, Components, Packages, Use cases, Dependencies (e.g. mappings), and Artifacts.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameterSet2 -->

    <owl:DatatypeProperty rdf:about="#parameterSet2">
        <rdfs:label>parameterSet</rdfs:label>
        <rdfs:comment
            >The parameter sets containing the parameter. See ParameterSet.</rdfs:comment>
        <rdfs:domain rdf:resource="#Parameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#parameteredElement2 -->

    <owl:DatatypeProperty rdf:about="#parameteredElement2">
        <rdfs:label
            >parameteredElement</rdfs:label>
        <rdfs:comment
            >The element exposed by this template parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#powertypeExtent2 -->

    <owl:DatatypeProperty rdf:about="#powertypeExtent2">
        <rdfs:label>powertypeExtent</rdfs:label>
        <rdfs:comment
            >Designates the GeneralizationSet of which the associated Classifier is a power type.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#profileApplication2 -->

    <owl:DatatypeProperty rdf:about="#profileApplication2">
        <rdfs:label
            >profileApplication</rdfs:label>
        <rdfs:comment
            >References the ProfileApplications that indicate which profiles have been applied to the Package.</rdfs:comment>
        <rdfs:domain rdf:resource="#Package"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#protectedNode2 -->

    <owl:DatatypeProperty rdf:about="#protectedNode2">
        <rdfs:label>protectedNode</rdfs:label>
        <rdfs:comment
            >The node protected by the handler. The handler is examined if an exception propagates to the outside of the node.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExceptionHandler"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#protocol3 -->

    <owl:DatatypeProperty rdf:about="#protocol3">
        <rdfs:label>protocol</rdfs:label>
        <rdfs:comment
            >References an optional protocol state machine which describes valid interactions at this interaction point.</rdfs:comment>
        <rdfs:domain rdf:resource="#Port"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#protocol4 -->

    <owl:DatatypeProperty rdf:about="#protocol4">
        <rdfs:label>protocol</rdfs:label>
        <rdfs:comment
            >References a protocol state machine specifying the legal sequences of the invocation of the behavioral features described in the interface.</rdfs:comment>
        <rdfs:domain rdf:resource="#Interface"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#provided3 -->

    <owl:DatatypeProperty rdf:about="#provided3">
        <rdfs:label>provided</rdfs:label>
        <rdfs:comment
            >The interfaces that the component exposes to its environment. These interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifiedName -->

    <owl:DatatypeProperty rdf:about="#qualifiedName">
        <rdfs:label>qualifiedName</rdfs:label>
        <rdfs:comment
            >A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself.</rdfs:comment>
        <rdfs:domain rdf:resource="#NamedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifier5 -->

    <owl:DatatypeProperty rdf:about="#qualifier5">
        <rdfs:label>qualifier</rdfs:label>
        <rdfs:comment
            >List of qualifier values</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndData"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#qualifier6 -->

    <owl:DatatypeProperty rdf:about="#qualifier6">
        <rdfs:label>qualifier</rdfs:label>
        <rdfs:comment
            >Attribute representing the qualifier for which the value is to be specified.</rdfs:comment>
        <rdfs:domain rdf:resource="#QualifierValue"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#raisedException2 -->

    <owl:DatatypeProperty rdf:about="#raisedException2">
        <rdfs:label>raisedException</rdfs:label>
        <rdfs:comment
            >References the Types representing exceptions that may be raised during an invocation of this feature.
The signals that the behavioral feature raises as exceptions.</rdfs:comment>
        <rdfs:domain rdf:resource="#BehavioralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realization3 -->

    <owl:DatatypeProperty rdf:about="#realization3">
        <rdfs:label>realization</rdfs:label>
        <rdfs:comment
            >The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#realizingConnector2 -->

    <owl:DatatypeProperty rdf:about="#realizingConnector2">
        <rdfs:label
            >realizingConnector</rdfs:label>
        <rdfs:comment
            >Determines which Connectors will realize the specified flow.</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationFlow"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#receivingPackage2 -->

    <owl:DatatypeProperty rdf:about="#receivingPackage2">
        <rdfs:label
            >receivingPackage</rdfs:label>
        <rdfs:comment
            >References the Package that is being extended with the contents of the merged package of the PackageMerge.</rdfs:comment>
        <rdfs:domain rdf:resource="#PackageMerge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#reducer2 -->

    <owl:DatatypeProperty rdf:about="#reducer2">
        <rdfs:label>reducer</rdfs:label>
        <rdfs:comment
            >Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReduceAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#references2 -->

    <owl:DatatypeProperty rdf:about="#references2">
        <rdfs:label>references</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#regionAsInput2 -->

    <owl:DatatypeProperty rdf:about="#regionAsInput2">
        <rdfs:label>regionAsInput</rdfs:label>
        <rdfs:comment
            >The expansion region for which the node is an input.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExpansionNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#regionAsOutput2 -->

    <owl:DatatypeProperty rdf:about="#regionAsOutput2">
        <rdfs:label>regionAsOutput</rdfs:label>
        <rdfs:comment
            >The expansion region for which the node is an output.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExpansionNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#relatedElement3 -->

    <owl:DatatypeProperty rdf:about="#relatedElement3">
        <owl:dataPropertyDomain rdf:resource="#Relationship"/>
        <owl:dataPropertyRange rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#removeAt3 -->

    <owl:DatatypeProperty rdf:about="#removeAt3">
        <rdfs:label>removeAt</rdfs:label>
        <rdfs:comment
            >Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</rdfs:comment>
        <rdfs:domain rdf:resource="#RemoveVariableValueAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#replyToCall2 -->

    <owl:DatatypeProperty rdf:about="#replyToCall2">
        <rdfs:label>replyToCall</rdfs:label>
        <rdfs:comment
            >The trigger specifying the operation whose call is being replied to.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReplyAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#replyValue2 -->

    <owl:DatatypeProperty rdf:about="#replyValue2">
        <rdfs:label>replyValue</rdfs:label>
        <rdfs:comment
            >A list of pins containing the reply values of the operation. These values are returned to the caller.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReplyAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#represented2 -->

    <owl:DatatypeProperty rdf:about="#represented2">
        <rdfs:label>represented</rdfs:label>
        <rdfs:comment
            >Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers.</rdfs:comment>
        <rdfs:domain rdf:resource="#InformationItem"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#represents3 -->

    <owl:DatatypeProperty rdf:about="#represents3">
        <rdfs:label>represents</rdfs:label>
        <rdfs:comment
            >An element constraining behaviors invoked by nodes in the partition.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityPartition"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#required3 -->

    <owl:DatatypeProperty rdf:about="#required3">
        <rdfs:label>required</rdfs:label>
        <rdfs:comment
            >The interfaces that the component requires from other components in its environment in order to be able to offer its full set of provided functionality. These interfaces may be used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports.</rdfs:comment>
        <rdfs:domain rdf:resource="#Component"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#required4 -->

    <owl:DatatypeProperty rdf:about="#required4">
        <rdfs:label>required</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#resolveProxies -->

    <owl:DatatypeProperty rdf:about="#resolveProxies">
        <rdfs:label>resolveProxies</rdfs:label>
        <rdfs:domain rdf:resource="#EReference"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result22 -->

    <owl:DatatypeProperty rdf:about="#result22">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#CreateLinkObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result23 -->

    <owl:DatatypeProperty rdf:about="#result23">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadStructuralFeatureAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result24 -->

    <owl:DatatypeProperty rdf:about="#result24">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >The values of the structural features of the input object.</rdfs:comment>
        <rdfs:domain rdf:resource="#UnmarshallAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result25 -->

    <owl:DatatypeProperty rdf:about="#result25">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Pin where the result value is placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndQualifierAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result26 -->

    <owl:DatatypeProperty rdf:about="#result26">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >The pin on which are put the objects participating in the association at the end not specified by the inputs.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadLinkAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result27 -->

    <owl:DatatypeProperty rdf:about="#result27">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#CreateObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result28 -->

    <owl:DatatypeProperty rdf:about="#result28">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >A list of output pins that constitute the data flow outputs of the conditional.</rdfs:comment>
        <rdfs:domain rdf:resource="#ConditionalNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result29 -->

    <owl:DatatypeProperty rdf:about="#result29">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >The runtime instances of the classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadExtentAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result30 -->

    <owl:DatatypeProperty rdf:about="#result30">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#WriteStructuralFeatureAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result31 -->

    <owl:DatatypeProperty rdf:about="#result31">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >A list of output pins where the results of performing the invocation are placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result32 -->

    <owl:DatatypeProperty rdf:about="#result32">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >After termination of the action, will hold the result of the test.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadIsClassifiedObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result33 -->

    <owl:DatatypeProperty rdf:about="#result33">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Tells whether the two input objects are identical.</rdfs:comment>
        <rdfs:domain rdf:resource="#TestIdentityAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result34 -->

    <owl:DatatypeProperty rdf:about="#result34">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the hosting object is placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadSelfAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result35 -->

    <owl:DatatypeProperty rdf:about="#result35">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReduceAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result36 -->

    <owl:DatatypeProperty rdf:about="#result36">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadVariableAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result37 -->

    <owl:DatatypeProperty rdf:about="#result37">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >A list of output pins that constitute the data flow output of the entire loop.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result38 -->

    <owl:DatatypeProperty rdf:about="#result38">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Pin where the result value is placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReadLinkObjectEndAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result39 -->

    <owl:DatatypeProperty rdf:about="#result39">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Restricts an opaque expression to return exactly one return result. When the invocation of the opaque expression completes, a single set of values is returned to its owner. This association is derived from the single return result parameter of the associated behavior.</rdfs:comment>
        <rdfs:domain rdf:resource="#OpaqueExpression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result40 -->

    <owl:DatatypeProperty rdf:about="#result40">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#ValueSpecificationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result41 -->

    <owl:DatatypeProperty rdf:about="#result41">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptEventAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#result42 -->

    <owl:DatatypeProperty rdf:about="#result42">
        <rdfs:label>result</rdfs:label>
        <rdfs:comment
            >Gives the output pin on which the result is put.</rdfs:comment>
        <rdfs:domain rdf:resource="#ClearStructuralFeatureAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#returnInformation3 -->

    <owl:DatatypeProperty rdf:about="#returnInformation3">
        <rdfs:label
            >returnInformation</rdfs:label>
        <rdfs:comment
            >Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptCallAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#returnInformation4 -->

    <owl:DatatypeProperty rdf:about="#returnInformation4">
        <rdfs:label
            >returnInformation</rdfs:label>
        <rdfs:comment
            >A pin containing the return information value produced by an earlier AcceptCallAction.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReplyAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#scope2 -->

    <owl:DatatypeProperty rdf:about="#scope2">
        <rdfs:label>scope</rdfs:label>
        <rdfs:comment
            >A structured activity node that owns the variable.</rdfs:comment>
        <rdfs:domain rdf:resource="#Variable"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#second2 -->

    <owl:DatatypeProperty rdf:about="#second2">
        <rdfs:label>second</rdfs:label>
        <rdfs:comment
            >Gives the pin on which an object is placed.</rdfs:comment>
        <rdfs:domain rdf:resource="#TestIdentityAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#selection3 -->

    <owl:DatatypeProperty rdf:about="#selection3">
        <rdfs:label>selection</rdfs:label>
        <rdfs:comment
            >Selects tokens for outgoing edges.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#selector2 -->

    <owl:DatatypeProperty rdf:about="#selector2">
        <rdfs:label>selector</rdfs:label>
        <rdfs:comment
            >If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set.</rdfs:comment>
        <rdfs:domain rdf:resource="#Lifeline"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#serializable -->

    <owl:DatatypeProperty rdf:about="#serializable">
        <rdfs:label>serializable</rdfs:label>
        <rdfs:domain rdf:resource="#EDataType"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#setting -->

    <owl:DatatypeProperty rdf:about="#setting">
        <rdfs:label>setting</rdfs:label>
        <rdfs:comment
            >True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning.</rdfs:comment>
        <rdfs:domain rdf:resource="#Continuation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#setupPart2 -->

    <owl:DatatypeProperty rdf:about="#setupPart2">
        <rdfs:label>setupPart</rdfs:label>
        <rdfs:comment
            >The set of nodes and edges that initialize values or perform other setup computations for the loop.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal10 -->

    <owl:DatatypeProperty rdf:about="#signal10">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The signal associated with this event.</rdfs:comment>
        <rdfs:domain rdf:resource="#ReceiveSignalEvent"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal11 -->

    <owl:DatatypeProperty rdf:about="#signal11">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The type of signal transmitted to the target object.</rdfs:comment>
        <rdfs:domain rdf:resource="#SendSignalAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal12 -->

    <owl:DatatypeProperty rdf:about="#signal12">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The signal that this reception handles.</rdfs:comment>
        <rdfs:domain rdf:resource="#Reception"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal7 -->

    <owl:DatatypeProperty rdf:about="#signal7">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The specific signal that is associated with this event.</rdfs:comment>
        <rdfs:domain rdf:resource="#SignalEvent"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal8 -->

    <owl:DatatypeProperty rdf:about="#signal8">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The specification of signal object transmitted to the target objects.</rdfs:comment>
        <rdfs:domain rdf:resource="#BroadcastSignalAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signal9 -->

    <owl:DatatypeProperty rdf:about="#signal9">
        <rdfs:label>signal</rdfs:label>
        <rdfs:comment
            >The signal associated with this event.</rdfs:comment>
        <rdfs:domain rdf:resource="#SendSignalEvent"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signature4 -->

    <owl:DatatypeProperty rdf:about="#signature4">
        <rdfs:label>signature</rdfs:label>
        <rdfs:comment
            >The template signature that owns this template parameter.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameter"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signature5 -->

    <owl:DatatypeProperty rdf:about="#signature5">
        <rdfs:label>signature</rdfs:label>
        <rdfs:comment
            >The definition of the type or signature of the Message (depending on its kind). The associated named element is derived from the message end that constitutes the sending or receiving message event. If both a sending event and a receiving message event are present, the signature is obtained from the sending event.</rdfs:comment>
        <rdfs:domain rdf:resource="#Message"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#signature6 -->

    <owl:DatatypeProperty rdf:about="#signature6">
        <rdfs:label>signature</rdfs:label>
        <rdfs:comment
            >The template signature for the template that is the target of the binding.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateBinding"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#slot2 -->

    <owl:DatatypeProperty rdf:about="#slot2">
        <rdfs:label>slot</rdfs:label>
        <rdfs:comment
            >A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description.</rdfs:comment>
        <rdfs:domain rdf:resource="#InstanceSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#source4 -->

    <owl:DatatypeProperty rdf:about="#source4">
        <rdfs:label>source</rdfs:label>
        <rdfs:comment
            >Specifies the sources of the DirectedRelationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#DirectedRelationship"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#source5 -->

    <owl:DatatypeProperty rdf:about="#source5">
        <rdfs:label>source</rdfs:label>
        <rdfs:comment
            >Node from which tokens are taken when they traverse the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#source6 -->

    <owl:DatatypeProperty rdf:about="#source6">
        <rdfs:label>source</rdfs:label>
        <rdfs:domain rdf:resource="#EAnnotation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specific2 -->

    <owl:DatatypeProperty rdf:about="#specific2">
        <rdfs:label>specific</rdfs:label>
        <rdfs:comment
            >References the specializing classifier in the Generalization relationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#Generalization"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specificMachine2 -->

    <owl:DatatypeProperty rdf:about="#specificMachine2">
        <rdfs:label>specificMachine</rdfs:label>
        <rdfs:comment
            >Specifies the state machine which conforms to the general state machine.</rdfs:comment>
        <rdfs:domain rdf:resource="#ProtocolConformance"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specification4 -->

    <owl:DatatypeProperty rdf:about="#specification4">
        <rdfs:label>specification</rdfs:label>
        <rdfs:comment
            >Designates a behavioral feature that the behavior implements. The behavioral feature must be owned by the classifier that owns the behavior or be inherited by it. The parameters of the behavioral feature and the implementing behavior must match. A behavior does not need to have a specification, in which case it either is the classifer behavior of a BehavioredClassifier or it can only be invoked by another behavior of the classifier.</rdfs:comment>
        <rdfs:domain rdf:resource="#Behavior"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specification5 -->

    <owl:DatatypeProperty rdf:about="#specification5">
        <rdfs:label>specification</rdfs:label>
        <rdfs:comment
            >A condition that must be true when evaluated in order for the constraint to be satisfied.</rdfs:comment>
        <rdfs:domain rdf:resource="#Constraint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#specification6 -->

    <owl:DatatypeProperty rdf:about="#specification6">
        <rdfs:label>specification</rdfs:label>
        <rdfs:comment
            >A specification of how to compute, derive, or construct the instance.</rdfs:comment>
        <rdfs:domain rdf:resource="#InstanceSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#start2 -->

    <owl:DatatypeProperty rdf:about="#start2">
        <rdfs:label>start</rdfs:label>
        <rdfs:comment
            >References the OccurrenceSpecification that designates the start of the Action or Behavior</rdfs:comment>
        <rdfs:domain rdf:resource="#ExecutionSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#state4 -->

    <owl:DatatypeProperty rdf:about="#state4">
        <rdfs:label>state</rdfs:label>
        <rdfs:comment
            >The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#stateMachine3 -->

    <owl:DatatypeProperty rdf:about="#stateMachine3">
        <rdfs:label>stateMachine</rdfs:label>
        <rdfs:comment
            >The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#stateMachine4 -->

    <owl:DatatypeProperty rdf:about="#stateMachine4">
        <rdfs:label>stateMachine</rdfs:label>
        <rdfs:comment
            >The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint.</rdfs:comment>
        <rdfs:domain rdf:resource="#Pseudostate"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#structuredNode2 -->

    <owl:DatatypeProperty rdf:about="#structuredNode2">
        <rdfs:label>structuredNode</rdfs:label>
        <rdfs:comment
            >Top-level structured nodes in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#submachine2 -->

    <owl:DatatypeProperty rdf:about="#submachine2">
        <rdfs:label>submachine</rdfs:label>
        <rdfs:comment
            >The state machine that is to be inserted in place of the (submachine) state.</rdfs:comment>
        <rdfs:domain rdf:resource="#State"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#substitutingClassifier2 -->

    <owl:DatatypeProperty rdf:about="#substitutingClassifier2">
        <rdfs:label
            >substitutingClassifier</rdfs:label>
        <rdfs:comment
            >Instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected.</rdfs:comment>
        <rdfs:domain rdf:resource="#Substitution"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#subvertex2 -->

    <owl:DatatypeProperty rdf:about="#subvertex2">
        <rdfs:label>subvertex</rdfs:label>
        <rdfs:comment
            >The set of vertices that are owned by this region.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#supplier2 -->

    <owl:DatatypeProperty rdf:about="#supplier2">
        <rdfs:label>supplier</rdfs:label>
        <rdfs:comment
            >The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific.</rdfs:comment>
        <rdfs:domain rdf:resource="#Dependency"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#symbol -->

    <owl:DatatypeProperty rdf:about="#symbol">
        <rdfs:label>symbol</rdfs:label>
        <rdfs:comment
            >The symbol associated with the node in the expression tree.</rdfs:comment>
        <rdfs:domain rdf:resource="#Expression"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target10 -->

    <owl:DatatypeProperty rdf:about="#target10">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >Node to which tokens are put when they traverse the edge.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target11 -->

    <owl:DatatypeProperty rdf:about="#target11">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The input pin providing the object to be destroyed.</rdfs:comment>
        <rdfs:domain rdf:resource="#DestroyObjectAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target12 -->

    <owl:DatatypeProperty rdf:about="#target12">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >Specifies the targets of the DirectedRelationship.</rdfs:comment>
        <rdfs:domain rdf:resource="#DirectedRelationship"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target8 -->

    <owl:DatatypeProperty rdf:about="#target8">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The target object to which the signal is sent.</rdfs:comment>
        <rdfs:domain rdf:resource="#SendSignalAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#target9 -->

    <owl:DatatypeProperty rdf:about="#target9">
        <rdfs:label>target</rdfs:label>
        <rdfs:comment
            >The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation.</rdfs:comment>
        <rdfs:domain rdf:resource="#CallOperationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#templateBinding3 -->

    <owl:DatatypeProperty rdf:about="#templateBinding3">
        <rdfs:label>templateBinding</rdfs:label>
        <rdfs:comment
            >The optional bindings from this element to templates.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateParameterSubstitution"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#templateBinding4 -->

    <owl:DatatypeProperty rdf:about="#templateBinding4">
        <rdfs:label>templateBinding</rdfs:label>
        <rdfs:comment
            >The optional bindings from this element to templates.</rdfs:comment>
        <rdfs:domain rdf:resource="#TemplateableElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#test3 -->

    <owl:DatatypeProperty rdf:about="#test3">
        <rdfs:label>test</rdfs:label>
        <rdfs:comment
            >The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed.</rdfs:comment>
        <rdfs:domain rdf:resource="#LoopNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#test4 -->

    <owl:DatatypeProperty rdf:about="#test4">
        <rdfs:label>test</rdfs:label>
        <rdfs:comment
            >A nested activity fragment with a designated output pin that specifies the result of the test.</rdfs:comment>
        <rdfs:domain rdf:resource="#Clause"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#toAfter2 -->

    <owl:DatatypeProperty rdf:about="#toAfter2">
        <rdfs:label>toAfter</rdfs:label>
        <rdfs:comment
            >References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification</rdfs:comment>
        <rdfs:domain rdf:resource="#OccurrenceSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#toBefore2 -->

    <owl:DatatypeProperty rdf:about="#toBefore2">
        <rdfs:label>toBefore</rdfs:label>
        <rdfs:comment
            >References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification</rdfs:comment>
        <rdfs:domain rdf:resource="#OccurrenceSpecification"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#transient -->

    <owl:DatatypeProperty rdf:about="#transient">
        <rdfs:label>transient</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#transition2 -->

    <owl:DatatypeProperty rdf:about="#transition2">
        <rdfs:label>transition</rdfs:label>
        <rdfs:comment
            >The set of transitions owned by the region. Note that internal transitions are owned by a region, but applies to the source state.</rdfs:comment>
        <rdfs:domain rdf:resource="#Region"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#trigger3 -->

    <owl:DatatypeProperty rdf:about="#trigger3">
        <rdfs:label>trigger</rdfs:label>
        <rdfs:comment
            >Specifies the triggers that may fire the transition.</rdfs:comment>
        <rdfs:domain rdf:resource="#Transition"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#trigger4 -->

    <owl:DatatypeProperty rdf:about="#trigger4">
        <rdfs:label>trigger</rdfs:label>
        <rdfs:comment
            >The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted.</rdfs:comment>
        <rdfs:domain rdf:resource="#AcceptEventAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#type4 -->

    <owl:DatatypeProperty rdf:about="#type4">
        <rdfs:label>type</rdfs:label>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
Specifies the return result of the operation, if present.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#type5 -->

    <owl:DatatypeProperty rdf:about="#type5">
        <rdfs:label>type</rdfs:label>
        <rdfs:comment
            >An optional association that specifies the link corresponding to this connector.</rdfs:comment>
        <rdfs:domain rdf:resource="#Connector"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#type6 -->

    <owl:DatatypeProperty rdf:about="#type6">
        <rdfs:label>type</rdfs:label>
        <rdfs:comment
            >The collaboration which is used in this occurrence. The collaboration defines the cooperation between its roles which are mapped to properties of the classifier owning the collaboration use.</rdfs:comment>
        <rdfs:domain rdf:resource="#CollaborationUse"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#unique -->

    <owl:DatatypeProperty rdf:about="#unique">
        <rdfs:label>unique</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#unmarshallType2 -->

    <owl:DatatypeProperty rdf:about="#unmarshallType2">
        <rdfs:label>unmarshallType</rdfs:label>
        <rdfs:comment
            >The type of the object to be unmarshalled.</rdfs:comment>
        <rdfs:domain rdf:resource="#UnmarshallAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#unsettable -->

    <owl:DatatypeProperty rdf:about="#unsettable">
        <rdfs:label>unsettable</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upper -->

    <owl:DatatypeProperty rdf:about="#upper">
        <rdfs:label>upper</rdfs:label>
        <rdfs:comment
            >Specifies the upper bound of the multiplicity interval.</rdfs:comment>
        <rdfs:domain rdf:resource="#MultiplicityElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upper2 -->

    <owl:DatatypeProperty rdf:about="#upper2">
        <rdfs:label>upper</rdfs:label>
        <rdfs:comment
            >This information is derived from the return result for this Operation.
Specifies the upper multiplicity of the return parameter, if present.</rdfs:comment>
        <rdfs:domain rdf:resource="#Operation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upperBound2 -->

    <owl:DatatypeProperty rdf:about="#upperBound2">
        <rdfs:label>upperBound</rdfs:label>
        <rdfs:comment
            >The maximum number of tokens allowed in the node. Objects cannot flow into the node if the upper bound is reached.</rdfs:comment>
        <rdfs:domain rdf:resource="#ObjectNode"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upperBound3 -->

    <owl:DatatypeProperty rdf:about="#upperBound3">
        <rdfs:label>upperBound</rdfs:label>
        <rdfs:domain rdf:resource="#ETypedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#upperValue2 -->

    <owl:DatatypeProperty rdf:about="#upperValue2">
        <owl:dataPropertyDomain rdf:resource="#MultiplicityElement"/>
        <owl:dataPropertyRange rdf:resource="#ValueSpecification"/>
        <owl:dataPropertyRange rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#useCase3 -->

    <owl:DatatypeProperty rdf:about="#useCase3">
        <rdfs:label>useCase</rdfs:label>
        <rdfs:comment
            >The set of use cases for which this Classifier is the subject.</rdfs:comment>
        <rdfs:domain rdf:resource="#Classifier"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#useCase4 -->

    <owl:DatatypeProperty rdf:about="#useCase4">
        <rdfs:label>useCase</rdfs:label>
        <rdfs:comment
            >References the use case that owns this extension point.</rdfs:comment>
        <rdfs:domain rdf:resource="#ExtensionPoint"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#utilizedElement2 -->

    <owl:DatatypeProperty rdf:about="#utilizedElement2">
        <rdfs:label>utilizedElement</rdfs:label>
        <rdfs:comment
            >The model element that is utilized in the manifestation in an Artifact.</rdfs:comment>
        <rdfs:domain rdf:resource="#Manifestation"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value10 -->

    <owl:DatatypeProperty rdf:about="#value10">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >The specified String value.</rdfs:comment>
        <rdfs:domain rdf:resource="#LiteralString"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value11 -->

    <owl:DatatypeProperty rdf:about="#value11">
        <rdfs:label>value</rdfs:label>
        <rdfs:domain rdf:resource="#EEnumLiteral"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value12 -->

    <owl:DatatypeProperty rdf:about="#value12">
        <rdfs:label>value</rdfs:label>
        <rdfs:domain rdf:resource="#EStringToStringMapEntry"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value13 -->

    <owl:DatatypeProperty rdf:about="#value13">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Input pin from which the specified value for the qualifier is taken.</rdfs:comment>
        <rdfs:domain rdf:resource="#QualifierValue"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value14 -->

    <owl:DatatypeProperty rdf:about="#value14">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Value that the pin will provide.</rdfs:comment>
        <rdfs:domain rdf:resource="#ValuePin"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value15 -->

    <owl:DatatypeProperty rdf:about="#value15">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >The specified Boolean value.</rdfs:comment>
        <rdfs:domain rdf:resource="#LiteralBoolean"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value16 -->

    <owl:DatatypeProperty rdf:about="#value16">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Value specification to be evaluated.</rdfs:comment>
        <rdfs:domain rdf:resource="#ValueSpecificationAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value17 -->

    <owl:DatatypeProperty rdf:about="#value17">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >The specified Integer value.</rdfs:comment>
        <rdfs:domain rdf:resource="#LiteralInteger"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value18 -->

    <owl:DatatypeProperty rdf:about="#value18">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >The specified UnlimitedNatural value.</rdfs:comment>
        <rdfs:domain rdf:resource="#LiteralUnlimitedNatural"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value8 -->

    <owl:DatatypeProperty rdf:about="#value8">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >The value or values corresponding to the defining feature for the owning instance specification.</rdfs:comment>
        <rdfs:domain rdf:resource="#Slot"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#value9 -->

    <owl:DatatypeProperty rdf:about="#value9">
        <rdfs:label>value</rdfs:label>
        <rdfs:comment
            >Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an &#39;open&#39; end for reading.</rdfs:comment>
        <rdfs:domain rdf:resource="#LinkEndData"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#variable4 -->

    <owl:DatatypeProperty rdf:about="#variable4">
        <rdfs:label>variable</rdfs:label>
        <rdfs:comment
            >Top-level variables in the activity.</rdfs:comment>
        <rdfs:domain rdf:resource="#Activity"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#variable5 -->

    <owl:DatatypeProperty rdf:about="#variable5">
        <rdfs:label>variable</rdfs:label>
        <rdfs:comment
            >Variable to be read.</rdfs:comment>
        <rdfs:domain rdf:resource="#VariableAction"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#viewpoint -->

    <owl:DatatypeProperty rdf:about="#viewpoint">
        <rdfs:label>viewpoint</rdfs:label>
        <rdfs:comment
            >The name of the viewpoint that is expressed by a model (This name may refer to a profile definition).</rdfs:comment>
        <rdfs:domain rdf:resource="#Model"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#visibility -->

    <owl:DatatypeProperty rdf:about="#visibility">
        <rdfs:label>visibility</rdfs:label>
        <rdfs:comment
            >Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility.</rdfs:comment>
        <rdfs:domain rdf:resource="#NamedElement"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#volatile -->

    <owl:DatatypeProperty rdf:about="#volatile">
        <rdfs:label>volatile</rdfs:label>
        <rdfs:domain rdf:resource="#EStructuralFeature"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#weight2 -->

    <owl:DatatypeProperty rdf:about="#weight2">
        <rdfs:label>weight</rdfs:label>
        <rdfs:comment
            >The minimum number of tokens that must traverse the edge at the same time.</rdfs:comment>
        <rdfs:domain rdf:resource="#ActivityEdge"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Abstraction -->

    <owl:Class rdf:about="#Abstraction">
        <rdfs:label>Abstraction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Dependency"/>
        <rdfs:comment
            >An abstraction is a relationship that relates two elements or sets of elements that represent the same concept at different levels of abstraction or from different viewpoints.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#AcceptCallAction -->

    <owl:Class rdf:about="#AcceptCallAction">
        <rdfs:label
            >AcceptCallAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#AcceptEventAction"/>
        <rdfs:comment
            >An accept call action is an accept event action representing the receipt of a synchronous call request. In addition to the normal operation parameters, the action produces an output that is needed later to supply the information to the reply action necessary to return control to the caller. This action is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent reply action will complete immediately with no effects.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#AcceptEventAction -->

    <owl:Class rdf:about="#AcceptEventAction">
        <rdfs:label
            >AcceptEventAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A accept event action is an action that waits for the occurrence of an event meeting specified conditions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Action -->

    <owl:Class rdf:about="#Action">
        <rdfs:label>Action</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ExecutableNode"/>
        <rdfs:comment
            >An action is a named element that is the fundamental unit of executable functionality. The execution of an action represents some transformation or processing in the modeled system, be it a computer system or otherwise.
An action represents a single step within an activity, that is, one that is not further decomposed within the activity.
An action has pre- and post-conditions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActionExecutionSpecification -->

    <owl:Class rdf:about="#ActionExecutionSpecification">
        <rdfs:label
            >ActionExecutionSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ExecutionSpecification"/>
        <rdfs:comment
            >An action execution specification is a kind of execution specification representing the execution of an action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActionInputPin -->

    <owl:Class rdf:about="#ActionInputPin">
        <rdfs:label>ActionInputPin</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InputPin"/>
        <rdfs:comment
            >An action input pin is a kind of pin that executes an action to determine the values to input to another.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Activity -->

    <owl:Class rdf:about="#Activity">
        <rdfs:label>Activity</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Behavior"/>
        <rdfs:comment
            >An activity is the specification of parameterized behavior as the coordinated sequencing of subordinate units whose individual elements are actions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActivityEdge -->

    <owl:Class rdf:about="#ActivityEdge">
        <rdfs:label>ActivityEdge</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:comment
            >An activity edge is an abstract class for directed connections between two activity nodes.
Activity edges can be contained in interruptible regions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActivityFinalNode -->

    <owl:Class rdf:about="#ActivityFinalNode">
        <rdfs:label
            >ActivityFinalNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#FinalNode"/>
        <rdfs:comment
            >An activity final node is a final node that stops all flows in an activity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActivityGroup -->

    <owl:Class rdf:about="#ActivityGroup">
        <rdfs:label>ActivityGroup</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >ActivityGroup is an abstract class for defining sets of nodes and edges in an activity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActivityNode -->

    <owl:Class rdf:about="#ActivityNode">
        <rdfs:label>ActivityNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:comment
            >ActivityNode is an abstract class for points in the flow of an activity connected by edges.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActivityParameterNode -->

    <owl:Class rdf:about="#ActivityParameterNode">
        <rdfs:label
            >ActivityParameterNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ObjectNode"/>
        <rdfs:comment
            >An activity parameter node is an object node for inputs and outputs to activities.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ActivityPartition -->

    <owl:Class rdf:about="#ActivityPartition">
        <rdfs:label
            >ActivityPartition</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityGroup"/>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >An activity partition is a kind of activity group for identifying actions that have some characteristic in common.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Actor -->

    <owl:Class rdf:about="#Actor">
        <rdfs:label>Actor</rdfs:label>
        <rdfs:subClassOf rdf:resource="#BehavioredClassifier"/>
        <rdfs:comment
            >An actor specifies a role played by a user or any other system that interacts with the subject.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#AddStructuralFeatureValueAction -->

    <owl:Class rdf:about="#AddStructuralFeatureValueAction">
        <rdfs:label
            >AddStructuralFeatureValueAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#WriteStructuralFeatureAction"/>
        <rdfs:comment
            >An add structural feature value action is a write structural feature action for adding values to a structural feature.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#AddVariableValueAction -->

    <owl:Class rdf:about="#AddVariableValueAction">
        <rdfs:label
            >AddVariableValueAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#WriteVariableAction"/>
        <rdfs:comment
            >An add variable value action is a write variable action for adding values to a variable.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#AnyReceiveEvent -->

    <owl:Class rdf:about="#AnyReceiveEvent">
        <rdfs:label>AnyReceiveEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A transition trigger associated with an any receive event specifies that the transition is to be triggered by the receipt of any message that is not explicitly referenced in another transition from the same vertex.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Artifact -->

    <owl:Class rdf:about="#Artifact">
        <rdfs:label>Artifact</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:subClassOf rdf:resource="#DeployedArtifact"/>
        <rdfs:comment
            >An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.
An artifact is the source of a deployment to a node.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Association -->

    <owl:Class rdf:about="#Association">
        <rdfs:label>Association</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:subClassOf rdf:resource="#Relationship"/>
        <rdfs:comment
            >An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#AssociationClass -->

    <owl:Class rdf:about="#AssociationClass">
        <rdfs:label
            >AssociationClass</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Association"/>
        <rdfs:subClassOf rdf:resource="#Class"/>
        <rdfs:comment
            >A model element that has both association and class properties. An AssociationClass can be seen as an association that also has class properties, or as a class that also has association properties. It not only connects a set of classifiers but also defines a set of features that belong to the relationship itself and not to any of the classifiers.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Behavior -->

    <owl:Class rdf:about="#Behavior">
        <rdfs:label>Behavior</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Class"/>
        <rdfs:comment
            >Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.
A behavior owns zero or more parameter sets.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#BehaviorExecutionSpecification -->

    <owl:Class rdf:about="#BehaviorExecutionSpecification">
        <rdfs:label
            >BehaviorExecutionSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ExecutionSpecification"/>
        <rdfs:comment
            >A behavior execution specification is a kind of execution specification representing the execution of a behavior.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#BehavioralFeature -->

    <owl:Class rdf:about="#BehavioralFeature">
        <rdfs:label
            >BehavioralFeature</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:comment
            >A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.
A behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.
A behavioral feature owns zero or more parameter sets.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#BehavioredClassifier -->

    <owl:Class rdf:about="#BehavioredClassifier">
        <rdfs:label
            >BehavioredClassifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:comment
            >A behaviored classifier may have an interface realization.
A classifier can have behavior specifications defined in its namespace. One of these may specify the behavior of the classifier itself.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#BroadcastSignalAction -->

    <owl:Class rdf:about="#BroadcastSignalAction">
        <rdfs:label
            >BroadcastSignalAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InvocationAction"/>
        <rdfs:comment
            >A broadcast signal action is an action that transmits a signal instance to all the potential target objects in the system, which may cause the firing of a state machine transitions or the execution of associated activities of a target object. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately after the signals are sent out. It does not wait for receipt. Any reply messages are ignored and are not transmitted to the requestor.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CallAction -->

    <owl:Class rdf:about="#CallAction">
        <rdfs:label>CallAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InvocationAction"/>
        <rdfs:comment
            >CallAction is an abstract class for actions that invoke behavior and receive return values.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CallBehaviorAction -->

    <owl:Class rdf:about="#CallBehaviorAction">
        <rdfs:label
            >CallBehaviorAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#CallAction"/>
        <rdfs:comment
            >A call behavior action is a call action that invokes a behavior directly rather than invoking a behavioral feature that, in turn, results in the invocation of that behavior. The argument values of the action are available to the execution of the invoked behavior. For synchronous calls the execution of the call behavior action waits until the execution of the invoked behavior completes and a result is returned on its output pin. The action completes immediately without a result, if the call is asynchronous. In particular, the invoked behavior may be an activity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CallEvent -->

    <owl:Class rdf:about="#CallEvent">
        <rdfs:label>CallEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A call event models the receipt by an object of a message invoking a call of an operation.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CallOperationAction -->

    <owl:Class rdf:about="#CallOperationAction">
        <rdfs:label
            >CallOperationAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#CallAction"/>
        <rdfs:comment
            >A call operation action is an action that transmits an operation call request to the target object, where it may cause the invocation of associated behavior. The argument values of the action are available to the execution of the invoked behavior. If the action is marked synchronous, the execution of the call operation action waits until the execution of the invoked behavior completes and a reply transmission is returned to the caller; otherwise execution of the action is complete when the invocation of the operation is established and the execution of the invoked operation proceeds concurrently with the execution of the calling behavior. Any values returned as part of the reply transmission are put on the result output pins of the call operation action. Upon receipt of the reply transmission, execution of the call operation action is complete.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CentralBufferNode -->

    <owl:Class rdf:about="#CentralBufferNode">
        <rdfs:label
            >CentralBufferNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ObjectNode"/>
        <rdfs:comment
            >A central buffer node is an object node for managing flows from multiple sources and destinations.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ChangeEvent -->

    <owl:Class rdf:about="#ChangeEvent">
        <rdfs:label>ChangeEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Event"/>
        <rdfs:comment
            >A change event models a change in the system configuration that makes a condition true.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Class -->

    <owl:Class rdf:about="#Class">
        <rdfs:label>Class</rdfs:label>
        <rdfs:subClassOf rdf:resource="#BehavioredClassifier"/>
        <rdfs:subClassOf rdf:resource="#EncapsulatedClassifier"/>
        <rdfs:comment
            >A class describes a set of objects that share the same specifications of features, constraints, and semantics.
A class may be designated as active (i.e., each of its instances having its own thread of control) or passive (i.e., each of its instances executing within the context of some other object). A class may also specify which signals the instances of this class handle.
A class has the capability to have an internal structure and ports.
Class has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Classifier -->

    <owl:Class rdf:about="#Classifier">
        <rdfs:label>Classifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:subClassOf rdf:resource="#TemplateableElement"/>
        <rdfs:subClassOf rdf:resource="#Type"/>
        <rdfs:comment
            >A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.
A classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.
A classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.
Classifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ClassifierTemplateParameter -->

    <owl:Class rdf:about="#ClassifierTemplateParameter">
        <rdfs:label
            >ClassifierTemplateParameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#TemplateParameter"/>
        <rdfs:comment
            >A classifier template parameter exposes a classifier as a formal template parameter.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Clause -->

    <owl:Class rdf:about="#Clause">
        <rdfs:label>Clause</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A clause is an element that represents a single branch of a conditional construct, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates true.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ClearAssociationAction -->

    <owl:Class rdf:about="#ClearAssociationAction">
        <rdfs:label
            >ClearAssociationAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A clear association action is an action that destroys all links of an association in which a particular object participates.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ClearStructuralFeatureAction -->

    <owl:Class rdf:about="#ClearStructuralFeatureAction">
        <rdfs:label
            >ClearStructuralFeatureAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuralFeatureAction"/>
        <rdfs:comment
            >A clear structural feature action is a structural feature action that removes all values of a structural feature.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ClearVariableAction -->

    <owl:Class rdf:about="#ClearVariableAction">
        <rdfs:label
            >ClearVariableAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#VariableAction"/>
        <rdfs:comment
            >A clear variable action is a variable action that removes all values of a variable.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Collaboration -->

    <owl:Class rdf:about="#Collaboration">
        <rdfs:label>Collaboration</rdfs:label>
        <rdfs:subClassOf rdf:resource="#BehavioredClassifier"/>
        <rdfs:subClassOf rdf:resource="#StructuredClassifier"/>
        <rdfs:comment
            >A collaboration use represents the application of the pattern described by a collaboration to a specific situation involving specific classes or instances playing the roles of the collaboration.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CollaborationUse -->

    <owl:Class rdf:about="#CollaborationUse">
        <rdfs:label
            >CollaborationUse</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.
Associated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CombinedFragment -->

    <owl:Class rdf:about="#CombinedFragment">
        <rdfs:label
            >CombinedFragment</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >A combined fragment defines an expression of interaction fragments. A combined fragment is defined by an interaction operator and corresponding interaction operands. Through the use of combined fragments the user will be able to describe a number of traces in a compact and concise manner.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Comment -->

    <owl:Class rdf:about="#Comment">
        <rdfs:label>Comment</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A comment is a textual annotation that can be attached to a set of elements.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CommunicationPath -->

    <owl:Class rdf:about="#CommunicationPath">
        <rdfs:label
            >CommunicationPath</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Association"/>
        <rdfs:comment
            >A communication path is an association between two deployment targets, through which they are able to exchange signals and messages.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Component -->

    <owl:Class rdf:about="#Component">
        <rdfs:label>Component</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Class"/>
        <rdfs:comment
            >A component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.
In the namespace of a component, all model elements that are involved in or related to its definition are either owned or imported explicitly. This may include, for example, use cases and dependencies (e.g. mappings), packages, components, and artifacts.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ComponentRealization -->

    <owl:Class rdf:about="#ComponentRealization">
        <rdfs:label
            >ComponentRealization</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Realization"/>
        <rdfs:comment
            >The realization concept is specialized to (optionally) define the classifiers that realize the contract offered by a component in terms of its provided and required interfaces. The component forms an abstraction from these various classifiers.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ConditionalNode -->

    <owl:Class rdf:about="#ConditionalNode">
        <rdfs:label>ConditionalNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuredActivityNode"/>
        <rdfs:comment
            >A conditional node is a structured activity node that represents an exclusive choice among some number of alternatives.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ConnectableElement -->

    <owl:Class rdf:about="#ConnectableElement">
        <rdfs:label
            >ConnectableElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ParameterableElement"/>
        <rdfs:subClassOf rdf:resource="#TypedElement"/>
        <rdfs:comment
            >ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.
A connectable element may be exposed as a connectable element template parameter.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ConnectableElementTemplateParameter -->

    <owl:Class rdf:about="#ConnectableElementTemplateParameter">
        <rdfs:label
            >ConnectableElementTemplateParameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#TemplateParameter"/>
        <rdfs:comment
            >A connectable element template parameter exposes a connectable element as a formal parameter for a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ConnectionPointReference -->

    <owl:Class rdf:about="#ConnectionPointReference">
        <rdfs:label
            >ConnectionPointReference</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Vertex"/>
        <rdfs:comment
            >A connection point reference represents a usage (as part of a submachine state) of an entry/exit point defined in the statemachine reference by the submachine state.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Connector -->

    <owl:Class rdf:about="#Connector">
        <rdfs:label>Connector</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:comment
            >Specifies a link that enables communication between two or more instances. This link may be an instance of an association, or it may represent the possibility of the instances being able to communicate because their identities are known by virtue of being passed in as parameters, held in variables or slots, or because the communicating instances are the same instance. The link may be realized by something as simple as a pointer or by something as complex as a network connection. In contrast to associations, which specify links between any instance of the associated classifiers, connectors specify links between instances playing the connected parts only.
A delegation connector is a connector that links the external contract of a component (as specified by its ports) to the internal realization of that behavior by the component&#39;s parts. It represents the forwarding of signals (operation requests and events): a signal that arrives at a port that has a delegation connector to a part or to another port will be passed on to that target for handling.
An assembly connector is a connector between two components that defines that one component provides the services that another component requires. An assembly connector is a connector that is defined from a required interface or port to a provided interface or port.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ConnectorEnd -->

    <owl:Class rdf:about="#ConnectorEnd">
        <rdfs:label>ConnectorEnd</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MultiplicityElement"/>
        <rdfs:comment
            >A connector end is an endpoint of a connector, which attaches the connector to a connectable element. Each connector end is part of one connector.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ConsiderIgnoreFragment -->

    <owl:Class rdf:about="#ConsiderIgnoreFragment">
        <rdfs:label
            >ConsiderIgnoreFragment</rdfs:label>
        <rdfs:subClassOf rdf:resource="#CombinedFragment"/>
        <rdfs:comment
            >A consider ignore fragment is a kind of combined fragment that is used for the consider and ignore cases, which require lists of pertinent messages to be specified.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Constraint -->

    <owl:Class rdf:about="#Constraint">
        <rdfs:label>Constraint</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Continuation -->

    <owl:Class rdf:about="#Continuation">
        <rdfs:label>Continuation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >A continuation is a syntactic way to define continuations of different branches of an alternative combined fragment. Continuations is intuitively similar to labels representing intermediate points in a flow of control.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ControlFlow -->

    <owl:Class rdf:about="#ControlFlow">
        <rdfs:label>ControlFlow</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityEdge"/>
        <rdfs:comment
            >A control flow is an edge that starts an activity node after the previous one is finished.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ControlNode -->

    <owl:Class rdf:about="#ControlNode">
        <rdfs:label>ControlNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityNode"/>
        <rdfs:comment
            >A control node is an abstract activity node that coordinates flows in an activity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CreateLinkAction -->

    <owl:Class rdf:about="#CreateLinkAction">
        <rdfs:label
            >CreateLinkAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#WriteLinkAction"/>
        <rdfs:comment
            >A create link action is a write link action for creating links.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CreateLinkObjectAction -->

    <owl:Class rdf:about="#CreateLinkObjectAction">
        <rdfs:label
            >CreateLinkObjectAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#CreateLinkAction"/>
        <rdfs:comment
            >A create link object action creates a link object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CreateObjectAction -->

    <owl:Class rdf:about="#CreateObjectAction">
        <rdfs:label
            >CreateObjectAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A create object action is an action that creates an object that conforms to a statically specified classifier and puts it on an output pin at runtime.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#CreationEvent -->

    <owl:Class rdf:about="#CreationEvent">
        <rdfs:label>CreationEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Event"/>
        <rdfs:comment
            >A creation event models the creation of an object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DataStoreNode -->

    <owl:Class rdf:about="#DataStoreNode">
        <rdfs:label>DataStoreNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#CentralBufferNode"/>
        <rdfs:comment
            >A data store node is a central buffer node for non-transient information.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DataType -->

    <owl:Class rdf:about="#DataType">
        <rdfs:label>DataType</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:comment
            >A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DecisionNode -->

    <owl:Class rdf:about="#DecisionNode">
        <rdfs:label>DecisionNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ControlNode"/>
        <rdfs:comment
            >A decision node is a control node that chooses between outgoing flows.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Dependency -->

    <owl:Class rdf:about="#Dependency">
        <rdfs:label>Dependency</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DeployedArtifact -->

    <owl:Class rdf:about="#DeployedArtifact">
        <rdfs:label
            >DeployedArtifact</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A deployed artifact is an artifact or artifact instance that has been deployed to a deployment target.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Deployment -->

    <owl:Class rdf:about="#Deployment">
        <rdfs:label>Deployment</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Dependency"/>
        <rdfs:comment
            >A deployment is the allocation of an artifact or artifact instance to a deployment target.
A component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DeploymentSpecification -->

    <owl:Class rdf:about="#DeploymentSpecification">
        <rdfs:label
            >DeploymentSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Artifact"/>
        <rdfs:comment
            >A deployment specification specifies a set of properties that determine execution parameters of a component artifact that is deployed on a node. A deployment specification can be aimed at a specific type of container. An artifact that reifies or implements deployment specification properties is a deployment descriptor.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DeploymentTarget -->

    <owl:Class rdf:about="#DeploymentTarget">
        <rdfs:label
            >DeploymentTarget</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A deployment target is the location for a deployed artifact.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DestroyLinkAction -->

    <owl:Class rdf:about="#DestroyLinkAction">
        <rdfs:label
            >DestroyLinkAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#WriteLinkAction"/>
        <rdfs:comment
            >A destroy link action is a write link action that destroys links and link objects.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DestroyObjectAction -->

    <owl:Class rdf:about="#DestroyObjectAction">
        <rdfs:label
            >DestroyObjectAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A destroy object action is an action that destroys objects.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DestructionEvent -->

    <owl:Class rdf:about="#DestructionEvent">
        <rdfs:label
            >DestructionEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Event"/>
        <rdfs:comment
            >A destruction event models the destruction of an object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Device -->

    <owl:Class rdf:about="#Device">
        <rdfs:label>Device</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Node"/>
        <rdfs:comment
            >A device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex (i.e., they may consist of other devices).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DirectedRelationship -->

    <owl:Class rdf:about="#DirectedRelationship">
        <rdfs:label
            >DirectedRelationship</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Relationship"/>
        <rdfs:comment
            >A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Duration -->

    <owl:Class rdf:about="#Duration">
        <rdfs:label>Duration</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >Duration defines a value specification that specifies the temporal distance between two time instants.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DurationConstraint -->

    <owl:Class rdf:about="#DurationConstraint">
        <rdfs:label
            >DurationConstraint</rdfs:label>
        <rdfs:subClassOf rdf:resource="#IntervalConstraint"/>
        <rdfs:comment
            >A duration constraint is a constraint that refers to a duration interval.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DurationInterval -->

    <owl:Class rdf:about="#DurationInterval">
        <rdfs:label
            >DurationInterval</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Interval"/>
        <rdfs:comment
            >A duration interval defines the range between two durations.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#DurationObservation -->

    <owl:Class rdf:about="#DurationObservation">
        <rdfs:label
            >DurationObservation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Observation"/>
        <rdfs:comment
            >A duration observation is a reference to a duration during an execution. It points out the element(s) in the model to observe and whether the observations are when this model element is entered or when it is exited.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EAnnotation -->

    <owl:Class rdf:about="#EAnnotation">
        <rdfs:label>EAnnotation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EModelElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EAttribute -->

    <owl:Class rdf:about="#EAttribute">
        <rdfs:label>EAttribute</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EStructuralFeature"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EClass -->

    <owl:Class rdf:about="#EClass">
        <rdfs:label>EClass</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EClassifier"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EClassifier -->

    <owl:Class rdf:about="#EClassifier">
        <rdfs:label>EClassifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ENamedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EDataType -->

    <owl:Class rdf:about="#EDataType">
        <rdfs:label>EDataType</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EClassifier"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EEnum -->

    <owl:Class rdf:about="#EEnum">
        <rdfs:label>EEnum</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EDataType"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EEnumLiteral -->

    <owl:Class rdf:about="#EEnumLiteral">
        <rdfs:label>EEnumLiteral</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ENamedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EFactory -->

    <owl:Class rdf:about="#EFactory">
        <rdfs:label>EFactory</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EModelElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EGenericType -->

    <owl:Class rdf:about="#EGenericType">
        <rdfs:label>EGenericType</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EObject"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EModelElement -->

    <owl:Class rdf:about="#EModelElement">
        <rdfs:label>EModelElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EObject"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ENamedElement -->

    <owl:Class rdf:about="#ENamedElement">
        <rdfs:label>ENamedElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EModelElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EObject -->

    <owl:Class rdf:about="#EObject">
        <rdfs:label>EObject</rdfs:label>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EOperation -->

    <owl:Class rdf:about="#EOperation">
        <rdfs:label>EOperation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ETypedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EPackage -->

    <owl:Class rdf:about="#EPackage">
        <rdfs:label>EPackage</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ENamedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EParameter -->

    <owl:Class rdf:about="#EParameter">
        <rdfs:label>EParameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ETypedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EReference -->

    <owl:Class rdf:about="#EReference">
        <rdfs:label>EReference</rdfs:label>
        <rdfs:subClassOf rdf:resource="#EStructuralFeature"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EStringToStringMapEntry -->

    <owl:Class rdf:about="#EStringToStringMapEntry">
        <rdfs:label
            >EStringToStringMapEntry</rdfs:label>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EStructuralFeature -->

    <owl:Class rdf:about="#EStructuralFeature">
        <rdfs:label
            >EStructuralFeature</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ETypedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ETypeParameter -->

    <owl:Class rdf:about="#ETypeParameter">
        <rdfs:label>ETypeParameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ENamedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ETypedElement -->

    <owl:Class rdf:about="#ETypedElement">
        <rdfs:label>ETypedElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ENamedElement"/>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Element -->

    <owl:Class rdf:about="#Element">
        <rdfs:label>Element</rdfs:label>
        <rdfs:comment
            >An element is a constituent of a model. As such, it has the capability of owning other elements.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ElementImport -->

    <owl:Class rdf:about="#ElementImport">
        <rdfs:label>ElementImport</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EncapsulatedClassifier -->

    <owl:Class rdf:about="#EncapsulatedClassifier">
        <rdfs:label
            >EncapsulatedClassifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuredClassifier"/>
        <rdfs:comment
            >A classifier has the ability to own ports as specific and type checked interaction points.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Enumeration -->

    <owl:Class rdf:about="#Enumeration">
        <rdfs:label>Enumeration</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DataType"/>
        <rdfs:comment
            >An enumeration is a data type whose values are enumerated in the model as enumeration literals.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#EnumerationLiteral -->

    <owl:Class rdf:about="#EnumerationLiteral">
        <rdfs:label
            >EnumerationLiteral</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InstanceSpecification"/>
        <rdfs:comment
            >An enumeration literal is a user-defined data value for an enumeration.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Event -->

    <owl:Class rdf:about="#Event">
        <rdfs:label>Event</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >An event is the specification of some occurrence that may potentially trigger effects by an object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExceptionHandler -->

    <owl:Class rdf:about="#ExceptionHandler">
        <rdfs:label
            >ExceptionHandler</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >An exception handler is an element that specifies a body to execute in case the specified exception occurs during the execution of the protected node.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExecutableNode -->

    <owl:Class rdf:about="#ExecutableNode">
        <rdfs:label>ExecutableNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityNode"/>
        <rdfs:comment
            >An executable node is an abstract class for activity nodes that may be executed. It is used as an attachment point for exception handlers.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExecutionEnvironment -->

    <owl:Class rdf:about="#ExecutionEnvironment">
        <rdfs:label
            >ExecutionEnvironment</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Node"/>
        <rdfs:comment
            >An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExecutionEvent -->

    <owl:Class rdf:about="#ExecutionEvent">
        <rdfs:label>ExecutionEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Event"/>
        <rdfs:comment
            >An execution event models the start or finish of an execution occurrence.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExecutionOccurrenceSpecification -->

    <owl:Class rdf:about="#ExecutionOccurrenceSpecification">
        <rdfs:label
            >ExecutionOccurrenceSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#OccurrenceSpecification"/>
        <rdfs:comment
            >An execution occurrence specification represents moments in time at which actions or behaviors start or finish.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExecutionSpecification -->

    <owl:Class rdf:about="#ExecutionSpecification">
        <rdfs:label
            >ExecutionSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >An execution specification is a specification of the execution of a unit of behavior or action within the lifeline. The duration of an execution specification is represented by two cccurrence specifications, the start occurrence specification and the finish occurrence specification.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExpansionNode -->

    <owl:Class rdf:about="#ExpansionNode">
        <rdfs:label>ExpansionNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ObjectNode"/>
        <rdfs:comment
            >An expansion node is an object node used to indicate a flow across the boundary of an expansion region. A flow into a region contains a collection that is broken into its individual elements inside the region, which is executed once per element. A flow out of a region combines individual elements into a collection for use outside the region.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExpansionRegion -->

    <owl:Class rdf:about="#ExpansionRegion">
        <rdfs:label>ExpansionRegion</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuredActivityNode"/>
        <rdfs:comment
            >An expansion region is a structured activity region that executes multiple times corresponding to elements of an input collection.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Expression -->

    <owl:Class rdf:about="#Expression">
        <rdfs:label>Expression</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.
An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Extend -->

    <owl:Class rdf:about="#Extend">
        <rdfs:label>Extend</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A relationship from an extending use case to an extended use case that specifies how and when the behavior defined in the extending use case can be inserted into the behavior defined in the extended use case.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Extension -->

    <owl:Class rdf:about="#Extension">
        <rdfs:label>Extension</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Association"/>
        <rdfs:comment
            >An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExtensionEnd -->

    <owl:Class rdf:about="#ExtensionEnd">
        <rdfs:label>ExtensionEnd</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Property"/>
        <rdfs:comment
            >An extension end is used to tie an extension to a stereotype when extending a metaclass.
The default multiplicity of an extension end is 0..1.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ExtensionPoint -->

    <owl:Class rdf:about="#ExtensionPoint">
        <rdfs:label>ExtensionPoint</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:comment
            >An extension point identifies a point in the behavior of a use case where that behavior can be extended by the behavior of some other (extending) use case, as specified by an extend relationship.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Feature -->

    <owl:Class rdf:about="#Feature">
        <rdfs:label
            >RedefinableElement</rdfs:label>
        <rdfs:label>Feature</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier.</rdfs:comment>
        <rdfs:comment
            >A feature declares a behavioral or structural characteristic of instances of classifiers.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#FinalNode -->

    <owl:Class rdf:about="#FinalNode">
        <rdfs:label>FinalNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ControlNode"/>
        <rdfs:comment
            >A final node is an abstract control node at which a flow in an activity stops.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#FinalState -->

    <owl:Class rdf:about="#FinalState">
        <rdfs:label>FinalState</rdfs:label>
        <rdfs:subClassOf rdf:resource="#State"/>
        <rdfs:comment
            >A special kind of state signifying that the enclosing region is completed. If the enclosing region is directly contained in a state machine and all other regions in the state machine also are completed, then it means that the entire state machine is completed.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#FlowFinalNode -->

    <owl:Class rdf:about="#FlowFinalNode">
        <rdfs:label>FlowFinalNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#FinalNode"/>
        <rdfs:comment
            >A flow final node is a final node that terminates a flow.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ForkNode -->

    <owl:Class rdf:about="#ForkNode">
        <rdfs:label>ForkNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ControlNode"/>
        <rdfs:comment
            >A fork node is a control node that splits a flow into multiple concurrent flows.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#FunctionBehavior -->

    <owl:Class rdf:about="#FunctionBehavior">
        <rdfs:label
            >FunctionBehavior</rdfs:label>
        <rdfs:subClassOf rdf:resource="#OpaqueBehavior"/>
        <rdfs:comment
            >A function behavior is an opaque behavior that does not access or modify any objects or other external data.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Gate -->

    <owl:Class rdf:about="#Gate">
        <rdfs:label>Gate</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEnd"/>
        <rdfs:comment
            >A gate is a connection point for relating a message outside an interaction fragment with a message inside the interaction fragment.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#GeneralOrdering -->

    <owl:Class rdf:about="#GeneralOrdering">
        <rdfs:label>GeneralOrdering</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A general ordering represents a binary relation between two occurrence specifications, to describe that one occurrence specification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of occurrence cpecifications that may otherwise not have a specified order.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Generalization -->

    <owl:Class rdf:about="#Generalization">
        <rdfs:label>Generalization</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.
A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#GeneralizationSet -->

    <owl:Class rdf:about="#GeneralizationSet">
        <rdfs:label
            >GeneralizationSet</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >A generalization set is a packageable element whose instances define collections of subsets of generalization relationships.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Image -->

    <owl:Class rdf:about="#Image">
        <rdfs:label>Image</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >Physical definition of a graphical image.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Include -->

    <owl:Class rdf:about="#Include">
        <rdfs:label>Include</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >An include relationship defines that a use case contains the behavior defined in another use case.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InformationFlow -->

    <owl:Class rdf:about="#InformationFlow">
        <rdfs:label>InformationFlow</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >An information flow specifies that one or more information items circulates from its sources to its targets. Information flows require some kind of information channel for transmitting information items from the source to the destination. An information channel is represented in various ways depending on the nature of its sources and targets. It may be represented by connectors, links, associations, or even dependencies. For example, if the source and destination are parts in some composite structure such as a collaboration, then the information channel is likely to be represented by a connector between them. Or, if the source and target are objects (which are a kind of instance specification), they may be represented by a link that joins the two, and so on.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InformationItem -->

    <owl:Class rdf:about="#InformationItem">
        <rdfs:label>InformationItem</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:comment
            >An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InitialNode -->

    <owl:Class rdf:about="#InitialNode">
        <rdfs:label>InitialNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ControlNode"/>
        <rdfs:comment
            >An initial node is a control node at which flow starts when the activity is invoked.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InputPin -->

    <owl:Class rdf:about="#InputPin">
        <rdfs:label>InputPin</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Pin"/>
        <rdfs:comment
            >An input pin is a pin that holds input values to be consumed by an action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InstanceSpecification -->

    <owl:Class rdf:about="#InstanceSpecification">
        <rdfs:label
            >InstanceSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DeployedArtifact"/>
        <rdfs:subClassOf rdf:resource="#DeploymentTarget"/>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >An instance specification is a model element that represents an instance in a modeled system.
An instance specification has the capability of being a deployment target in a deployment relationship, in the case that it is an instance of a node. It is also has the capability of being a deployed artifact, if it is an instance of an artifact.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InstanceValue -->

    <owl:Class rdf:about="#InstanceValue">
        <rdfs:label>InstanceValue</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >An instance value is a value specification that identifies an instance.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Interaction -->

    <owl:Class rdf:about="#Interaction">
        <rdfs:label>Interaction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Behavior"/>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >An interaction is a unit of behavior that focuses on the observable exchange of information between connectable elements.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InteractionConstraint -->

    <owl:Class rdf:about="#InteractionConstraint">
        <rdfs:label
            >InteractionConstraint</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Constraint"/>
        <rdfs:comment
            >An interaction constraint is a Boolean expression that guards an operand in a combined fragment.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InteractionFragment -->

    <owl:Class rdf:about="#InteractionFragment">
        <rdfs:label
            >InteractionFragment</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >InteractionFragment is an abstract notion of the most general interaction unit. An interaction fragment is a piece of an interaction. Each interaction fragment is conceptually like an interaction by itself.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InteractionOperand -->

    <owl:Class rdf:about="#InteractionOperand">
        <rdfs:label
            >InteractionOperand</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:comment
            >An interaction operand is contained in a combined fragment. An interaction operand represents one operand of the expression given by the enclosing combined fragment.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InteractionUse -->

    <owl:Class rdf:about="#InteractionUse">
        <rdfs:label>InteractionUse</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >An interaction use refers to an interaction. The interaction use is a shorthand for copying the contents of the referenced interaction where the interaction use is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Interface -->

    <owl:Class rdf:about="#Interface">
        <rdfs:label>Interface</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:comment
            >An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.
Interfaces may include receptions (in addition to operations).
Since an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InterfaceRealization -->

    <owl:Class rdf:about="#InterfaceRealization">
        <rdfs:label
            >InterfaceRealization</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Realization"/>
        <rdfs:comment
            >An interface realization is a specialized realization relationship between a classifier and an interface. This relationship signifies that the realizing classifier conforms to the contract specified by the interface.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InterruptibleActivityRegion -->

    <owl:Class rdf:about="#InterruptibleActivityRegion">
        <rdfs:label
            >InterruptibleActivityRegion</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityGroup"/>
        <rdfs:comment
            >An interruptible activity region is an activity group that supports termination of tokens flowing in the portions of an activity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Interval -->

    <owl:Class rdf:about="#Interval">
        <rdfs:label>Interval</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >An interval defines the range between two value specifications.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#IntervalConstraint -->

    <owl:Class rdf:about="#IntervalConstraint">
        <rdfs:label
            >IntervalConstraint</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Constraint"/>
        <rdfs:comment
            >An interval constraint is a constraint that refers to an interval.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#InvocationAction -->

    <owl:Class rdf:about="#InvocationAction">
        <rdfs:label
            >InvocationAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >InvocationAction is an abstract class for the various actions that invoke behavior.
In addition to targeting an object, invocation actions can also invoke behavioral features on ports from where the invocation requests are routed onwards on links deriving from attached connectors. Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#JoinNode -->

    <owl:Class rdf:about="#JoinNode">
        <rdfs:label>JoinNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ControlNode"/>
        <rdfs:comment
            >A join node is a control node that synchronizes multiple flows.
Join nodes have a Boolean value specification using the names of the incoming edges to specify the conditions under which the join will emit a token.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Lifeline -->

    <owl:Class rdf:about="#Lifeline">
        <rdfs:label>Lifeline</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A lifeline represents an individual participant in the interaction. While parts and structural features may have multiplicity greater than 1, lifelines represent only one interacting entity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LinkAction -->

    <owl:Class rdf:about="#LinkAction">
        <rdfs:label>LinkAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >LinkAction is an abstract class for all link actions that identify their links by the objects at the ends of the links and by the qualifiers at ends of the links.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LinkEndCreationData -->

    <owl:Class rdf:about="#LinkEndCreationData">
        <rdfs:label
            >LinkEndCreationData</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LinkEndData"/>
        <rdfs:comment
            >A link end creation data is not an action. It is an element that identifies links. It identifies one end of a link to be created by a create link action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LinkEndData -->

    <owl:Class rdf:about="#LinkEndData">
        <rdfs:label>LinkEndData</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A link end data is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of a link action. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around a link end data. Each association end is identified separately with an instance of the LinkEndData class.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LinkEndDestructionData -->

    <owl:Class rdf:about="#LinkEndDestructionData">
        <rdfs:label
            >LinkEndDestructionData</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LinkEndData"/>
        <rdfs:comment
            >A link end destruction data is not an action. It is an element that identifies links. It identifies one end of a link to be destroyed by destroy link action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LiteralBoolean -->

    <owl:Class rdf:about="#LiteralBoolean">
        <rdfs:label>LiteralBoolean</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LiteralSpecification"/>
        <rdfs:comment
            >A literal Boolean is a specification of a Boolean value.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LiteralInteger -->

    <owl:Class rdf:about="#LiteralInteger">
        <rdfs:label>LiteralInteger</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LiteralSpecification"/>
        <rdfs:comment
            >A literal integer is a specification of an integer value.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LiteralNull -->

    <owl:Class rdf:about="#LiteralNull">
        <rdfs:label>LiteralNull</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LiteralSpecification"/>
        <rdfs:comment
            >A literal null specifies the lack of a value.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LiteralSpecification -->

    <owl:Class rdf:about="#LiteralSpecification">
        <rdfs:label
            >LiteralSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >A literal specification identifies a literal constant being modeled.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LiteralString -->

    <owl:Class rdf:about="#LiteralString">
        <rdfs:label>LiteralString</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LiteralSpecification"/>
        <rdfs:comment
            >A literal string is a specification of a string value.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LiteralUnlimitedNatural -->

    <owl:Class rdf:about="#LiteralUnlimitedNatural">
        <rdfs:label
            >LiteralUnlimitedNatural</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LiteralSpecification"/>
        <rdfs:comment
            >A literal unlimited natural is a specification of an unlimited natural number.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#LoopNode -->

    <owl:Class rdf:about="#LoopNode">
        <rdfs:label>LoopNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuredActivityNode"/>
        <rdfs:comment
            >A loop node is a structured activity node that represents a loop with setup, test, and body sections.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Manifestation -->

    <owl:Class rdf:about="#Manifestation">
        <rdfs:label>Manifestation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Abstraction"/>
        <rdfs:comment
            >A manifestation is the concrete physical rendering of one or more model elements by an artifact.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#MergeNode -->

    <owl:Class rdf:about="#MergeNode">
        <rdfs:label>MergeNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ControlNode"/>
        <rdfs:comment
            >A merge node is a control node that brings together multiple alternate flows. It is not used to synchronize concurrent flows but to accept one among several alternate flows.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Message -->

    <owl:Class rdf:about="#Message">
        <rdfs:label>Message</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A message defines a particular communication between lifelines of an interaction.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#MessageEnd -->

    <owl:Class rdf:about="#MessageEnd">
        <rdfs:label>MessageEnd</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >MessageEnd is an abstract specialization of NamedElement that represents what can occur at the end of a message.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#MessageEvent -->

    <owl:Class rdf:about="#MessageEvent">
        <rdfs:label>MessageEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Event"/>
        <rdfs:comment
            >A message event specifies the receipt by an object of either a call or a signal.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#MessageOccurrenceSpecification -->

    <owl:Class rdf:about="#MessageOccurrenceSpecification">
        <rdfs:label
            >MessageOccurrenceSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEnd"/>
        <rdfs:subClassOf rdf:resource="#OccurrenceSpecification"/>
        <rdfs:comment
            >A message occurrence specification pecifies the occurrence of message events, such as sending and receiving of signals or invoking or receiving of operation calls. A message occurrence specification is a kind of message end. Messages are generated either by synchronous operation calls or asynchronous signal sends. They are received by the execution of corresponding accept event actions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Model -->

    <owl:Class rdf:about="#Model">
        <rdfs:label>Model</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Package"/>
        <rdfs:comment
            >A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#MultiplicityElement -->

    <owl:Class rdf:about="#MultiplicityElement">
        <rdfs:label
            >MultiplicityElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#NamedElement -->

    <owl:Class rdf:about="#NamedElement">
        <rdfs:label>NamedElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A named element is an element in a model that may have a name.
A named element supports using a string expression to specify its name. This allows names of model elements to involve template parameters. The actual name is evaluated from the string expression only when it is sensible to do so (e.g., when a template is bound).</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Namespace -->

    <owl:Class rdf:about="#Namespace">
        <rdfs:label>Namespace</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A namespace is an element in a model that contains a set of named elements that can be identified by name.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Node -->

    <owl:Class rdf:about="#Node">
        <rdfs:label>Node</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Class"/>
        <rdfs:subClassOf rdf:resource="#DeploymentTarget"/>
        <rdfs:comment
            >A node is computational resource upon which artifacts may be deployed for execution.
Nodes can be interconnected through communication paths to define network structures.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ObjectFlow -->

    <owl:Class rdf:about="#ObjectFlow">
        <rdfs:label>ObjectFlow</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityEdge"/>
        <rdfs:comment
            >An object flow is an activity edge that can have objects or data passing along it.
Object flows have support for multicast/receive, token selection from object nodes, and transformation of tokens.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ObjectNode -->

    <owl:Class rdf:about="#ObjectNode">
        <rdfs:label>ObjectNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ActivityNode"/>
        <rdfs:subClassOf rdf:resource="#TypedElement"/>
        <rdfs:comment
            >An object node is an abstract activity node that is part of defining object flow in an activity.
Object nodes have support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Observation -->

    <owl:Class rdf:about="#Observation">
        <rdfs:label>Observation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >Observation is a superclass of TimeObservation and DurationObservation in order for TimeExpression and Duration to refer to either in a simple way.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#OccurrenceSpecification -->

    <owl:Class rdf:about="#OccurrenceSpecification">
        <rdfs:label
            >OccurrenceSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >An occurrence specification is the basic semantic unit of interactions. The sequences of occurrences specified by them are the meanings of interactions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#OpaqueAction -->

    <owl:Class rdf:about="#OpaqueAction">
        <rdfs:label>OpaqueAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >An action with implementation-specific semantics.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#OpaqueBehavior -->

    <owl:Class rdf:about="#OpaqueBehavior">
        <rdfs:label>OpaqueBehavior</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Behavior"/>
        <rdfs:comment
            >An behavior with implementation-specific semantics.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#OpaqueExpression -->

    <owl:Class rdf:about="#OpaqueExpression">
        <rdfs:label
            >OpaqueExpression</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.
Provides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Operation -->

    <owl:Class rdf:about="#Operation">
        <rdfs:label>Operation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#BehavioralFeature"/>
        <rdfs:subClassOf rdf:resource="#ParameterableElement"/>
        <rdfs:subClassOf rdf:resource="#TemplateableElement"/>
        <rdfs:comment
            >An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.
An operation may invoke both the execution of method behaviors as well as other behavioral responses.
Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#OperationTemplateParameter -->

    <owl:Class rdf:about="#OperationTemplateParameter">
        <rdfs:label
            >OperationTemplateParameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#TemplateParameter"/>
        <rdfs:comment
            >An operation template parameter exposes an operation as a formal parameter for a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#OutputPin -->

    <owl:Class rdf:about="#OutputPin">
        <rdfs:label>OutputPin</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Pin"/>
        <rdfs:comment
            >An output pin is a pin that holds output values produced by an action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Package -->

    <owl:Class rdf:about="#Package">
        <rdfs:label>Package</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:subClassOf rdf:resource="#TemplateableElement"/>
        <rdfs:comment
            >A package is used to group elements, and provides a namespace for the grouped elements.
A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.
Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#PackageImport -->

    <owl:Class rdf:about="#PackageImport">
        <rdfs:label>PackageImport</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#PackageMerge -->

    <owl:Class rdf:about="#PackageMerge">
        <rdfs:label>PackageMerge</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >A package merge defines how the contents of one package are extended by the contents of another package.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#PackageableElement -->

    <owl:Class rdf:about="#PackageableElement">
        <rdfs:label
            >PackageableElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:subClassOf rdf:resource="#ParameterableElement"/>
        <rdfs:comment
            >A packageable element indicates a named element that may be owned directly by a package.
Packageable elements are able to serve as a template parameter.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Parameter -->

    <owl:Class rdf:about="#Parameter">
        <rdfs:label>Parameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ConnectableElement"/>
        <rdfs:subClassOf rdf:resource="#MultiplicityElement"/>
        <rdfs:comment
            >A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.
Parameters are allowed to be treated as connectable elements.
Parameters have support for streaming, exceptions, and parameter sets.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ParameterSet -->

    <owl:Class rdf:about="#ParameterSet">
        <rdfs:label>ParameterSet</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A parameter set is an element that provides alternative sets of inputs or outputs that a behavior may use.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ParameterableElement -->

    <owl:Class rdf:about="#ParameterableElement">
        <rdfs:label
            >ParameterableElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A parameterable element is an element that can be exposed as a formal template parameter for a template, or specified as an actual parameter in a binding of a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#PartDecomposition -->

    <owl:Class rdf:about="#PartDecomposition">
        <rdfs:label
            >PartDecomposition</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionUse"/>
        <rdfs:comment
            >A part decomposition is a description of the internal interactions of one lifeline relative to an interaction.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Pin -->

    <owl:Class rdf:about="#Pin">
        <rdfs:label>Pin</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MultiplicityElement"/>
        <rdfs:subClassOf rdf:resource="#ObjectNode"/>
        <rdfs:comment
            >A pin is a typed element and multiplicity element that provides values to actions and accept result values from them.
A pin is an object node for inputs and outputs to actions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Port -->

    <owl:Class rdf:about="#Port">
        <rdfs:label>Port</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Property"/>
        <rdfs:comment
            >A port is a property of a classifier that specifies a distinct interaction point between that classifier and its environment or between the (behavior of the) classifier and its internal parts. Ports are connected to properties of the classifier by connectors through which requests can be made to invoke the behavioral features of a classifier. A Port may specify the services a classifier provides (offers) to its environment as well as the services that a classifier expects (requires) of its environment.
A port has an associated protocol state machine.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#PrimitiveType -->

    <owl:Class rdf:about="#PrimitiveType">
        <rdfs:label>PrimitiveType</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DataType"/>
        <rdfs:comment
            >A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Profile -->

    <owl:Class rdf:about="#Profile">
        <rdfs:label>Profile</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Package"/>
        <rdfs:comment
            >A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ProfileApplication -->

    <owl:Class rdf:about="#ProfileApplication">
        <rdfs:label
            >ProfileApplication</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >A profile application is used to show which profiles have been applied to a package.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Property -->

    <owl:Class rdf:about="#Property">
        <rdfs:label>Property</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ConnectableElement"/>
        <rdfs:subClassOf rdf:resource="#DeploymentTarget"/>
        <rdfs:subClassOf rdf:resource="#StructuralFeature"/>
        <rdfs:comment
            >A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.
A property represents a set of instances that are owned by a containing classifier instance.
A property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.
Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property&#39;s type.
Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ProtocolConformance -->

    <owl:Class rdf:about="#ProtocolConformance">
        <rdfs:label
            >ProtocolConformance</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines. Protocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ProtocolStateMachine -->

    <owl:Class rdf:about="#ProtocolStateMachine">
        <rdfs:label
            >ProtocolStateMachine</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StateMachine"/>
        <rdfs:comment
            >A protocol state machine is always defined in the context of a classifier. It specifies which operations of the classifier can be called in which state and under which condition, thus specifying the allowed call sequences on the classifier&#39;s operations. A protocol state machine presents the possible and permitted transitions on the instances of its context classifier, together with the operations which carry the transitions. In this manner, an instance lifecycle can be created for a classifier, by specifying the order in which the operations can be activated and the states through which an instance progresses during its existence.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ProtocolTransition -->

    <owl:Class rdf:about="#ProtocolTransition">
        <rdfs:label
            >ProtocolTransition</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Transition"/>
        <rdfs:comment
            >A protocol transition specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Pseudostate -->

    <owl:Class rdf:about="#Pseudostate">
        <rdfs:label>Pseudostate</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Vertex"/>
        <rdfs:comment
            >A pseudostate is an abstraction that encompasses different types of transient vertices in the state machine graph.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#QualifierValue -->

    <owl:Class rdf:about="#QualifierValue">
        <rdfs:label>QualifierValue</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A qualifier value is not an action. It is an element that identifies links. It gives a single qualifier within a link end data specification.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#RaiseExceptionAction -->

    <owl:Class rdf:about="#RaiseExceptionAction">
        <rdfs:label
            >RaiseExceptionAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A raise exception action is an action that causes an exception to occur. The input value becomes the exception object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadExtentAction -->

    <owl:Class rdf:about="#ReadExtentAction">
        <rdfs:label
            >ReadExtentAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A read extent action is an action that retrieves the current instances of a classifier.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadIsClassifiedObjectAction -->

    <owl:Class rdf:about="#ReadIsClassifiedObjectAction">
        <rdfs:label
            >ReadIsClassifiedObjectAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A read is classified object action is an action that determines whether a runtime object is classified by a given classifier.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadLinkAction -->

    <owl:Class rdf:about="#ReadLinkAction">
        <rdfs:label>ReadLinkAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LinkAction"/>
        <rdfs:comment
            >A read link action is a link action that navigates across associations to retrieve objects on one end.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadLinkObjectEndAction -->

    <owl:Class rdf:about="#ReadLinkObjectEndAction">
        <rdfs:label
            >ReadLinkObjectEndAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A read link object end action is an action that retrieves an end object from a link object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadLinkObjectEndQualifierAction -->

    <owl:Class rdf:about="#ReadLinkObjectEndQualifierAction">
        <rdfs:label
            >ReadLinkObjectEndQualifierAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A read link object end qualifier action is an action that retrieves a qualifier end value from a link object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadSelfAction -->

    <owl:Class rdf:about="#ReadSelfAction">
        <rdfs:label>ReadSelfAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A read self action is an action that retrieves the host object of an action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadStructuralFeatureAction -->

    <owl:Class rdf:about="#ReadStructuralFeatureAction">
        <rdfs:label
            >ReadStructuralFeatureAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuralFeatureAction"/>
        <rdfs:comment
            >A read structural feature action is a structural feature action that retrieves the values of a structural feature.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReadVariableAction -->

    <owl:Class rdf:about="#ReadVariableAction">
        <rdfs:label
            >ReadVariableAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#VariableAction"/>
        <rdfs:comment
            >A read variable action is a variable action that retrieves the values of a variable.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Realization -->

    <owl:Class rdf:about="#Realization">
        <rdfs:label>Realization</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Abstraction"/>
        <rdfs:comment
            >Realization is a specialized abstraction relationship between two sets of model elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReceiveOperationEvent -->

    <owl:Class rdf:about="#ReceiveOperationEvent">
        <rdfs:label
            >ReceiveOperationEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A receive operation event specifies the event of receiving an operation invocation for a particular operation by the target entity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReceiveSignalEvent -->

    <owl:Class rdf:about="#ReceiveSignalEvent">
        <rdfs:label
            >ReceiveSignalEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A receive signal event specifies the event of receiving a signal by the target entity.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Reception -->

    <owl:Class rdf:about="#Reception">
        <rdfs:label>Reception</rdfs:label>
        <rdfs:subClassOf rdf:resource="#BehavioralFeature"/>
        <rdfs:comment
            >A reception is a declaration stating that a classifier is prepared to react to the receipt of a signal. A reception designates a signal and specifies the expected behavioral response. The details of handling a signal are specified by the behavior associated with the reception or the classifier itself.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReclassifyObjectAction -->

    <owl:Class rdf:about="#ReclassifyObjectAction">
        <rdfs:label
            >ReclassifyObjectAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A reclassify object action is an action that changes which classifiers classify an object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#RedefinableTemplateSignature -->

    <owl:Class rdf:about="#RedefinableTemplateSignature">
        <rdfs:label
            >RedefinableTemplateSignature</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#TemplateSignature"/>
        <rdfs:comment
            >A redefinable template signature supports the addition of formal template parameters in a specialization of a template classifier.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReduceAction -->

    <owl:Class rdf:about="#ReduceAction">
        <rdfs:label>ReduceAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A reduce action is an action that reduces a collection to a single value by combining the elements of the collection.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Region -->

    <owl:Class rdf:about="#Region">
        <rdfs:label>Region</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:comment
            >A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Relationship -->

    <owl:Class rdf:about="#Relationship">
        <rdfs:label>Relationship</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >Relationship is an abstract concept that specifies some kind of relationship between elements.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#RemoveStructuralFeatureValueAction -->

    <owl:Class rdf:about="#RemoveStructuralFeatureValueAction">
        <rdfs:label
            >RemoveStructuralFeatureValueAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#WriteStructuralFeatureAction"/>
        <rdfs:comment
            >A remove structural feature value action is a write structural feature action that removes values from structural features.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#RemoveVariableValueAction -->

    <owl:Class rdf:about="#RemoveVariableValueAction">
        <rdfs:label
            >RemoveVariableValueAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#WriteVariableAction"/>
        <rdfs:comment
            >A remove variable value action is a write variable action that removes values from variables.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ReplyAction -->

    <owl:Class rdf:about="#ReplyAction">
        <rdfs:label>ReplyAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A reply action is an action that accepts a set of return values and a value containing return information produced by a previous accept call action. The reply action returns the values to the caller of the previous call, completing execution of the call.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#SendObjectAction -->

    <owl:Class rdf:about="#SendObjectAction">
        <rdfs:label
            >SendObjectAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InvocationAction"/>
        <rdfs:comment
            >A send object action is an action that transmits an object to the target object, where it may invoke behavior such as the firing of state machine transitions or the execution of an activity. The value of the object is available to the execution of invoked behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#SendOperationEvent -->

    <owl:Class rdf:about="#SendOperationEvent">
        <rdfs:label
            >SendOperationEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A send operation event models the invocation of an operation call.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#SendSignalAction -->

    <owl:Class rdf:about="#SendSignalAction">
        <rdfs:label
            >SendSignalAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InvocationAction"/>
        <rdfs:comment
            >A send signal action is an action that creates a signal instance from its inputs, and transmits it to the target object, where it may cause the firing of a state machine transition or the execution of an activity. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor. If the input is already a signal instance, use a send object action.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#SendSignalEvent -->

    <owl:Class rdf:about="#SendSignalEvent">
        <rdfs:label>SendSignalEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A send signal event models the sending of a signal.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#SequenceNode -->

    <owl:Class rdf:about="#SequenceNode">
        <rdfs:label>SequenceNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuredActivityNode"/>
        <rdfs:comment
            >A sequence node is a structured activity node that executes its actions in order.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Signal -->

    <owl:Class rdf:about="#Signal">
        <rdfs:label>Signal</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:comment
            >A signal is a specification of send request instances communicated between objects. The receiving object handles the received request instances as specified by its receptions. The data carried by a send request (which was passed to it by the send invocation occurrence that caused that request) are represented as attributes of the signal. A signal is defined independently of the classifiers handling the signal occurrence.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#SignalEvent -->

    <owl:Class rdf:about="#SignalEvent">
        <rdfs:label>SignalEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#MessageEvent"/>
        <rdfs:comment
            >A signal event represents the receipt of an asynchronous signal instance. A signal event may, for example, cause a state machine to trigger a transition.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Slot -->

    <owl:Class rdf:about="#Slot">
        <rdfs:label>Slot</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StartClassifierBehaviorAction -->

    <owl:Class rdf:about="#StartClassifierBehaviorAction">
        <rdfs:label
            >StartClassifierBehaviorAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A start classifier behavior action is an action that starts the classifier behavior of the input.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StartObjectBehaviorAction -->

    <owl:Class rdf:about="#StartObjectBehaviorAction">
        <rdfs:label
            >StartObjectBehaviorAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#CallAction"/>
        <rdfs:comment
            >StartObjectBehaviorAction is an action that starts the execution either of a directly instantiated behavior or of the classifier behavior of an object. Argument values may be supplied for the input parameters of the behavior. If the behavior is invoked synchronously, then output values may be obtained for output parameters.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#State -->

    <owl:Class rdf:about="#State">
        <rdfs:label>State</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:subClassOf rdf:resource="#Vertex"/>
        <rdfs:comment
            >A state models a situation during which some (usually implicit) invariant condition holds.
The states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StateInvariant -->

    <owl:Class rdf:about="#StateInvariant">
        <rdfs:label>StateInvariant</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InteractionFragment"/>
        <rdfs:comment
            >A state invariant is a runtime constraint on the participants of the interaction. It may be used to specify a variety of different kinds of constraints, such as values of attributes or variables, internal or external states, and so on. A state invariant is an interaction fragment and it is placed on a lifeline.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StateMachine -->

    <owl:Class rdf:about="#StateMachine">
        <rdfs:label>StateMachine</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Behavior"/>
        <rdfs:comment
            >State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are triggered by the dispatching of series of (event) occurrences. During this traversal, the state machine executes a series of activities associated with various elements of the state machine.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Stereotype -->

    <owl:Class rdf:about="#Stereotype">
        <rdfs:label>Stereotype</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Class"/>
        <rdfs:comment
            >A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StringExpression -->

    <owl:Class rdf:about="#StringExpression">
        <rdfs:label
            >StringExpression</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Expression"/>
        <rdfs:subClassOf rdf:resource="#TemplateableElement"/>
        <rdfs:comment
            >An expression that specifies a string value that is derived by concatenating a set of sub string expressions, some of which might be template parameters.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StructuralFeature -->

    <owl:Class rdf:about="#StructuralFeature">
        <rdfs:label
            >StructuralFeature</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#MultiplicityElement"/>
        <rdfs:subClassOf rdf:resource="#TypedElement"/>
        <rdfs:comment
            >A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.
By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StructuralFeatureAction -->

    <owl:Class rdf:about="#StructuralFeatureAction">
        <rdfs:label
            >StructuralFeatureAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >StructuralFeatureAction is an abstract class for all structural feature actions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StructuredActivityNode -->

    <owl:Class rdf:about="#StructuredActivityNode">
        <rdfs:label
            >StructuredActivityNode</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:subClassOf rdf:resource="#ActivityGroup"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:comment
            >A structured activity node is an executable activity node that may have an expansion into subordinate nodes as an activity group. The subordinate nodes must belong to only one structured activity node, although they may be nested.
Because of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is &quot;isolated,&quot; then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions that would result in accessing such objects are required to have their execution deferred until the completion of the node.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#StructuredClassifier -->

    <owl:Class rdf:about="#StructuredClassifier">
        <rdfs:label
            >StructuredClassifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Classifier"/>
        <rdfs:comment
            >A structured classifier is an abstract metaclass that represents any classifier whose behavior can be fully or partly described by the collaboration of owned or referenced instances.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Substitution -->

    <owl:Class rdf:about="#Substitution">
        <rdfs:label>Substitution</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Realization"/>
        <rdfs:comment
            >A substitution is a relationship between two classifiers signifies that the substituting classifier complies with the contract specified by the contract classifier. This implies that instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TemplateBinding -->

    <owl:Class rdf:about="#TemplateBinding">
        <rdfs:label>TemplateBinding</rdfs:label>
        <rdfs:subClassOf rdf:resource="#DirectedRelationship"/>
        <rdfs:comment
            >A template binding represents a relationship between a templateable element and a template. A template binding specifies the substitutions of actual parameters for the formal parameters of the template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TemplateParameter -->

    <owl:Class rdf:about="#TemplateParameter">
        <rdfs:label
            >TemplateParameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A template parameter exposes a parameterable element as a formal template parameter of a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TemplateParameterSubstitution -->

    <owl:Class rdf:about="#TemplateParameterSubstitution">
        <rdfs:label
            >TemplateParameterSubstitution</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A template parameter substitution relates the actual parameter to a formal template parameter as part of a template binding.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TemplateSignature -->

    <owl:Class rdf:about="#TemplateSignature">
        <rdfs:label
            >TemplateSignature</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A template signature bundles the set of formal template parameters for a templated element.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TemplateableElement -->

    <owl:Class rdf:about="#TemplateableElement">
        <rdfs:label
            >TemplateableElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Element"/>
        <rdfs:comment
            >A templateable element is an element that can optionally be defined as a template and bound to other templates.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TestIdentityAction -->

    <owl:Class rdf:about="#TestIdentityAction">
        <rdfs:label
            >TestIdentityAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A test identity action is an action that tests if two values are identical objects.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TimeConstraint -->

    <owl:Class rdf:about="#TimeConstraint">
        <rdfs:label>TimeConstraint</rdfs:label>
        <rdfs:subClassOf rdf:resource="#IntervalConstraint"/>
        <rdfs:comment
            >A time constraint is a constraint that refers to a time interval.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TimeEvent -->

    <owl:Class rdf:about="#TimeEvent">
        <rdfs:label>TimeEvent</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Event"/>
        <rdfs:comment
            >A time event specifies a point in time. At the specified time, the event occurs.
A time event can be defined relative to entering the current state of the executing state machine.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TimeExpression -->

    <owl:Class rdf:about="#TimeExpression">
        <rdfs:label>TimeExpression</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ValueSpecification"/>
        <rdfs:comment
            >A time expression defines a value specification that represents a time value.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TimeInterval -->

    <owl:Class rdf:about="#TimeInterval">
        <rdfs:label>TimeInterval</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Interval"/>
        <rdfs:comment
            >A time interval defines the range between two time expressions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TimeObservation -->

    <owl:Class rdf:about="#TimeObservation">
        <rdfs:label>TimeObservation</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Observation"/>
        <rdfs:comment
            >A time observation is a reference to a time instant during an execution. It points out the element in the model to observe and whether the observation is when this model element is entered or when it is exited.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Transition -->

    <owl:Class rdf:about="#Transition">
        <rdfs:label>Transition</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Feature"/>
        <rdfs:subClassOf rdf:resource="#Namespace"/>
        <rdfs:comment
            >A transition is a directed relationship between a source vertex and a target vertex. It may be part of a compound transition, which takes the state machine from one state configuration to another, representing the complete response of the state machine to an occurrence of an event of a particular type.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Trigger -->

    <owl:Class rdf:about="#Trigger">
        <rdfs:label>Trigger</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A trigger relates an event to a behavior that may affect an instance of the classifier.
A trigger specification may be qualified by the port on which the event occurred.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Type -->

    <owl:Class rdf:about="#Type">
        <rdfs:label>Type</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:comment
            >A type is a named element that is used as the type for a typed element. A type can be contained in a package.
A type constrains the values represented by a typed element.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#TypedElement -->

    <owl:Class rdf:about="#TypedElement">
        <rdfs:label>TypedElement</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A typed element is a kind of named element that represents an element with a type.
A typed element has a type.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#UnmarshallAction -->

    <owl:Class rdf:about="#UnmarshallAction">
        <rdfs:label
            >UnmarshallAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >An unmarshall action is an action that breaks an object of a known type into outputs each of which is equal to a value from a structural feature of the object.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Usage -->

    <owl:Class rdf:about="#Usage">
        <rdfs:label>Usage</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Dependency"/>
        <rdfs:comment
            >A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. A usage is a dependency in which the client requires the presence of the supplier.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#UseCase -->

    <owl:Class rdf:about="#UseCase">
        <rdfs:label>UseCase</rdfs:label>
        <rdfs:subClassOf rdf:resource="#BehavioredClassifier"/>
        <rdfs:comment
            >A use case is the specification of a set of actions performed by a system, which yields an observable result that is, typically, of value for one or more actors or other stakeholders of the system.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ValuePin -->

    <owl:Class rdf:about="#ValuePin">
        <rdfs:label>ValuePin</rdfs:label>
        <rdfs:subClassOf rdf:resource="#InputPin"/>
        <rdfs:comment
            >A value pin is an input pin that provides a value by evaluating a value specification.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ValueSpecification -->

    <owl:Class rdf:about="#ValueSpecification">
        <rdfs:label
            >ValueSpecification</rdfs:label>
        <rdfs:subClassOf rdf:resource="#PackageableElement"/>
        <rdfs:subClassOf rdf:resource="#TypedElement"/>
        <rdfs:comment
            >A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.
ValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#ValueSpecificationAction -->

    <owl:Class rdf:about="#ValueSpecificationAction">
        <rdfs:label
            >ValueSpecificationAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >A value specification action is an action that evaluates a value specification.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Variable -->

    <owl:Class rdf:about="#Variable">
        <rdfs:label>Variable</rdfs:label>
        <rdfs:subClassOf rdf:resource="#ConnectableElement"/>
        <rdfs:subClassOf rdf:resource="#MultiplicityElement"/>
        <rdfs:comment
            >Variables are elements for passing data between actions indirectly. A local variable stores values shared by the actions within a structured activity group but not accessible outside it. The output of an action may be written to a variable and read for the input to a subsequent action, which is effectively an indirect data flow path. Because there is no predefined relationship between actions that read and write variables, these actions must be sequenced by control flows to prevent race conditions that may occur between actions that read or write the same variable.
A variable is considered a connectable element.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#VariableAction -->

    <owl:Class rdf:about="#VariableAction">
        <rdfs:label>VariableAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#Action"/>
        <rdfs:comment
            >VariableAction is an abstract class for actions that operate on a statically specified variable.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#Vertex -->

    <owl:Class rdf:about="#Vertex">
        <rdfs:label>Vertex</rdfs:label>
        <rdfs:subClassOf rdf:resource="#NamedElement"/>
        <rdfs:comment
            >A vertex is an abstraction of a node in a state machine graph. In general, it can be the source or destination of any number of transitions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#WriteLinkAction -->

    <owl:Class rdf:about="#WriteLinkAction">
        <rdfs:label>WriteLinkAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#LinkAction"/>
        <rdfs:comment
            >WriteLinkAction is an abstract class for link actions that create and destroy links.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#WriteStructuralFeatureAction -->

    <owl:Class rdf:about="#WriteStructuralFeatureAction">
        <rdfs:label
            >WriteStructuralFeatureAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#StructuralFeatureAction"/>
        <rdfs:comment
            >WriteStructuralFeatureAction is an abstract class for structural feature actions that change structural feature values.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.agilebirds.com/openflexo/ontologies/UML/UML2.owl#WriteVariableAction -->

    <owl:Class rdf:about="#WriteVariableAction">
        <rdfs:label
            >WriteVariableAction</rdfs:label>
        <rdfs:subClassOf rdf:resource="#VariableAction"/>
        <rdfs:comment
            >WriteVariableAction is an abstract class for variable actions that change variable values.</rdfs:comment>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 2.2.1.1138) http://owlapi.sourceforge.net -->

