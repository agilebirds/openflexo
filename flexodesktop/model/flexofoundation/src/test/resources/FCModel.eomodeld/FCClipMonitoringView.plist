{
    attributes = (
        {columnName = "VIDEO_SUBTITLE"; name = subTitle; prototypeName = str2000; }, 
        {columnName = "CHANNEL_ID"; name = channelID; prototypeName = int; }, 
        {columnName = "CHANNEL_NAME"; name = channelName; prototypeName = str100; }, 
        {
            columnName = "VIDEO_CREATION_DATE"; 
            name = creationDate; 
            prototypeName = date; 
        }, 
        {columnName = "VIDEO_PRODUCERS"; name = producers; prototypeName = str2000; }, 
        {columnName = "VIDEO_SUBJECT"; name = subject; prototypeName = str2000; }, 
        {columnName = "VIDEO_SUMMARY"; name = summary; prototypeName = clob1000000; }, 
        {columnName = "VIDEO_TITLE"; name = title; prototypeName = str2000; }, 
        {columnName = "VIDEO_UPDATE_DATE"; name = updateDate; prototypeName = date; }, 
        {columnName = "VIDEO_FILE_ID"; name = videoFileID; prototypeName = str200; }, 
        {columnName = "VIDEO_ID"; name = videoID; prototypeName = int; }, 
        {columnName = "VIDEO_LENGTH"; name = videoLength; prototypeName = str10; }, 
        {
            columnName = "VIDEO_ONLINE_DATE"; 
            name = videoOnLineDate; 
            prototypeName = date; 
        }, 
        {
            columnName = "VIDEO_SNAPSHOT_ID"; 
            name = videoSnapshotID; 
            prototypeName = str200; 
        }, 
        {columnName = "VIDEO_STATUS"; name = videoStatus; prototypeName = str10; }, 
        {
            columnName = "VIDEO_UNIQUE_REF"; 
            name = videoUniqueRef; 
            prototypeName = str1000; 
        }, 
        {columnName = "VIEW_COUNT"; name = viewCount; prototypeName = int; }
    ); 
    className = FCClipMonitoringView; 
    classProperties = (
        videoID, 
        channelID, 
        title, 
        subject, 
        summary, 
        channelName, 
        producers, 
        updateDate, 
        viewCount, 
        video, 
        subTitle
    ); 
    externalName = "FC_CLIP_MONITORING"; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {
        "_clientClassPropertyNames" = (
            videoID, 
            channelID, 
            title, 
            subject, 
            summary, 
            channelName, 
            producers, 
            updateDate, 
            viewCount, 
            video
        ); 
    }; 
    name = FCClipMonitoringView; 
    relationships = (
        {
            destination = DLRVideo; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = videoID; sourceAttribute = videoID; }); 
            name = video; 
        }
    ); 
}
