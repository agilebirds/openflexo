{
    attributes = (
        {
            allowsNull = N; 
            columnName = "VAP_ACCESS_POINT_ID"; 
            name = accessPointID; 
            prototypeName = id; 
        }, 
        {columnName = "VAP_CREATION_DATE"; name = creationDate; prototypeName = date; }, 
        {columnName = "VAP_INDEX"; name = index; prototypeName = int; }, 
        {columnName = "VAP_STATUS"; name = status; prototypeName = str10; }, 
        {columnName = "VAP_UPDATE_DATE"; name = updateDate; prototypeName = date; }, 
        {columnName = "VAP_UPDATOR"; name = updator; prototypeName = str100; }, 
        {
            allowsNull = N; 
            columnName = "VAP_VIDEO_ID"; 
            name = videoID; 
            prototypeName = id; 
        }
    ); 
    className = FCPubliVideoAccessPoint; 
    classProperties = (
        videoID, 
        accessPointID, 
        index, 
        status, 
        creationDate, 
        updateDate, 
        updator, 
        accessPoint, 
        video
    ); 
    externalName = "FC_PUBLI_VIDEO_ACCESS_POINT"; 
    fetchSpecificationDictionary = {}; 
    name = FCPubliVideoAccessPoint; 
    primaryKeyAttributes = (videoID, accessPointID); 
    relationships = (
        {
            destination = FCAccessPoint; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = accessPointID; sourceAttribute = accessPointID; }); 
            name = accessPoint; 
        }, 
        {
            destination = DLRVideo; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = videoID; sourceAttribute = videoID; }); 
            name = video; 
        }
    ); 
}
