{
    attributes = (
        {
            allowsNull = N; 
            columnName = CREATIONDATE; 
            name = creationDate; 
            prototypeName = date; 
        }, 
        {
            allowsNull = N; 
            columnName = CREATORLOGIN; 
            name = creator; 
            prototypeName = str100; 
        }, 
        {columnName = DESCRIPTION; name = description; prototypeName = str2000; }, 
        {columnName = FATHERFOLDERID; name = fatherFolderID; prototypeName = id; }, 
        {columnName = FOLDERSTATUS; name = status; prototypeName = str10; }, 
        {allowsNull = N; columnName = FOLDERID; name = folderID; prototypeName = id; }, 
        {allowsNull = N; columnName = NAME; name = name; prototypeName = str100; }
    ); 
    className = DLRFolder; 
    classProperties = (
        folderID, 
        files, 
        name, 
        creationDate, 
        creator, 
        description, 
        fatherFolderID, 
        folder, 
        subFolders, 
        status
    ); 
    externalName = DLRFolder; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {"_clientClassPropertyNames" = (); }; 
    name = DLRFolder; 
    primaryKeyAttributes = (folderID); 
    relationships = (
        {
            deleteRule = EODeleteRuleCascade; 
            destination = DLRFile; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = folderID; sourceAttribute = folderID; }); 
            name = files; 
        }, 
        {
            destination = DLRFolder; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = folderID; sourceAttribute = fatherFolderID; }); 
            name = folder; 
        }, 
        {
            destination = DLRFolder; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = fatherFolderID; sourceAttribute = folderID; }); 
            name = subFolders; 
        }
    ); 
}
