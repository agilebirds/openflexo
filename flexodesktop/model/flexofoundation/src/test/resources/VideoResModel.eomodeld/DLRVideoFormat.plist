{
    attributes = (
        {columnName = desc; name = desc; prototypeName = str2000; }, 
        {columnName = language; name = language; prototypeName = str10; }, 
        {columnName = size; name = size; prototypeName = str10; }, 
        {columnName = transcriptFileID; name = transcriptFileID; prototypeName = str200; }, 
        {columnName = type; name = type; prototypeName = str50; }, 
        {columnName = videoFileID; name = videoFileID; prototypeName = str200; }, 
        {
            allowsNull = N; 
            columnName = videoFormatID; 
            name = videoFormatID; 
            prototypeName = id; 
        }, 
        {allowsNull = N; columnName = videoID; name = videoID; prototypeName = id; }
    ); 
    className = DLRVideoFormat; 
    classProperties = (
        language, 
        videoFileID, 
        desc, 
        type, 
        videoID, 
        videoFormatID, 
        videoFile, 
        transcriptFileID, 
        transcriptFile, 
        size, 
        video
    ); 
    externalName = DLRVideoFormat; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {
        "_clientClassPropertyNames" = (
            language, 
            videoFileID, 
            desc, 
            type, 
            videoID, 
            videoFormatID, 
            transcriptFileID, 
            video
        ); 
    }; 
    name = DLRVideoFormat; 
    primaryKeyAttributes = (videoFormatID); 
    relationships = (
        {
            deleteRule = EODeleteRuleNullify; 
            destination = DLRVideo; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = videoID; sourceAttribute = videoID; }); 
            name = video; 
        }
    ); 
}
