{
    attributes = (
        {columnName = seeVideoID; name = seeVideoID; prototypeName = id; }, 
        {columnName = videoID; name = videoID; prototypeName = id; }
    ); 
    className = MNVideoVideo; 
    externalName = MNVideoVideo; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {"_clientClassPropertyNames" = (Attribute, Attribute1); }; 
    name = MNVideoVideo; 
    primaryKeyAttributes = (videoID, seeVideoID); 
    relationships = (
        {
            destination = DLRVideo; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = videoID; sourceAttribute = seeVideoID; }); 
            name = seeVideo; 
        },
        {
            destination = DLRVideo; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = videoID; sourceAttribute = videoID; }); 
            name = seenByVideo; 
        }
    ); 
}
