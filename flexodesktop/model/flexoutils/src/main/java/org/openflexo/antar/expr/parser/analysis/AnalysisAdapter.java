/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.antar.expr.parser.analysis;

import java.util.*;
import org.openflexo.antar.expr.parser.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAExpr2Expr(AExpr2Expr node)
    {
        defaultCase(node);
    }

    public void caseACondExprExpr(ACondExprExpr node)
    {
        defaultCase(node);
    }

    public void caseAEqExprExpr(AEqExprExpr node)
    {
        defaultCase(node);
    }

    public void caseAEq2ExprExpr(AEq2ExprExpr node)
    {
        defaultCase(node);
    }

    public void caseANeqExprExpr(ANeqExprExpr node)
    {
        defaultCase(node);
    }

    public void caseALtExprExpr(ALtExprExpr node)
    {
        defaultCase(node);
    }

    public void caseAGtExprExpr(AGtExprExpr node)
    {
        defaultCase(node);
    }

    public void caseALteExprExpr(ALteExprExpr node)
    {
        defaultCase(node);
    }

    public void caseAGteExprExpr(AGteExprExpr node)
    {
        defaultCase(node);
    }

    public void caseAExpr3Expr2(AExpr3Expr2 node)
    {
        defaultCase(node);
    }

    public void caseAOrExprExpr2(AOrExprExpr2 node)
    {
        defaultCase(node);
    }

    public void caseAOr2ExprExpr2(AOr2ExprExpr2 node)
    {
        defaultCase(node);
    }

    public void caseAAddExprExpr2(AAddExprExpr2 node)
    {
        defaultCase(node);
    }

    public void caseASubExprExpr2(ASubExprExpr2 node)
    {
        defaultCase(node);
    }

    public void caseATermExpr3(ATermExpr3 node)
    {
        defaultCase(node);
    }

    public void caseAAndExprExpr3(AAndExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseAAnd2ExprExpr3(AAnd2ExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseAMultExprExpr3(AMultExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseADivExprExpr3(ADivExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseAModExprExpr3(AModExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseAPowerExprExpr3(APowerExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseANotExprExpr3(ANotExprExpr3 node)
    {
        defaultCase(node);
    }

    public void caseABasicTypeReference(ABasicTypeReference node)
    {
        defaultCase(node);
    }

    public void caseAParameteredTypeReference(AParameteredTypeReference node)
    {
        defaultCase(node);
    }

    public void caseAIdentifierTypeReferencePath(AIdentifierTypeReferencePath node)
    {
        defaultCase(node);
    }

    public void caseATailTypeReferencePath(ATailTypeReferencePath node)
    {
        defaultCase(node);
    }

    public void caseATypeReferenceArgList(ATypeReferenceArgList node)
    {
        defaultCase(node);
    }

    public void caseATypeReferenceAdditionalArg(ATypeReferenceAdditionalArg node)
    {
        defaultCase(node);
    }

    public void caseACall(ACall node)
    {
        defaultCase(node);
    }

    public void caseAEmptyListArgList(AEmptyListArgList node)
    {
        defaultCase(node);
    }

    public void caseANonEmptyListArgList(ANonEmptyListArgList node)
    {
        defaultCase(node);
    }

    public void caseAAdditionalArg(AAdditionalArg node)
    {
        defaultCase(node);
    }

    public void caseAIdentifierBinding(AIdentifierBinding node)
    {
        defaultCase(node);
    }

    public void caseACallBinding(ACallBinding node)
    {
        defaultCase(node);
    }

    public void caseATail1Binding(ATail1Binding node)
    {
        defaultCase(node);
    }

    public void caseATail2Binding(ATail2Binding node)
    {
        defaultCase(node);
    }

    public void caseACosFuncFunction(ACosFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseAAcosFuncFunction(AAcosFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseASinFuncFunction(ASinFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseAAsinFuncFunction(AAsinFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseATanFuncFunction(ATanFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseAAtanFuncFunction(AAtanFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseAExpFuncFunction(AExpFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseALogFuncFunction(ALogFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseASqrtFuncFunction(ASqrtFuncFunction node)
    {
        defaultCase(node);
    }

    public void caseATrueConstant(ATrueConstant node)
    {
        defaultCase(node);
    }

    public void caseAFalseConstant(AFalseConstant node)
    {
        defaultCase(node);
    }

    public void caseANullConstant(ANullConstant node)
    {
        defaultCase(node);
    }

    public void caseAPiConstant(APiConstant node)
    {
        defaultCase(node);
    }

    public void caseADecimalNumberNumber(ADecimalNumberNumber node)
    {
        defaultCase(node);
    }

    public void caseAPreciseNumberNumber(APreciseNumberNumber node)
    {
        defaultCase(node);
    }

    public void caseAScientificNotationNumberNumber(AScientificNotationNumberNumber node)
    {
        defaultCase(node);
    }

    public void caseAConstantNumber(AConstantNumber node)
    {
        defaultCase(node);
    }

    public void caseANegativeTerm(ANegativeTerm node)
    {
        defaultCase(node);
    }

    public void caseANumberTerm(ANumberTerm node)
    {
        defaultCase(node);
    }

    public void caseAStringValueTerm(AStringValueTerm node)
    {
        defaultCase(node);
    }

    public void caseACharsValueTerm(ACharsValueTerm node)
    {
        defaultCase(node);
    }

    public void caseAFunctionTerm(AFunctionTerm node)
    {
        defaultCase(node);
    }

    public void caseABindingTerm(ABindingTerm node)
    {
        defaultCase(node);
    }

    public void caseAExprTerm(AExprTerm node)
    {
        defaultCase(node);
    }

    public void caseACastTerm(ACastTerm node)
    {
        defaultCase(node);
    }

    public void caseTDollar(TDollar node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTPower(TPower node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTLte(TLte node)
    {
        defaultCase(node);
    }

    public void caseTGte(TGte node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTAnd2(TAnd2 node)
    {
        defaultCase(node);
    }

    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    public void caseTOr2(TOr2 node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTEq2(TEq2 node)
    {
        defaultCase(node);
    }

    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTIfToken(TIfToken node)
    {
        defaultCase(node);
    }

    public void caseTElseToken(TElseToken node)
    {
        defaultCase(node);
    }

    public void caseTPi(TPi node)
    {
        defaultCase(node);
    }

    public void caseTCos(TCos node)
    {
        defaultCase(node);
    }

    public void caseTAcos(TAcos node)
    {
        defaultCase(node);
    }

    public void caseTSin(TSin node)
    {
        defaultCase(node);
    }

    public void caseTAsin(TAsin node)
    {
        defaultCase(node);
    }

    public void caseTTan(TTan node)
    {
        defaultCase(node);
    }

    public void caseTAtan(TAtan node)
    {
        defaultCase(node);
    }

    public void caseTLog(TLog node)
    {
        defaultCase(node);
    }

    public void caseTExp(TExp node)
    {
        defaultCase(node);
    }

    public void caseTSqrt(TSqrt node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    public void caseTDecimalNumber(TDecimalNumber node)
    {
        defaultCase(node);
    }

    public void caseTPreciseNumber(TPreciseNumber node)
    {
        defaultCase(node);
    }

    public void caseTScientificNotationNumber(TScientificNotationNumber node)
    {
        defaultCase(node);
    }

    public void caseTStringValue(TStringValue node)
    {
        defaultCase(node);
    }

    public void caseTCharsValue(TCharsValue node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
