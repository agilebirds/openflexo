#**
* Context contains the following keys
* - project: the current project (class FlexoProject)
* - projectGenerator: the current Project Generator (class ProjectDocGenerator)
* - generator: the current generator (DefinitionsDocGenerator)
* - repository: the current repository for which we generate the doc (DGRepository)
* - level: the level to use in title.
* - objet: the view to generate
*#
#macro(related $returned $origin $targetEPName)
    #set($links = $view.getEPInstancesWithPropertyEqualsTo("Link", "inRelationWithStatement.subject", $origin.evaluate("individual")))
    #set($_new = $generator.getNewList())
    #foreach($link in $links)
        #void($_new.addAll($view.getEPInstancesWithPropertyEqualsTo($targetEPName, "individual", $link.evaluate("inRelationWithStatement.object"))))
    #end
    #foreach($n in $_new)
        #if($n && !$returned.contains($n))
            #void($returned.add($n))    
            #related($returned $n $targetEPName)
        #end
    #end
#end
#macro(reverseRelated $returned $target $originEPName)
    #set($links = $view.getEPInstancesWithPropertyEqualsTo("Link", "inRelationWithStatement.object", $target.evaluate("individual")))
    #set($_new = $generator.getNewList())
    #foreach($link in $links)
        #void($_new.addAll($view.getEPInstancesWithPropertyEqualsTo($originEPName, "individual", $link.evaluate("inRelationWithStatement.subject"))))
    #end
    #foreach($n in $_new)
        #if($n && !$returned.contains($n))
            #void($returned.add($n))
            #reverseRelated($returned $n $originEPName)
        #end
    #end
#end

#set($view = $object)
#if(${view.getView()})
    #set($view = ${view.getView()})
#end
#set($subLevel = ${level} + 1)
#if($view)
    #if($view.getViewPoint().getURI() == "http://www.agilebirds.com/openflexo/ViewPoints/BDN/NewBDN.owl")
    	#parse($generator.getTemplatePath("bdn.xml.vm"))
    #elseif($view.getViewPoint().getURI() == "http://www.agilebirds.com/openflexo/ViewPoints/ScopeDefinition/OrganizationalChart.owl")
    	#parse($generator.getTemplatePath("chart.xml.vm"))
    #else
	    ${generator.log("Rendering view")}
	    ${generator.logO($view)}
	    #set($heading = "")
	    #foreach($s in ${stringUtils.splitByCharacterTypeCamelCase(${view.getViewPoint().getName()})})
	        #set($heading = "$heading $s")
	    #end
	    #set($heading = $heading.trim())
	    <w:p>
	        <w:pPr>
	            <w:keepNext/>
	            <w:pStyle w:val="Heading${level}"/>
	        </w:pPr>
	        <w:r>
	            <w:t xml:space="preserve">#escape("$heading: ${view.getName()}")</w:t>
	        </w:r>
	    </w:p>
	    #description($view)
	    #renderScreenshotForObject($view)
	    #foreach($pattern in ${view.getViewPoint().getEditionPatterns()})
	        #set($heading ="")
	        #set($labelPath = ${pattern.getPrimaryRepresentationRole().getLabel().toString()})
	        #set($headers = $generator.getNewList())
	        #if($labelPath)
	            #void($headers.add(""))
	        #end
	        #set($rows = $generator.getNewList())
	        #foreach($s in ${stringUtils.splitByCharacterTypeCamelCase(${pattern.getName()})})
	            #set($heading = "$heading $s")
	        #end
	        #set($heading = $heading.trim())
	        #set($entries = $generator.getNewList())
	        #foreach($entry in ${pattern.getInspector().getEntries()})
	            #if(!${entry.getName().toLowerCase().contains("uri")} && !${entry.getLabel().toLowerCase().contains("uri")} && (${entry.getWidgetName()}=="TextField" || ${entry.getWidgetName()}=="TextArea"))
	                 #void(${entries.add($entry)})
	                 #set($label = ${pattern.getViewPoint().getLocalizedDictionary().getLocalizedForKeyAndLanguage($entry.getLabel(), ${Language.ENGLISH})})
	                 #if(!$label)
	                    #set($label = $entry.getLabel())
	                 #end
	                 #void($headers.add("#escape($label)"))
	            #end
	        #end
	        
	        #set($tag = "w:p")
	        #set($epis = $view.getEPInstances($pattern))
	        #if($epis.size()>0)
	                #foreach($epi in $epis)
	                  #set($row = $generator.getNewList())
	                  #if($labelPath)
	                      #set($label = "#renderEPIWithTag($epi $labelPath $tag)")
	                      #void($row.add($label))
	                  #end
	                  #foreach($entry in $entries)
	                      #set($path = ${entry.getData().toString()})
	                      #void($row.add("#renderEPIWithTag($epi $path $tag)"))
	                  #end
	                  #void($rows.add($row))
	                #end
	                <w:p>
	                    <w:pPr>
	                        <w:keepNext/>
	                        <w:pStyle w:val="Heading${subLevel}"/>
	                    </w:pPr>
	                    <w:r>
	                        <w:t>#escape($heading)</w:t>
	                    </w:r>
	                </w:p>
	            #if($headers.size()>0)
	                #renderDocxTable2($headers $rows $falseValue)
	            #else
	                <w:p>
	                    <w:r>
	                        <w:t>#escape("No relevant information to display.")</w:t>
	                    </w:r>
	                </w:p>
	            #end
	        #end
        #end
    #end
#end
