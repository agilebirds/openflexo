#macro(pageParameters $_component)
@single
#foreach($bd in $_component.getBindingDefinitions())
    #if( ${bd.getType().isEOEntity()})
        , #if($generator.isPrototype()) Object #else EOGlobalID #end ${bd.getVariableName()}GlobalId
    #else
        , $bd.getType().getBaseEntity().getEntityClassName() $bd.getVariableName()
    #end
#end
@end@
#end

#macro(pageParametersCall $_component)
@single
    #foreach($bd in $_component.getBindingDefinitions())
        #if(${bd.getType().isEOEntity()})
            #if($generator.isPrototype())
                , ${bd.getType().getDefaultValue()}
            #else
                , ${bd.getVariableName()}GlobalId
            #end
        #else
            , $bd.getVariableName()
        #end
    #end
@end@
#end

#macro(findNextPageTab $_actionNode $_operationComponentInstance)
    #if($_actionNode.getTabComponent() && $_operationComponentInstance.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent($_actionNode.getTabComponent()))
        #set($_tabWidget = $_operationComponentInstance.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent($_actionNode.getTabComponent()))
    #else ##There is no tab specified on the action... let's take a look at next operation preferred tab
        #if(${_operationComponentInstance.getOperationNode().getTabComponent()} && $_operationComponentInstance.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent(${_operationComponentInstance.getOperationNode().getTabComponent()}))
            #set($_tabWidget = $_operationComponentInstance.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent(${_operationComponentInstance.getOperationNode().getTabComponent()}))
        #else ##There is no tab specified on the action, nor on the operation
            #set($_tabWidget = ${_operationComponentInstance.getComponentDefinition().getWOComponent().getAllTabWidget().firstElement()})
        #end 
    #end
    ${_tabWidget.getWOComponent().getName()}.#upNameForWidget($_tabWidget)
#end

###macro(findSequenceTabTitle $_operationComponentInstance)#if($_operationComponentInstance.getOperationNode().getTabComponent() && $_operationComponentInstance.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent($_operationComponentInstance.getOperationNode().getTabComponent()))$_operationComponentInstance.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent($_operationComponentInstance.getOperationNode().getTabComponent()).getTabsTitleForGenerator()#else${_operationComponentInstance.getOperationNode().getFirstTabsTitle()}#end#end

#macro(createPage $_button1 $_ci $_nextci $_action)
                    #if ($_button1.isInRepetition() && $_button1.getHTMLListDescriptor().getRepetitionOperator().getEntity())
                        //TODO: do something with this entity (insert, save, revert,... it if required)
                        ${_button1.getHTMLListDescriptor().getRepetitionOperator().getEntity().getEntityClassName()} ${_button1.getHTMLListDescriptor().getRepetitionOperator().getEntity().getEntityClassName().toLowerCase()} = #if(!${_button1.getWOComponent().equals(${_ci.getComponentDefinition().getWOComponent()})})${_button1.getWOComponent().getName()}.#end objectFromItem${generator.capitalize(${_button1.getHTMLListDescriptor().getListName()})}(hiddenFieldValue, session(),null);
                        #set ($entityFetched = true)
                    #end
                    #foreach($b in $_nextci.getBindings())
                        #set($type = ${b.getBindingDefinition().getType().getBaseEntity()})
                        #if(${componentDefinition.getBindingDefinitionTyped($type)} && $type.isEOEntity())
                        if (${componentDefinition.getBindingDefinitionTyped($type).getVariableName()}.editingContext()==null) {
                            WDLEditingContext ec = new WDLEditingContext();
                            ((Session)session()).registerEC(ec);
                            ${componentDefinition.getBindingDefinitionTyped($type).getVariableName()}.addInDB(ec);
                        }    
                        ${componentDefinition.getBindingDefinitionTyped($type).getVariableName()}.editingContext().saveChanges();
                        #end
                   #end
                    #* If you prefer use a redirect, remove the # * * # and comment the next block
                    WORedirect redirect = new WORedirect(context());
                    @single redirect.setUrl(
                    ${_nextci.getComponentDefinition().getName()}.getUrlForOperation${generator.getJavaString($!{nextci.getOperationNode().getName()},$trueValue)}_${_nextci.getFlexoID()}(context()
                    #foreach($b in $_nextci.getBindings())
                        #set($type = ${b.getBindingDefinition().getType().getBaseEntity()})
                        #if($b.getBindingValue() && $b.getBindingValue().isStaticValue())
                          , ${b.getBindingValue().getCodeStringRepresentation()}
                        #elseif($type == $_button1.getHTMLListDescriptor().getRepetitionOperator().getEntity())
                          , $_button1.getHTMLListDescriptor().getRepetitionOperator().getEntity().getEntityClassName().toLowerCase()
                        #elseif(${componentDefinition.getBindingDefinitionTyped($type).getVariableName()})
                          , get${generator.capitalize(${componentDefinition.getBindingDefinitionTyped($type).getVariableName()})}()
                        #else
                        , null 
                        #end
                    #end
                    #if($_nextci.getComponentDefinition().getHasTabContainer())
                      #if($_action.getTabComponent() && $_nextci.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent($_action.getTabComponent()))
                        ,"$_nextci.getComponentDefinition().getWOComponent().getTabWidgetForTabComponent($_action.getTabComponent()).getTabKeyForGenerator()"
                      #else
                        , null 
                      #end
                    #end));~@end
                    return redirect; *#
                @singlereturn ${_nextci.getComponentDefinition().getName()}.createPageForOperation${generator.getJavaString($!{nextci.getOperationNode().getName()},$trueValue)}_${_nextci.getFlexoID()}(context()
                #foreach($b in $_nextci.getBindings())
                    #set($type = ${b.getBindingDefinition().getType().getBaseEntity()})
                    #if($b.getBindingValue() && $b.getBindingValue().isStaticValue())
                      , ${b.getBindingValue().getCodeStringRepresentation()}
                    #elseif($_button1.isInRepetition() && $type == ${_button1.repetition().getEntity()})
                      , globalIDFromItem${generator.capitalize(${_button1.getHTMLListDescriptor().getListName()})}(hiddenFieldValue)
                    #elseif(${componentDefinition.getBindingDefinitionTyped($type).getType().isEOEntity()})
                      , #javaAccessor(${componentDefinition.getBindingDefinitionTyped($type).getProperty()}).__globalID()
                    #elseif(${componentDefinition.getBindingDefinitionTyped($type).getProperty()})
                      , ${componentDefinition.getBindingDefinitionTyped($type).getProperty().getGetterName()}()
                    #else
                    , ${b.getBindingDefinition().getType().getDefaultValue()} 
                    #end
                #end
                #if($_nextci.getComponentDefinition().getHasTabContainer())
                    , #findNextPageTab($_action $_nextci)
                #end,ec);~@end
#end

#macro(createPagePrototype $_button1 $_ci $_nextci $_action)
                @singlereturn ${_nextci.getComponentDefinition().getName()}.createPageForOperation${generator.getJavaString($!{nextci.getOperationNode().getName()},$trueValue)}_${_nextci.getFlexoID()}(context()
                #foreach($b in $_nextci.getBindings())
                    #set($type = ${b.getBindingDefinition().getType().getBaseEntity()})
                    #if($b.getBindingValue() && $b.getBindingValue().isStaticValue())
                      , ${b.getBindingValue().getCodeStringRepresentation()}
                    #elseif($_button1.isInRepetition() && $type == ${_button1.repetition().getEntity()})
                      , null
                    #elseif(${componentDefinition.getBindingDefinitionTyped($type).getType().isEOEntity()})
                      , null
                    #elseif(${componentDefinition.getBindingDefinitionTyped($type).getProperty()})
                      , ${componentDefinition.getBindingDefinitionTyped($type).getProperty().getGetterName()}()
                    #else
                    , ${b.getBindingDefinition().getType().getDefaultValue()} 
                    #end
                #end
                #if($_nextci.getComponentDefinition().getHasTabContainer())
                  , #findNextPageTab($_action $_nextci)
                #end,ec);~@end
#end

#macro(getUrlParametersFromDA)
                #foreach($bindingDef in ${generator.getComponentDefinition().getBindingDefinitions()})
                #if(!${bindingDef.getType()})
                <null>
                        #elseif(${bindingDef.getType().isString()})
                String ${bindingDef.getVariableName()} = getStringValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
                        #elseif(${bindingDef.getType().isInteger()})
                Integer ${bindingDef.getVariableName()} = getIntegerValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
                        #elseif(${bindingDef.getType().isDouble()})
                Double ${bindingDef.getVariableName()} = getDoubleValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
					    #elseif(${bindingDef.getType().isLong()})
                Long ${bindingDef.getVariableName()} = getLongValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
                        #elseif(${bindingDef.getType().isChar()})
                Character ${bindingDef.getVariableName()} = getCharacterValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
                        #elseif(${bindingDef.getType().isBooleanPrimitive()})
                boolean ${bindingDef.getVariableName()} = booleanValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
                        #elseif(${bindingDef.getType().isBoolean()})
                Boolean ${bindingDef.getVariableName()} = getBooleanValueForKey(directAction.request(),"${bindingDef.getVariableName()}");
                        #elseif(${bindingDef.getType().isEOEntity()})
                            #if(${generator.isPrototype()})
                // NOT GENERATED IN PROTOTYPE MODE:    ${bindingDef.getType().getBaseEntity().getEntityClassName()} ${bindingDef.getVariableName()} = directAction.request().formValueForKey("${bindingDef.getVariableName()}")==null?null:${bindingDef.getType().getBaseEntity().getEntityClassName()}.objectWithID(Integer.valueOf((String)directAction.request().formValueForKey("${bindingDef.getVariableName()}")),directAction.context().session().defaultEditingContext());
                 #else
        EOKeyGlobalID ${bindingDef.getVariableName()}GlobalId = null;
                     #foreach($pkAttribute in ${bindingDef.getType().getBaseEntity().getPrimaryKeyAttributes()})
                         #if(${pkAttribute.getPrototype().getType().toString().equals("java.lang.Integer")})
        Integer ${bindingDef.getVariableName()}${pkAttribute.getName()} = null;
        try {${bindingDef.getVariableName()}${pkAttribute.getName()} = Integer.valueOf((String)directAction.request().formValueForKey("${bindingDef.getVariableName()}.${pkAttribute.getName()}"));} catch(Exception e) {}
                         #else
        Object ${bindingDef.getVariableName()}${pkAttribute.getName()} = directAction.request().formValueForKey("${bindingDef.getVariableName()}.${pkAttribute.getName()}");
                         #end
                         
                            #if(!$pksNotNull) #set($pksNotNull = "${bindingDef.getVariableName()}${pkAttribute.getName()} != null")
                            #else #set($pksNotNull = "$pksNotNull && ${bindingDef.getVariableName()}${pkAttribute.getName()} != null")
                            #end
                            
                            #if(!$pksParam) #set($pksParam = "${bindingDef.getVariableName()}${pkAttribute.getName()}")
                            #else #set($pksParam = "$pksParam, ${bindingDef.getVariableName()}${pkAttribute.getName()}")
                            #end
                     #end
                     
                if($pksNotNull) {
                    ${bindingDef.getVariableName()}GlobalId = EOKeyGlobalID.globalIDWithEntityName("${bindingDef.getType().getName()}",new Object[]{$pksParam});
                }
                 #end
                #end
        #end
#end

#macro(getUrlParameters)
    #foreach($bindingDef in ${generator.getComponentDefinition().getBindingDefinitions()})
            #if(${bindingDef.getType()} && (!${bindingDef.getType().isEOEntity()} || !${generator.isPrototype()}))
                #if(${bindingDef.getType().isBooleanPrimitive()})
          if(${bindingDef.getVariableName()})
                  #elseif(${bindingDef.getType().getBaseEntity().isPrimitiveType()})
          if(true)
                  #else
          if(${bindingDef.getVariableName()} != null)
                  #end
       
                #if(${bindingDef.getType().isEOEntity()})
                {
                    if(!${bindingDef.getVariableName()}.isTemporary())
                    {
                            #set($i = 0)
                            #foreach($pkAttribute in ${bindingDef.getType().getBaseEntity().getPrimaryKeyAttributes()})
                        dic.setObjectForKey(((EOKeyGlobalID)${bindingDef.getVariableName()}).keyValues()[$i], "${bindingDef.getVariableName()}.${pkAttribute.getName()}");
                                #set($i = $i + 1)
                            #end
                    }
        }
                #else
                    #if(${bindingDef.getType().isBooleanPrimitive()})
        dic.setObjectForKey(${bindingDef.getVariableName()}?"true":"false", "${bindingDef.getVariableName()}");
                    #else
        dic.setObjectForKey(${bindingDef.getVariableName()}, "${bindingDef.getVariableName()}");
                    #end
                #end
            #end
        #end
#end
## End of local macros
## Beginnning of template
#set($trueValue = true)
#set($componentInstances = ${generator.getNewVector()})
#void(${componentInstances.addAll(${componentDefinition.getComponentInstances()})})
#void($generator.sortVectorOfModelObject($componentInstances))

#if($componentDefinition.getHasTabContainer())
#set($hasTabContainer = !$componentDefinition.getWOComponent().getAllTabContainers().isEmpty())

#end
    /**
    * Returns <code>this</code> page initialized with arguments.
    * @param context the context of the request-response loop.
#foreach($bd in ${componentDefinition.getBindingDefinitions()})
    * @param $bd.getVariableName() #if(${bd.getType().isEOEntity()})the current ${bd.getType().getName()}.#end
    
#end   
    * @param ciID the component instance ID of the selected operation. This parameter can take one of the following values:<br>
    * <ul>
    #foreach($ci in $componentInstances)
    * <li> $ci.getFlexoID() (Operation @single${ci.getOperationNode().getName()})</li>~@end
    #end* </ul>
    * 
    * @return a ${entity.getClassName()} new page, initialized.
    */
    private static ${entity.getClassName()} createPage(WOContext context #pageParameters($componentDefinition), long ciID, EOEditingContext ec) {
@onereturn
        // TODO: check arguments of this method
        ${entity.getClassName()} nextPage = (${entity.getClassName()})WOApplication.application().pageWithName(${entity.getClassName()}.class.getName(), context);
#if(!$generator.isPrototype())
        if(ec==null) {
            ec = new WDLEditingContext();
            ((WDLSession)context.session()).registerEC(ec);
        }
        nextPage.ec = ec;
#end
#foreach($bd in ${componentDefinition.getBindingDefinitions()})
      #if(${bd.getType().isEOEntity()})
        #if(!$generator.isPrototype())          
        if(${bd.getVariableName()}GlobalId==null) {
            nextPage.${bd.getProperty().getFieldName()} = ${bd.getType().getBaseEntity().getEntityClassName()}.new${bd.getType().getBaseEntity().getEntityClassName()}(#if(${bd.getType().getBaseEntity().hasCreatorProperty()})nextPage.currentUserLogin()#end);
            nextPage.${bd.getProperty().getFieldName()}.addInDB(ec);
        } else {
            nextPage.${bd.getProperty().getFieldName()} = (${bd.getType().getBaseEntity().getEntityClassName()})ec.faultForGlobalID(${bd.getVariableName()}GlobalId,ec);
        }
        #end
    #else
		#if(${bd.getProperty().hasAccessors()})
			nextPage.${bd.getProperty().getSetterName()}(${bd.getVariableName()});
		#else
			nextPage.${bd.getProperty().getFieldName()} = $bd.getVariableName();
		#end
    #end
#end
        nextPage._componentInstanceID = ciID;
		#if($generator.isPrototype())
            nextPage.session().setWorkflowComponentInstance(ciID);
        #end
        return nextPage;
@end    }

    /**
    * This method is usually called from within a WDLDirectAction class with argument <code>this</code>.
    * @param directAction a WDLDirectAction
    * @return a ${entity.getClassName()} new page, initialized with values from a direct action.
    */
    public static WOActionResults createPageForDirectAction(WDLDirectAction directAction) {
        // 1.get values from the request
        long ciID = longValueForKey(directAction.request(),"ci");
        if (ciID == 0)
            return directAction.pageNotFound("Missing or invalid parameter");
        #if(${hasTabContainer})
        String selectedTab = getStringValueForKey(directAction.request(), "tab");
        #end
        #getUrlParametersFromDA()
        // 2. Return the corresponding page
        // If parameters and access rights are OK, return the proper page.
        // If parameters are missing, return a pageNotFound (directAction.pageNotFound(String message)).
        // If the user cannot access this page, return an accessDenied page (directAction.accessDenied(String message)).
        #foreach($ci in $componentInstances)
        #set($operationName = "${generator.getJavaString($ci.getOperationNode().getName())}")
        #if($foreach.index>0)else#end if(ciID==#componentInstance($ci))
            #if(${hasTabContainer})
            return createPageForOperation${generator.getJavaString($!{ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(directAction.context() #pageParametersCall($componentDefinition),selectedTab, null);
            #else
            return createPageForOperation${generator.getJavaString($!{ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(directAction.context() #pageParametersCall($componentDefinition), null);            
            #end
        #end
        return directAction.pageNotFound("Invalid parameter : "+ciID+" is an invalid value for direct action :"+directAction.request().uri().toString()); 
    }
    
#foreach($ci in $componentInstances)
    /**
     * Use this constructor to use this page in the context of the operation : 
     * @single ${generator.getJavaDocString(${ci.getOperationNode().getName()})}: #if(!${ci.getOperationNode().getDontEscapeLatex()})${generator.getJavaDocString(${ci.getOperationNode().getDescription()})}#end @end@
     *
     * @param context the context of the request-response loop.
#foreach($bd in ${ci.getComponentDefinition().getBindingDefinitions()})
     * @param $bd.getVariableName() #if(${bd.getType().isEOEntity()})the current ${bd.getType().getName()}.#end
          
#end
     #if(${hasTabContainer})
     * @param selectedTab the key of the selected tab
     #end
     * @return a new instance of the page ${entity.getClassName()} correctly initialized.
     **/
    #if(${hasTabContainer})
    public static ${entity.getClassName()} createPageForOperation${generator.getJavaString($!{ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(WOContext context #pageParameters($componentDefinition), String selectedTab, EOEditingContext ec) {
    #else
    public static ${entity.getClassName()} createPageForOperation${generator.getJavaString($!{ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(WOContext context #pageParameters($componentDefinition), EOEditingContext ec) {
    #end
    #if($generator.isPrototype())
        #foreach($b in $ci.getBindings())
          #set($bd = $b.getBindingDefinition())
          #if(${bd.getType()} && !${bd.getType().isPrimitive()} && $b.getBindingValue() && $b.getBindingValue().isStaticValue())
        if(${bd.getVariableName()}==null)
            ${bd.getVariableName()} = ${b.getBindingValue().getCodeStringRepresentation()};
          #end
        #end
    #end
        ${entity.getClassName()} nextPage = createPage(context #pageParametersCall($componentDefinition), #componentInstance($ci), ec);
    #if(${hasTabContainer})
        if (selectedTab!=null)
		{
			#foreach($tabContainerTitle in $componentDefinition.getWOComponent().getAllTabContainers())
				nextPage.set#capNameForWidget(${tabContainerTitle})SelectedTab(selectedTab);
			#end
        }
    #end
        return nextPage;
    }
#end
    /**
     * Use it to retrieve the direct action url to invoke to instanciate this page in context the operation : 
     *
     * @param context the context of the request-response loop.
#foreach($bd in ${ci.getComponentDefinition().getBindingDefinitions()})
     * @param $bd.getVariableName() #if(${bd.getType().isEOEntity()})the current ${bd.getType().getName()}.#end
     
#end
     #if(${hasTabContainer})
     * @param selectedTab the key of the selected tab
     #end
     * @param ciID the component instance ID of the selected operation
     * @return a new instance of the page ${entity.getClassName()} correctly initialized.
     **/
    #if( ${hasTabContainer} )
    public static String getUrlForOperation(WOContext context #pageParameters($componentDefinition), String selectedTab, long ciID){
    #else
    public static String getUrlForOperation(WOContext context #pageParameters($componentDefinition), long ciID){
    #end
        #foreach($ci in $componentInstances)
        if(ciID==#componentInstance($ci)) // @single Equivalent to operation ${ci.getOperationNode().getName()}~@end
            #if(${hasTabContainer})
            return getUrlForOperation${generator.getJavaString(${ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(context #pageParametersCall($componentDefinition), selectedTab);
            #else
            return getUrlForOperation${generator.getJavaString(${ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(context #pageParametersCall($componentDefinition));
            #end
        #end
        return null;
    }


#foreach($ci in $componentInstances)
    /**
    * Returns the url that opens this page in the context of operation :
    * ${generator.getJavaDocString(${ci.getOperationNode().getName()})}
    * @return the url that opens this page.
    */
    #if( ${hasTabContainer} )
    public static String getUrlForOperation${generator.getJavaString(${ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(WOContext context #pageParameters($componentDefinition), String selectedTab){
    #else
    public static String getUrlForOperation${generator.getJavaString(${ci.getOperationNode().getName()},$trueValue)}_$ci.getFlexoID()(WOContext context #pageParameters($componentDefinition)){
    #end
        NSMutableDictionary dic = new NSMutableDictionary();
        dic.setObjectForKey(#componentInstance($ci), "ci"); // @single Equivalent to operation ${ci.getOperationNode().getName()}~@end
        #if(${hasTabContainer})
        if(selectedTab!=null) 
            dic.setObjectForKey(selectedTab,"tab");
        #end
        #getUrlParameters()
        return context.directActionURLForActionNamed("${project.getPrefix()}DA/open${entity.getClassName()}", dic);
    }
#end


#set($hash = ${generator.getNewTreeMap()})

#foreach($ci in $componentInstances)
    /**
     * This method is called by the general formAction method iff this page is in the context of the operation : 
     * @single${ci.getOperationNode().getName()}~@end
     #if(${ci.getOperationNode().getDescription()} && !${ci.getOperationNode().getDontEscapeLatex()})
     * ${generator.getJavaDocString(${ci.getOperationNode().getDescription()})}
     #end
     * @return the response to the current request 
     * @see ${entity.getClassName()}#formAction()
     */
    private WOActionResults formAction$ci.getFlexoID()(){
    #foreach($action in ${ci.getOperationNode().getAllActionNodes()} )
        #set($button = $action.getAssociatedButtonWidget())
        #if($button && ($button.getSubmitForm() || $button.isInRepetition())) 
            #if($generator.isPrototype())
            ## -------------- START PROTOTYPE CASE -------------- 
                #set($workflowPathList = ${action.getNextOperationsForAction()})

                #set($hidden = "#upNameForWidget($button)")
				#if(!${button.getWOComponent().equals(${ci.getComponentDefinition().getWOComponent()})})
					#set($hidden = "${button.getWOComponent().getName()}.$hidden")
				#end

				#if (${button.isInRepetition()} || ${workflowPathList.size()} > 1) 
                  if(hiddenFieldValue.startsWith($hidden)) {
				#else 
                  if(hiddenFieldValue.equals($hidden)) {
				#end
				
				#set($actionID = "${action.getName()}In${action.getOperationNode().getName()}_${action.getFlexoID()}")
				#set($actionID = "$generator.capitalize($generator.getJavaString($actionID))")
				#if($button.getIsValidatingForm())
					#validationCode($button)
				#end
				#customMethodCall($button)
				return perform$actionID();
              }
            ## -------------- END PROTOTYPE CASE -------------- 
            #else 
            ##  -------------- START HCWOAPPLICATION CASE -------------- 
                #if (!$button.isInRepetition()) 
                      if(hiddenFieldValue.equals(#if(!${button.getWOComponent().equals(${ci.getComponentDefinition().getWOComponent()})})${button.getWOComponent().getName()}.#end#upNameForWidget($button))) {
                  #else 
                      if(hiddenFieldValue.startsWith(#if(!${button.getWOComponent().equals(${ci.getComponentDefinition().getWOComponent()})})${button.getWOComponent().getName()}.#end#upNameForWidget($button))) {
                  #end
                  #set($actionID = "${action.getName()}In${action.getOperationNode().getName()}_${action.getFlexoID()}")
                  #set($actionID = "$generator.capitalize($generator.getJavaString($actionID))")
                          #validationCode($button)
                          #customMethodCall($button)
                          return perform$actionID();
                      }
            #end 
            ## -------------- END HCWOAPPLICATION CASE -------------- 
        #end ## End of button
    #end
        return null;
    }
    
    #foreach($action in ${ci.getOperationNode().getAllActionNodes()})
        #set($button1 = $action.getAssociatedButtonWidget())
        #if($button1)
			#if($button1.getSubmitForm() || ${button1.isInRepetition()})
                /**
                 * $button1.getCalculatedLabel() has been pressed (this is linked to
                 * @single${action.getProcess().getName().trim()}-->${action.getAbstractActivityNode().getName()}-->${action.getOperationNode().getName()}-->${action.getName().trim()})~@end
                #if( ${action.getDescription()} && !${action.getDontEscapeLatex()})
                 * ${generator.getJavaDocString(${action.getDescription()})}
                #end
                 * @return the response to the current request
                 **/
				#set($actionID = "${action.getName()}In${action.getOperationNode().getName()}_${action.getFlexoID()}")
				#set($actionID = "$generator.capitalize($generator.getJavaString($actionID))")
				private WOActionResults perform$actionID() {
					//TODO: insert here the business logic linked to this action node
            		#set($workflowPathList = ${action.getNextOperationsForAction()})
                    #if($workflowPathList.size()>0 )
						
						#if($generator.isPrototype()) 
    						#if(${workflowPathList.size()} > 1)
								#set($prefix = "");
								#if(!${button1.getWOComponent().equals(${ci.getComponentDefinition().getWOComponent()})})
									#set($prefix = "${button1.getWOComponent().getName()}.")
								#end
    							#if (!$button1.isInRepetition()) 
    								#set($condition = "hiddenFieldValue.equals(${prefix}#upNameForWidget($button1))")
    							#else
    								#foreach($workflowPath in $workflowPathList)
    									#set($nextop = ${workflowPath.getOperationNode()})
                        				#if(!$nextop)
                        					#set($nextop = ${ci.getOperationNode()})
    									#end
    									#if($foreach.index)#set($condition = "$condition && ")#end
    									#set($condition = "$condition !hiddenFieldValue.equals(${prefix}#upNameForWidget($button1)+#componentInstance($nextop.getComponentInstance()))")
    								#end
    							#end
    							if($condition) {
									#if ($button1.isInRepetition())
            							#set($listProcess = ${button1.getHTMLListDescriptor().getRepetitionOperator().getInferredListProcess()})
            							#if($listProcess)
                    						Integer itemId = Integer.valueOf(hiddenFieldValue.substring(#upNameForWidget($button1)).length()));
            								getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${listProcess.getProcessDictionaryKey()}, itemId);
            							#end
            						#end
								
    								Map<String, String> availableOperations = #if(!${button1.getWOComponent().equals(${ci.getComponentDefinition().getWOComponent()})})((${button1.getWOComponent().getName()})__tabInstances.get(${button1.getWOComponent().getName()}.class)).#end getOperations#capNameForWidget($button1)(getOperationComponentInstanceID());
    								if(availableOperations.size() == 0)
    									return null;
    								if(availableOperations.size() > 1)
    								{
    									selectOperationMap = availableOperations;
    									return null;
    								}
    								
    								hiddenFieldValue = availableOperations.keySet().iterator().next();
    							}
							#end
						#end
						
            			#foreach($workflowPath in $workflowPathList)
            				#set($nextop = ${workflowPath.getOperationNode()})
            				#if(!$nextop)
            					#set($nextop = ${ci.getOperationNode()})
            				#end
            				#set($nextci = $nextop.getComponentInstance())
            				#set($entityFetched = false)
            				
            				## -------------- START PROTOTYPE CASE -------------- 
            				#if($generator.isPrototype()) 
            					#if(${workflowPathList.size()}>1)
            						#set($hidden = "#upNameForWidget($button1)+#componentInstance($nextop.getComponentInstance())")
            					#else
            						#set($hidden = "#upNameForWidget($button1)")
            					#end
            					#if(!${button1.getWOComponent().equals(${ci.getComponentDefinition().getWOComponent()})})
            						#set($hidden = "${button1.getWOComponent().getName()}.$hidden")
            					#end
            	
            					#if (${foreach.index}>0)else #end
            					#if (!$button1.isInRepetition()) 
            						if(hiddenFieldValue.equals($hidden)) {
            					#else 
            						if(hiddenFieldValue.startsWith($hidden)) {
								#end
								#set($nextopProcessInstanceSet = false)
            					#if(${workflowPath.getCreatedProcesses().size()} > 0)
            						ProcessBusinessData newProcessBusinessData;
            						#foreach($createdProcess in ${workflowPath.getCreatedProcesses()})
            							newProcessBusinessData = getBusinessDataStorage().createNewProcessBusinessData(WorkflowProcess.${createdProcess.getProcessDictionaryKey()});
            							
										getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${createdProcess.getProcessDictionaryKey()}, newProcessBusinessData);
										
            							#if(${nextop.getProcess()} == $createdProcess)
            								#set($nextopProcessInstanceSet = true)
            							#end
            						#end
            					#end
            					
								#if ($button1.isInRepetition())
									#set($listProcess = ${button1.getHTMLListDescriptor().getRepetitionOperator().getInferredListProcess()})
									#if($listProcess)
										#if(!$nextopProcessInstanceSet)
											Integer itemId = Integer.valueOf(hiddenFieldValue.substring(($hidden).length()));
											getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${listProcess.getProcessDictionaryKey()}, itemId);
											#if($listProcess != ${nextop.getProcess()} && ${listProcess.isAncestorOf($nextop.getProcess())})
												Vector<? extends ProcessBusinessData> children = getBusinessDataStorage().getBusinessDataSample(WorkflowProcess.${listProcess.getProcessDictionaryKey()}.getBusinessDataClass(), itemId).getDescendantsBusinessData(WorkflowProcess.${listProcess.getProcessDictionaryKey()}, WorkflowProcess.${nextop.getProcess().getProcessDictionaryKey()});
												if(children.size() > 0)
													getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${nextop.getProcess().getProcessDictionaryKey()}, children.get(0));
											#end
										#end
									#end
								#elseif(!$nextopProcessInstanceSet && !${nextop.getProcess().isAncestorOf($ci.getOperationNode().getProcess())})
									#foreach($repetitionOperator in ${button1.getWOComponent().getAllRepetitionOperator()})
										#set($repetitionProcess = ${repetitionOperator.getHTMLListDescriptor().getRepetitionOperator().getInferredListProcess()})
										#if($repetitionProcess && (${nextop.getProcess()} == $repetitionProcess || (${nextop.getProcess()} != ${ci.getOperationNode().getProcess()} && (${nextop.getProcess().isAncestorOf($repetitionProcess)} || ${repetitionProcess.isAncestorOf($nextop.getProcess())}))))
											#set($selectorName = ${generator.getNewHolder()})
											#getSingleJavaSelectorVariableNameForRepetitionOp($repetitionOperator $selectorName)
											#set($selectorName = ${selectorName.get()})
											#if($selectorName)
												getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${repetitionProcess.getProcessDictionaryKey()}, (ProcessBusinessData)$selectorName);
												#if($repetitionProcess != ${nextop.getProcess()} && ${repetitionProcess.isAncestorOf($nextop.getProcess())})
    												Vector<? extends ProcessBusinessData> children = getBusinessDataStorage().getBusinessDataSample(WorkflowProcess.${repetitionProcess.getProcessDictionaryKey()}.getBusinessDataClass(), (ProcessBusinessData)$selectorName).getDescendantsBusinessData(WorkflowProcess.${repetitionProcess.getProcessDictionaryKey()}, WorkflowProcess.${nextop.getProcess().getProcessDictionaryKey()});
    												if(children.size() > 0)
    													getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${nextop.getProcess().getProcessDictionaryKey()}, children.get(0));
    											#end
											#else
											    #set($selectorName = ${generator.getNewHolder()})
												#getMultiJavaSelectorVariableNameForRepetitionOp($repetitionOperator $selectorName)
												#set($selectorName = ${selectorName.get()})
												#if($selectorName)
                                                    if(${selectorName}.objectEnumerator().hasMoreElements())
                                                    {
                                                    	ProcessBusinessData dic = (ProcessBusinessData) ${selectorName}.objectEnumerator().nextElement();
														
														getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${repetitionProcess.getProcessDictionaryKey()}, dic);
        												#if($repetitionProcess != ${nextop.getProcess()} && ${repetitionProcess.isAncestorOf($nextop.getProcess())})
            												Vector<? extends ProcessBusinessData> children = getBusinessDataStorage().getBusinessDataSample(WorkflowProcess.${repetitionProcess.getProcessDictionaryKey()}.getBusinessDataClass(), dic.getId()).getDescendantsBusinessData(WorkflowProcess.${repetitionProcess.getProcessDictionaryKey()}, WorkflowProcess.${nextop.getProcess().getProcessDictionaryKey()});
            												if(children.size() > 0)
            													getBusinessDataStorage().setCurrentProcessBusinessData(WorkflowProcess.${nextop.getProcess().getProcessDictionaryKey()}, children.get(0));
            											#end
                                                    }
												#end
											#end
										#end
									#end
            					#end
            					
            					#foreach($newStatus in ${workflowPath.getNewStatuses()})
            						getBusinessDataStorage().setCurrentProcessBusinessDataStatus(WorkflowProcess.${newStatus.getProcess().getProcessDictionaryKey()}, "${newStatus.getName()}");
            					#end
            					
            					#if (!$button1.isInRepetition())
            						#saveChanges($button1)
            					#elseif($button1.getIsSavingChanges() && $listProcess)
                    				Enumeration en = ${button1.getHTMLListDescriptor().getDisplayGroupName()}().allObjects().objectEnumerator();
                                    while(en.hasMoreElements())
                                    {
                                    	ProcessBusinessData dic = (ProcessBusinessData) en.nextElement();
                    					if(itemId.equals(dic.getId()))
        								{
                    						getBusinessDataStorage().saveProcessBusinessData(WorkflowProcess.${listProcess.getProcessDictionaryKey()}.getBusinessDataClass(), dic);
        									break;
        								}
                                    }
            					#end
            					
								#set($hasEnDelete = $false)
            					#foreach($deletedProcess in ${workflowPath.getDeletedProcesses()})
            						#if(${nextop.getProcess()} != $deletedProcess)
										#if($deletedProcess == ${ci.getOperationNode().getProcess()})
											getBusinessDataStorage().deleteCurrentProcessBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()});
										#else
    										#if (${button1.isInRepetition()})
    											#if(${deletedProcess.isAncestorOf($listProcess)})
													#if($deletedProcess != $listProcess)
														getBusinessDataStorage().deleteProcessBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}.getBusinessDataClass(), getBusinessDataStorage().getBusinessDataSample(WorkflowProcess.${listProcess.getProcessDictionaryKey()}.getBusinessDataClass(), itemId).getAncestorBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}));
													#else
														getBusinessDataStorage().deleteProcessBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}.getBusinessDataClass(), itemId);
													#end
    												${button1.getHTMLListDescriptor().getDisplayGroupName()} = null;
    											#end
    										#else
                                    			#foreach($repetitionOperator in ${button1.getWOComponent().getAllRepetitionOperator()})
    												#set($repetitionProcess = ${repetitionOperator.getHTMLListDescriptor().getRepetitionOperator().getInferredListProcess()})
    												#if($repetitionProcess && ${deletedProcess.isAncestorOf($repetitionProcess)})
														#set($selectorName = $null)
														#set($selectorName = ${generator.getNewHolder()})
        												#getMultiJavaSelectorVariableNameForRepetitionOp($repetitionOperator $selectorName)
        												#set($selectorName = ${selectorName.get()})
        												#if($selectorName)
                                            				#if(!$hasEnDelete)Enumeration#end enDelete = ${selectorName}.objectEnumerator();
                                                            while(enDelete.hasMoreElements())
                                                            {
                                                            	ProcessBusinessData dic = (ProcessBusinessData) enDelete.nextElement();
																#if($deletedProcess != $repetitionProcess)
																	dic = dic.getAncestorBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()});
																#end
        														getBusinessDataStorage().deleteProcessBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}.getBusinessDataClass(), dic);
                                                            }
        													${repetitionOperator.getHTMLListDescriptor().getDisplayGroupName()} = null;
															#set($hasEnDelete = $true)
														#else
														    #set($selectorName = ${generator.getNewHolder()})
															#getSingleJavaSelectorVariableNameForRepetitionOp($repetitionOperator $selectorName)
															#set($selectorName = ${selectorName.get()})
															#if($selectorName)
																#if($deletedProcess != $repetitionProcess)
																	getBusinessDataStorage().deleteProcessBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}.getBusinessDataClass(), ((ProcessBusinessData) ${selectorName}).getAncestorBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}));
																#else
																	getBusinessDataStorage().deleteProcessBusinessData(WorkflowProcess.${deletedProcess.getProcessDictionaryKey()}.getBusinessDataClass(), (ProcessBusinessData) ${selectorName});
																#end
            													${repetitionOperator.getHTMLListDescriptor().getDisplayGroupName()} = null;
            												#end
														#end
													#end
                                    			#end
    										#end
										#end
									#else
									// Caca boudin
										//This operation should delete the current process instance but the next operation is still in this process !
            						#end
            					#end
            					
            					#if(${workflowPath.getOperationNode()})
            						#createPagePrototype($button1 $ci $nextci $action)
            					#else
            						return null;
            					#end
            					}
                                  
            				## -------------- END PROTOTYPE CASE -------------- 
            				##  -------------- START HCWOAPPLICATION CASE -------------- 
            				#else 
            					#if (${foreach.index}>0)/*#end ## If there are several next operations, then we write one down and comment all the other ones.
                    				#**
                                    #if($newStatus && ${action.getOperationNode().getBusinessDataBinding().getVariableName()})
                                        #set($importIBusiness = 'be.denali.flexo.commons.hcwo.IBusinessData')
                                    if(hasBinding("${action.getOperationNode().getBusinessDataBinding().getVariableName()}"))
                                        (($importIBusiness)valueForBinding("${action.getOperationNode().getBusinessDataBinding().getVariableName()}")).setStatus("$newStatus.getName()");
                    				#end
                    				**#
            						#saveChanges($button1)
            						#createPage($button1 $ci $nextci $action)
            						#if (${foreach.index}>0)*/#end
            				## -------------- END HCWOAPPLICATION CASE -------------- 
            				#end    
            				#set ($entityFetched=false)
            			#end ## End of foreach nextoperation
            		#else ## No next operations
                      return null;
                    #end 
                    #if($generator.isPrototype() && $action.getNextOperationsForAction().size()>0)
                        return null;
                    #end
    			}
			#end ## end of if submitForm
		#end ## end of if button
	#end ## end of foreach actionnodes
#end ## foreach component instances
