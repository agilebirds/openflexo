import be.denali.core.utils.HelpPopupDescriptor;
import be.denali.core.utils.HelpPopupDescriptor.ButtonDescriptor;
import be.denali.core.woapp.WDLComponent;

import com.webobjects.appserver.WOActionResults;
import com.webobjects.appserver.WOApplication;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WOResponse;


/**
 * Login Page. Generated by Flexo.
 *
 * @author OpenFlexo Generator, Agile Birds sprl. (see www.OpenFlexo.com)
 */
public class ${project.getPrefix()}HelpPopup extends WDLComponent {
    
	private String _key;
    public String submittedKey;
    public HelpPopupDescriptor help;
    public String helpDescriptionKey;
    public HelpPopupDescriptor itemHelp;
    public ButtonDescriptor itemButton;

    public ${project.getPrefix()}HelpPopup(WOContext context) {
        super(context);
    }

    public String itemButtonUniqueID() {
        return "button_" + help.buttons().indexOf(itemButton);
    }

    public static ${project.getPrefix()}HelpPopup createPage(String key, WOContext c) {
        ${project.getPrefix()}HelpPopup nextPage = (${project.getPrefix()}HelpPopup) WOApplication.application().pageWithName("${project.getPrefix()}HelpPopup", c);
        nextPage._key = key;
        nextPage.setHelp(((Application) Application.application()).helpPopupDescriptorForKey(key));
        return nextPage;
    }

    public WOActionResults formAction() {
        if (submittedKey == null) {
            return null;
        }
        if (submittedKey.equals(_key)) {
            return null;
        }
        return createPage(submittedKey, context());
    }

    private void setHelp(HelpPopupDescriptor _help) {
        help = _help;
    }

    public String title() {
        return "Help for " + help.longLabel();
    }

    public void appendToResponse(WOResponse arg0, WOContext arg1) {
        super.appendToResponse(arg0, arg1);
    }

    public String scriptForItemHelpJump() {
        return "document.formName.hiddenFieldName.value='" + itemHelp.id() + "';document.formName.submit();return false;";
    }

    public String helpDescriptionForKey()
    {
    	return help.specificDescriptions().get(helpDescriptionKey);
    }
    
    public String getItemButtonDescription()
    {
    	StringBuilder sb = new StringBuilder();
    	for(String desc : itemButton.getButtonSpecificDescriptions().values())
    	{
    		if(sb.length()>0)
    			sb.append("<br/>");
    		sb.append(desc);
    	}
    	
    	return sb.toString();
    }
}

